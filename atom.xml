<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>the kingzez blog</title>
  <subtitle>step by step and never look back</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kingzez.com/"/>
  <updated>2017-04-11T07:21:31.000Z</updated>
  <id>http://kingzez.com/</id>
  
  <author>
    <name>kingzez</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深入浅出this的理解</title>
    <link href="http://kingzez.com/2017/04/11/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAthis%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>http://kingzez.com/2017/04/11/深入浅出this的理解/</id>
    <published>2017-04-11T02:45:18.000Z</published>
    <updated>2017-04-11T07:21:31.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>this</code>在js中一直是谜一样的存在着，在面试中也是经常会被问道，接下来总结下我所理解的<code>this</code>。
<a id="more"></a>首先引入<a href="http://bonsaiden.github.io/JavaScript-Garden/zh/#function.this" target="_blank" rel="external">秘密花园</a>中对this的工作原理，文中指出有五种情况，分别是：</p>
<ul>
<li>全局范围内</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>;	<span class="comment">//在全局范围内使用`this`，它将会指向全局对象</span></div></pre></td></tr></table></figure>
<ul>
<li>函数调用</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">foo();	<span class="comment">//this指向全局对象</span></div></pre></td></tr></table></figure>
<ul>
<li>方法调用</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">test.foo();	<span class="comment">//this指向test对象</span></div></pre></td></tr></table></figure>
<ul>
<li>调用构造函数</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">new</span> foo();	<span class="comment">//函数与new一块使用即构造函数，this指向新创建的对象</span></div></pre></td></tr></table></figure>
<ul>
<li>显式的设置this</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">a, b, c</span>) </span>&#123;&#125;</div><div class="line"><span class="keyword">var</span> bar = &#123;&#125;;</div><div class="line">foo.apply(bar, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);	<span class="comment">//this被设置成bar</span></div><div class="line">foo.call(bar, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);	<span class="comment">//this被设置成bar</span></div></pre></td></tr></table></figure>
<h4 id="从函数调用理解this"><a href="#从函数调用理解this" class="headerlink" title="从函数调用理解this"></a>从函数调用理解this</h4><p>有这样一道题</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">	<span class="attr">func</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> foo = obj.func;</div><div class="line">obj.func() <span class="comment">//this是obj</span></div><div class="line">foo() <span class="comment">//this是window</span></div></pre></td></tr></table></figure>
<p>解释函数结果为什么不一样？</p>
<p>这道题可以从函数调用来理解，从我看到的博文中有这样的解释，秘密花园中的函数调用，方法调用，显式的设置this都属于函数调用，相当于函数调用的三种方式，可以写成</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">foo(params);</div><div class="line">obj.child.foo(params);</div><div class="line">foo.call(context, params); <span class="comment">//apply同理</span></div></pre></td></tr></table></figure>
<p>而且前两种都可以写成第三种形式</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">foo(params); =&gt;&gt; foo.call(<span class="literal">undefined</span>, params);</div><div class="line">obj.child.foo(); =&gt;&gt; obj.child.foo.call(obj.child, params);</div></pre></td></tr></table></figure>
<p>所以说函数调用都是<code>foo.call(context, params)</code>的变体，即函数调用只有一种。这样<code>this</code>的值就是文中的<code>context</code>，<code>this</code>就是你函数调用时传入的<code>context</code>。</p>
<p>举例代码中：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">&#125;</div><div class="line">foo();</div></pre></td></tr></table></figure>
<p>当你无法确认<code>this</code>指代的值时，转化成<code>call</code>形式会更好理解</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">&#125;</div><div class="line">foo.call(<span class="literal">undefined</span>); <span class="comment">//or foo.call();</span></div></pre></td></tr></table></figure>
<p>函数执行结果为<code>window</code>，在浏览器中有一条规定，传入<code>context</code>为<code>null</code>或<code>undefined</code>时，则为全局对象（window对象）；严格模式下<code>context</code>为<code>undefined</code>。</p>
<p>举例代码中：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">	<span class="attr">func</span>: <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">obj.foo();</div></pre></td></tr></table></figure>
<p>转化为<code>call</code>形式为</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">	<span class="attr">func</span>: <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">obj.foo.call(obj);</div></pre></td></tr></table></figure>
<p>很明显，<code>this</code>指代obj。</p>
<h4 id="Event-Handler-中的this"><a href="#Event-Handler-中的this" class="headerlink" title="Event Handler 中的this"></a>Event Handler 中的this</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">btn.addEventListener(<span class="string">'click'</span> ,<span class="function"><span class="keyword">function</span> <span class="title">handler</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>) <span class="comment">// 请问这里的 this 是什么</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>handler 中的<code>this</code>是什么？用上面的方法好像没法转化了，因为不知道<code>addEventListener</code>内源码实现，查看文档<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/addEventListener#The_value_of_this_within_the_handler" target="_blank" rel="external">MDN</a></p>
<blockquote>
<p>通常来说this的值是触发事件的元素的引用，这种特性在多个相似的元素使用同一个通用事件监听器时非常让人满意。</p>
<p>当使用 addEventListener() 为一个元素注册事件的时候，句柄里的 this 值是该元素的引用。其与传递给句柄的 event 参数的 currentTarget 属性的值一样。</p>
</blockquote>
<p>所以可以假设浏览器addEventListener是这样实现的</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 当事件被触发时</span></div><div class="line">handler.call(event.currentTarget, event) <span class="comment">// this =&gt; event.currentTarget</span></div></pre></td></tr></table></figure>
<p>以上就是对<code>this</code>的理解。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;this&lt;/code&gt;在js中一直是谜一样的存在着，在面试中也是经常会被问道，接下来总结下我所理解的&lt;code&gt;this&lt;/code&gt;。
    
    </summary>
    
      <category term="js" scheme="http://kingzez.com/categories/js/"/>
    
    
      <category term="this" scheme="http://kingzez.com/tags/this/"/>
    
  </entry>
  
  <entry>
    <title>Git使用相关集锦</title>
    <link href="http://kingzez.com/2017/04/10/git%E4%BD%BF%E7%94%A8%E7%9B%B8%E5%85%B3%E9%9B%86%E9%94%A6/"/>
    <id>http://kingzez.com/2017/04/10/git使用相关集锦/</id>
    <published>2017-04-10T07:30:38.000Z</published>
    <updated>2017-04-10T07:27:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>总结之前写过的git相关文章，编成目录，也方便自己查看
<a id="more"></a></p>
<ol>
<li><a href="/2015/08/22/git创建ssh key/">Git创建ssh key</a></li>
<li><a href="/2015/08/23/git push冲突时解决方法/">git push冲突时解决方法或通过fetch来更新分支代码</a></li>
<li><a href="/2015/10/18/CentOS下搭建git服务器/">CentOS下搭建Git服务器</a></li>
<li><a href="/2015/10/19/如何完全删除gitosis/">如何完全删除gitosis</a></li>
<li><a href="/2015/12/20/人称git核弹级 filter-branch/">人称Git核弹级 filter-branch</a></li>
<li><a href="/2017/03/20/git-pull-强制覆盖local/">git-pull-强制覆盖local</a></li>
<li><a href="/2017/04/10/git重写最近一次历史/">Git重写最近一次历史</a></li>
<li><a href="/2017/04/10/Git-忽略已跟踪文件的改动/">Git忽略已跟踪文件的改动</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结之前写过的git相关文章，编成目录，也方便自己查看
    
    </summary>
    
      <category term="git" scheme="http://kingzez.com/categories/git/"/>
    
    
      <category term="git" scheme="http://kingzez.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Git忽略已跟踪文件的改动</title>
    <link href="http://kingzez.com/2017/04/10/Git-%E5%BF%BD%E7%95%A5%E5%B7%B2%E8%B7%9F%E8%B8%AA%E6%96%87%E4%BB%B6%E7%9A%84%E6%94%B9%E5%8A%A8/"/>
    <id>http://kingzez.com/2017/04/10/Git-忽略已跟踪文件的改动/</id>
    <published>2017-04-10T07:13:59.000Z</published>
    <updated>2017-04-11T01:10:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>在实际使用中，有时候不可避免会有操作失误，将系统文件添加到版本库中，这时要怎么忽略已跟踪的文件？通过以下步骤：
<a id="more"></a>
- 从 Git 的数据库中删除对于该文件的追踪；
- 把对应的规则写入 .gitignore，让忽略真正生效；
- commit＋push。
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git update-index --assume-unchanged</div></pre></td></tr></table></figure></p>
<p>作用是将此文件移出版本控制，git不会记录此文件的修改，这样再将该文件加到<code>.ignore</code>中，与之对应的是
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git update-index --no-assume-unchanged</div></pre></td></tr></table></figure></p>
<p>如果是操作失误，即将操作失误移出版本控制的文件重新标识为git可记录的文件</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在实际使用中，有时候不可避免会有操作失误，将系统文件添加到版本库中，这时要怎么忽略已跟踪的文件？通过以下步骤：
    
    </summary>
    
      <category term="git" scheme="http://kingzez.com/categories/git/"/>
    
    
      <category term="git" scheme="http://kingzez.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Git重写最近一次历史</title>
    <link href="http://kingzez.com/2017/04/10/git%E9%87%8D%E5%86%99%E6%9C%80%E8%BF%91%E4%B8%80%E6%AC%A1%E5%8E%86%E5%8F%B2/"/>
    <id>http://kingzez.com/2017/04/10/git重写最近一次历史/</id>
    <published>2017-04-10T07:01:56.000Z</published>
    <updated>2017-04-10T07:16:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>假设你刚刚提交的一个commit中有个错误，想修改一下commit的message，但是又不想在修改无意义的文件再次commit，这时需要使用命令<code>--amend</code>即重写最近的一次commit历史。
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit --amend</div></pre></td></tr></table></figure></p>
<p>或者
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit --amend -m <span class="string">"your new commit message"</span></div></pre></td></tr></table></figure></p>
<p>在amend之后，commit的时间不会被重写，如果想要重写commit的时间需要使用
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit --amend --reset-author</div></pre></td></tr></table></figure></p>
<p>其中需要注意的是amend命令重写上一个commit，所以在已经push了上一个commit的情况下，尽可能的不要使用amend。如果你执意要amend已经push的commit，一定要保证这个commit所在的分支只有你一个人，否则将给其他人带来毁灭性的打击，在amend之后使用<code>git push --force</code>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;假设你刚刚提交的一个commit中有个错误，想修改一下commit的message，但是又不想在修改无意义的文件再次commit，这时需要使用命令&lt;code&gt;--amend&lt;/code&gt;即重写最近的一次commit历史。
    
    </summary>
    
      <category term="git" scheme="http://kingzez.com/categories/git/"/>
    
    
      <category term="git" scheme="http://kingzez.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git pull 强制覆盖本地文件</title>
    <link href="http://kingzez.com/2017/03/20/git-pull-%E5%BC%BA%E5%88%B6%E8%A6%86%E7%9B%96local/"/>
    <id>http://kingzez.com/2017/03/20/git-pull-强制覆盖local/</id>
    <published>2017-03-20T14:55:46.000Z</published>
    <updated>2017-03-20T15:02:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>git pull 强制覆盖本地文件
<a id="more"></a>一旦远程主机的版本库有了更新（Git术语叫做commit），需要将这些更新取回本地，这时就要用到<code>git fetch</code>命令。<code>git fetch</code>命令通常用来查看其他人的进程，因为它取回的代码对你本地的开发代码没有影响。
默认情况下，<code>git fetch</code>取回所有分支（branch）的更新。如果只想取回特定分支的更新，可以指定分支名。
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git fetch --all</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git reset --hard origin/master</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git pull</div></pre></td></tr></table></figure>
<p>Done!😄</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;git pull 强制覆盖本地文件
    
    </summary>
    
      <category term="git" scheme="http://kingzez.com/categories/git/"/>
    
    
      <category term="git" scheme="http://kingzez.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>严格模式·Strict mode</title>
    <link href="http://kingzez.com/2017/03/20/Strict-mode/"/>
    <id>http://kingzez.com/2017/03/20/Strict-mode/</id>
    <published>2017-03-20T07:10:23.000Z</published>
    <updated>2017-03-21T02:10:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>ECMAScript5的严格模式是JavaScript中的一种限制性更强的变种方式。严格模式不是一个子集：它在语义上与正常代码有着明显的差异。<a id="more"></a>不支持严格模式的浏览器与支持严格模式的浏览器行为上也不一样，所以不要在未经严格模式特性测试情况下使用严格模式。严格模式可以与非严格模式共存，所以脚本可以逐渐的选择性加入严格模式。</p>
<p>严格模式在语义上与正常的JavaScript有一些不同。首先，严格模式会将JavaScript陷阱直接变成明显的错误。其次，严格模式修正了一些引擎难以优化的错误：同样的代码有些时候严格模式下会比非严格模式下更快。第三，严格模式禁用了一些有可能在未来版本中定义的语法。</p>
<p>如果你想让你的JavaScript代码在严格模式下运行，可以参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode" target="_blank" rel="external">转换成严格模式</a></p>
<blockquote>
<p>有时，你会看到符合规范的、非严格模式被称为”懒散模式”，这不是官方术语，但你应该注意到它</p>
</blockquote>
<h2 id="开启严格模式"><a href="#开启严格模式" class="headerlink" title="开启严格模式"></a>开启严格模式</h2><p>严格模式可以应用到整个script标签或个别函数中。不要再封闭大括号<code>{}</code>内这样做，在这样的上下文中这么做是没有任何效果的。在<code>eval</code>代码，Function代码，时间处理属性，传入setTimeout方法的字符串和包含整个脚本的块中开启严格模式会如预期一样工作。</p>
<h3 id="为某个script标签开启严格模式"><a href="#为某个script标签开启严格模式" class="headerlink" title="为某个script标签开启严格模式"></a>为某个script标签开启严格模式</h3><p>为整个script标签开启严格模式，需要在所有语句之前放一个特定语句<code>&quot;use strict&quot;;</code>或<code>&#39;use strict&#39;;</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 整个语句都开启严格模式的语法</span></div><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"><span class="keyword">var</span> v = <span class="string">"Hi!  I'm a strict mode script!"</span>;</div></pre></td></tr></table></figure>
<p>这种语法存在陷阱，不能盲目的合并冲突代码。试想合并一个严格模式的脚本和一个非严格模式的脚本：合并后的脚本代码看起来是严格模式。反之亦然：非严格合并严格看起来是非严格的。合并均为严格模式的脚本或均为非严格模式的都没问题，只有在合并严格模式与非严格模式有可能有问题。建议按一个个函数去开启严格模式（至少在学习的过渡期要这样做）。</p>
<p>您也可以将整个脚本的内容用一个函数包括起来，然后在这个外部函数中使用严格模式。这样做就可以消除合并的问题，但是这就意味着您必须要在函数作用域外声明一个全局变量。</p>
<h3 id="为某个函数开启严格模式"><a href="#为某个函数开启严格模式" class="headerlink" title="为某个函数开启严格模式"></a>为某个函数开启严格模式</h3><p>同样的，要给某个函数开启严格模式，得把<code>&quot;use strict&quot;</code>;  (或 <code>&#39;use strict&#39;;</code> )声明一字不漏地放在函数体所有语句之前。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">strict</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="comment">// 函数级别严格模式语法</span></div><div class="line"><span class="meta">  	'use strict'</span>;</div><div class="line">  	<span class="function"><span class="keyword">function</span> <span class="title">nested</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  		<span class="keyword">return</span> <span class="string">"And so am I!"</span>;</div><div class="line">  	&#125;</div><div class="line">  	<span class="keyword">return</span> <span class="string">"Hi!  I'm a strict mode function!  "</span> + nested();</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">notStrict</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="string">"I'm not strict."</span>; &#125;</div></pre></td></tr></table></figure>
<h2 id="严格模式有哪些不同"><a href="#严格模式有哪些不同" class="headerlink" title="严格模式有哪些不同"></a>严格模式有哪些不同</h2><p>严格模式同时改变了语法及运行时行为。变化通常分为这几类：将问题直接转化为错误（如语法错误或运行时错误）, 简化了如何为给定名称的特定变量计算，简化了 <code>eval</code> 以及 <code>arguments</code>, 将写”安全“JavaScript的步骤变得更简单，以及改变了预测未来ECMAScript行为的方式。</p>
<h3 id="将拼写错转成异常"><a href="#将拼写错转成异常" class="headerlink" title="将拼写错转成异常"></a>将拼写错转成异常</h3><p>在严格模式下, 先前被接受的拼写错误将会被认为是异常. JavaScript被设计为能使新人开发者更易于上手, 所以有时候会给本来错误操作赋予新的不报错误的语义(non-error semantics). 有时候这可以解决当前的问题, 但有时候却会给以后留下更大的问题. 严格模式则把这些失误当成错误, 以便可以发现并立即将其改正.</p>
<p>首先，严格模式下无法在意外创建全局变量。在普通的JavaScript里面给一个拼写错误的变量名赋值会使全局对象新增一个属性并继续“工作”（尽管后面可能出错：在现在的JavaScript中有可能）。严格模式中意外创建全局变量被抛出错误替代：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line">                       <span class="comment">// 假如有一个全局变量叫做mistypedVariable</span></div><div class="line">mistypedVaraible = <span class="number">17</span>; <span class="comment">// 因为变量名拼写错误</span></div><div class="line">                       <span class="comment">// 这一行代码就会抛出 ReferenceError</span></div></pre></td></tr></table></figure></p>
<p>其次，严格模式会引起静默失败（silently fail，注：不报错也没有任何效果）的赋值操作抛出异常。例如NaN是一个不可写的全局变量，在正常模式下，给NaN赋值不会产生任何作用，开发者也不会受到任何错误反馈。但在严格模式下，给NaN赋值会抛出异常，任何在正常模式下引起静默失败的赋值操作（给不可写属性赋值，给只读属性（getter-only）赋值，给不可扩展对象（non-extensible object）的新属性赋值）都会抛出异常。
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"></div><div class="line"><span class="comment">// 给不可写属性赋值</span></div><div class="line"><span class="keyword">var</span> obj1 = &#123;&#125;;</div><div class="line"><span class="built_in">Object</span>.defineProperty(obj1, <span class="string">"x"</span>, &#123; <span class="attr">value</span>: <span class="number">42</span>, <span class="attr">writable</span>: <span class="literal">false</span> &#125;);</div><div class="line">obj1.x = <span class="number">9</span>; <span class="comment">// 抛出TypeError错误</span></div><div class="line"></div><div class="line"><span class="comment">// 给只读属性赋值</span></div><div class="line"><span class="keyword">var</span> obj2 = &#123; get x() &#123; <span class="keyword">return</span> <span class="number">17</span>; &#125; &#125;;</div><div class="line">obj2.x = <span class="number">5</span>; <span class="comment">// 抛出TypeError错误</span></div><div class="line"></div><div class="line"><span class="comment">// 给不可扩展对象的新属性赋值</span></div><div class="line"><span class="keyword">var</span> fixed = &#123;&#125;;</div><div class="line"><span class="built_in">Object</span>.preventExtensions(fixed);</div><div class="line">fixed.newProp = <span class="string">"ohai"</span>; <span class="comment">// 抛出TypeError错误</span></div></pre></td></tr></table></figure></p>
<p>第三, 在严格模式下, 试图删除不可删除的属性时会抛出异常(之前这种操作不会产生任何效果):
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">"use strcit"</span>;</div><div class="line"><span class="keyword">delete</span> <span class="built_in">Object</span>.prototype; <span class="comment">// 抛出TypeError错误</span></div></pre></td></tr></table></figure></p>
<p>第四，在Gecko版本34之前，严格模式要求一个对象内的所有属性名在对象内必须唯一。正常模式下重名属性是允许的，最后一个重名的属性决定其属性值。因为只有最后一个属性起作用，当代码要去改变属性值而不是修改最后一个重名属性的时候，复制这个对象就产生一连串的bug。在严格模式下，重名属性被认为是语法错误：</p>
<blockquote>
<p>这个问题在ECMAScript6中已经不存在</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"><span class="keyword">var</span> o = &#123;<span class="attr">p</span>: <span class="number">1</span>, <span class="attr">p</span>:<span class="number">2</span>&#125;; <span class="comment">//语法错误</span></div></pre></td></tr></table></figure>
<p>第五，严格模式要求函数的参数名唯一，在正常模式下，最后一个重名参数名会掩盖之前的重名参数，之前的参数仍然可以通过<code>arguments[i]</code>来访问，还不是因为完全无法访问，然而在这种隐藏毫无意义而且可能是意料之外的（比如它可能本来是打错的），所以在严格模式下重名参数被认为是语法错误：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a, a, c</span>)</span>&#123; <span class="comment">// !!! 语法错误</span></div><div class="line"><span class="meta">  "use strict"</span>;</div><div class="line">  <span class="keyword">return</span> a + b + c; <span class="comment">// 代码运行到这里会出错</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>第六, 严格模式禁止八进制数字语法. ECMAScript并不包含八进制语法, 但所有的浏览器都支持这种以零(0)开头的八进制语法: 0644 === 420 还有 “\045” === “%”.在ECMAScript 6中支持为一个数字加”0o”的前缀来表示八进制数.
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span>  a = <span class="number">0o10</span>; <span class="comment">//ES6: 八进制</span></div></pre></td></tr></table></figure></p>
<p>有些新手开发者认为数字的前导零没有语法意义, 所以他们会用作对齐措施 — 但其实这会改变数字的意义! 八进制语法很少有用并且可能会错误使用, 所以严格模式下八进制语法会引起语法错误:
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"><span class="keyword">var</span> sum = <span class="number">015</span> + <span class="comment">// !!! 语法错误</span></div><div class="line">          <span class="number">197</span> +</div><div class="line">          <span class="number">142</span>;</div></pre></td></tr></table></figure></p>
<p>第七，ECMAScript 6中的严格模式禁止设置primitive值的属性.不采用严格模式,设置属性将会简单忽略(no-op),采用严格模式,将抛出TypeError错误
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line"><span class="meta">	"use strict"</span>;</div><div class="line">	<span class="literal">false</span>.true = <span class="string">""</span>;		<span class="comment">//TypeError</span></div><div class="line">	(<span class="number">14</span>).sailing = <span class="string">"home"</span>;		<span class="comment">//TypeError</span></div><div class="line">	<span class="string">"with"</span>.you = <span class="string">"far away"</span>;	<span class="comment">//TypeError</span></div><div class="line">&#125;)();</div></pre></td></tr></table></figure></p>
<h3 id="简化变量的使用"><a href="#简化变量的使用" class="headerlink" title="简化变量的使用"></a>简化变量的使用</h3><p>严格模式简化了代码中变量名字映射到变量定义的方式. 很多编译器的优化是依赖存储变量X位置的能力：这对全面优化JavaScript代码至关重要. JavaScript有些情况会使得代码中名字到变量定义的基本映射只在运行时才产生. 严格模式移除了大多数这种情况的发生, 所以编译器可以更好的优化严格模式的代码.</p>
<p>首先, 严格模式禁用 with.  with 所引起的问题是块内的任何名称可以映射(map)到with传进来的对象的属性, 也可以映射到包围这个块的作用域内的变量(甚至是全局变量), 这一切都是在运行时决定的: 在代码运行之前是无法得知的. 严格模式下, 使用 with 会引起语法错误, 所以就不会存在 with 块内的变量在运行是才决定引用到哪里的情况了:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"><span class="keyword">var</span> x = <span class="number">17</span>;</div><div class="line"><span class="keyword">with</span> (obj) <span class="comment">// !!! 语法错误</span></div><div class="line">&#123;</div><div class="line">  <span class="comment">// 如果没有开启严格模式，with中的这个x会指向with上面的那个x，还是obj.x？</span></div><div class="line">  <span class="comment">// 如果不运行代码，我们无法知道，因此，这种代码让引擎无法进行优化，速度也就会变慢。</span></div><div class="line">  x;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>一种取代 <code>with</code> 的简单方法是，将目标对象赋给一个短命名变量，然后访问这个变量上的相应属性。</p>
<p>第二, 严格模式下的 eval 不再为上层范围(surrounding scope,注:包围eval代码块的范围)引入新变量. 在正常模式下,  代码 eval(“var x;”) 会给上层函数(surrounding function)或者全局引入一个新的变量 x . 这意味着, 一般情况下,  在一个包含 eval 调用的函数内所有没有引用到参数或者局部变量的名称都必须在运行时才能被映射到特定的定义 (因为 eval 可能引入的新变量会覆盖它的外层变量). 在严格模式下 eval 仅仅为被运行的代码创建变量, 所以 eval 不会使得名称映射到外部变量或者其他局部变量:
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> x = <span class="number">17</span>;</div><div class="line"><span class="keyword">var</span> evalX = <span class="built_in">eval</span>(<span class="string">"'use strict'; var x = 42; x"</span>);</div><div class="line"><span class="built_in">console</span>.assert(x === <span class="number">17</span>);</div><div class="line"><span class="built_in">console</span>.assert(evalX === <span class="number">42</span>);</div></pre></td></tr></table></figure></p>
<p>相应的，如果函数eval被在严格模式下的eval(…)以表达的形式调用时，其代码会被当做严格模式下的代码执行，当然也可以在代码中显式开启严格模式，但这样做并不是必须的。
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">strict1</span>(<span class="params">str</span>)</span>&#123;</div><div class="line"><span class="meta">	"use strict"</span>;</div><div class="line">	<span class="keyword">return</span> <span class="built_in">eval</span>(str); <span class="comment">//str中的代码在严格模式下运行</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">strict2</span>(<span class="params">f, str</span>)</span>&#123;</div><div class="line"><span class="meta">	"use strict"</span>;</div><div class="line">	<span class="keyword">return</span> f(str);<span class="comment">// 没有直接调用eval(...): 当且仅当str中的代码开启了严格模式时</span></div><div class="line">                 <span class="comment">// 才会在严格模式下运行</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">nonstrict</span>(<span class="params">str</span>)</span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="built_in">eval</span>(str); <span class="comment">// 当且仅当str中的代码开启了"use strict"，str中的代码才会在严格模式下运行</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">strict1(<span class="string">"'Strict mode code!'"</span>);</div><div class="line">strict1(<span class="string">"'use strict'; 'Strict mode code!'"</span>);</div><div class="line">strict2(<span class="built_in">eval</span>, <span class="string">"'Non-strict code.'"</span>);</div><div class="line">strict2(<span class="built_in">eval</span>, <span class="string">"'use strict'; 'Strict mode code!'"</span>);</div><div class="line">nonstrict(<span class="string">"'Non-strict code.'"</span>);</div><div class="line">nonstrict(<span class="string">"'use strict'; 'Strict mode code!'"</span>);</div></pre></td></tr></table></figure></p>
<p>因此，在 eval 执行的严格模式代码下，变量的行为与严格模式下非 eval 执行的代码中的变量相同。</p>
<p>第三, 严格模式禁止删除声明变量。delete name 在严格模式下会引起语法错误：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> x;</div><div class="line"><span class="keyword">delete</span> x; <span class="comment">// !!! 语法错误</span></div><div class="line"></div><div class="line"><span class="built_in">eval</span>(<span class="string">"var y; delete y;"</span>); <span class="comment">// !!! 语法错误</span></div></pre></td></tr></table></figure>
<h3 id="让eval和arguments变的简单"><a href="#让eval和arguments变的简单" class="headerlink" title="让eval和arguments变的简单"></a>让eval和arguments变的简单</h3><p>严格模式让arguments和eval少了一些奇怪的行为。两者在通常的代码中都包含了很多奇怪的行为： eval会添加删除绑定，改变绑定好的值，还会通过用它索引过的属性给形参取别名的方式修改形参. 虽然在未来的ECMAScript版本解决这个问题之前，是不会有补丁来完全修复这个问题，但严格模式下将eval和arguments作为关键字对于此问题的解决是很有帮助的。</p>
<p>首先, 名称 eval 和 arguments 不能通过程序语法被绑定(be bound)或赋值. 以下的所有尝试将引起语法错误:
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"><span class="built_in">eval</span> = <span class="number">17</span>;</div><div class="line"><span class="built_in">arguments</span>++;</div><div class="line">++<span class="built_in">eval</span>;</div><div class="line"><span class="keyword">var</span> obj = &#123; set p(<span class="built_in">arguments</span>) &#123; &#125; &#125;;</div><div class="line"><span class="keyword">var</span> <span class="built_in">eval</span>;</div><div class="line"><span class="keyword">try</span> &#123; &#125; <span class="keyword">catch</span> (<span class="built_in">arguments</span>) &#123; &#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params">eval</span>) </span>&#123; &#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">arguments</span>(<span class="params"></span>) </span>&#123; &#125;</div><div class="line"><span class="keyword">var</span> y = <span class="function"><span class="keyword">function</span> <span class="title">eval</span>(<span class="params"></span>) </span>&#123; &#125;;</div><div class="line"><span class="keyword">var</span> f = <span class="keyword">new</span> <span class="built_in">Function</span>(<span class="string">"arguments"</span>, <span class="string">"'use strict'; return 17;"</span>);</div></pre></td></tr></table></figure></p>
<p>第二，严格模式下，参数的值不会随 arguments 对象的值的改变而变化。在正常模式下，对于第一个参数是 arg 的函数，对 arg 赋值时会同时赋值给 arguments[0]，反之亦然（除非没有参数，或者 arguments[0] 被删除）。严格模式下，函数的 arguments 对象会保存函数被调用时的原始参数。arguments[i] 的值不会随与之相应的参数的值的改变而变化，同名参数的值也不会随与之相应的 arguments[i] 的值的改变而变化。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"><span class="keyword">var</span> f = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="built_in">arguments</span>.callee; &#125;;</div><div class="line">f(); <span class="comment">// 抛出类型错误</span></div></pre></td></tr></table></figure>
<h3 id="“安全的”-JavaScript"><a href="#“安全的”-JavaScript" class="headerlink" title="“安全的” JavaScript"></a>“安全的” JavaScript</h3><p>严格模式下更容易写出“安全”的JavaScript。现在有些网站提供了方式给用户编写能够被网站其他用户执行的JavaScript代码。在浏览器环境下，JavaScript能够获取用户的隐私信息，因此这类Javascript必须在运行前部分被转换成需要申请访问禁用功能的权限。没有很多的执行时检查的情况，Javascript的灵活性让它无法有效率地做这件事。一些语言中的函数普遍出现，以至于执行时检查他们会引起严重的性能损耗。做一些在严格模式下发生的小改动，要求用户提交的JavaScript开启严格模式并且用特定的方式调用，就会大大减少在执行时进行检查的必要。</p>
<p>第一，在严格模式下通过<code>this</code>传递给一个函数的值不会被强制转换为一个对象。对一个普通的函数来说，<code>this</code>总会是一个对象：不管调用时<code>this</code>    它本来就是一个对象；还是用布尔值，字符串或者数字调用函数时函数里面被封装成对象的<code>this</code>；还是使用<code>undefined</code>或者<code>null</code>调用函数式<code>this</code>代表的全局对象（使用<code>call</code>, <code>apply</code>或者<code>bind</code>方法来指定一个确定的<code>this</code>）。这种自动转化为对象的过程不仅是一种性能上的损耗，同时在浏览器中暴露出全局对象也会成为安全隐患，因为全局对象提供了访问那些所谓安全的JavaScript环境必须限制的功能的途径。<strong>所以对于一个开启严格模式的函数，指定的<code>this</code>不再被封装为对象，而且如果没有指定<code>this</code>的话它值是<code>undefined</code></strong>：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="keyword">this</span>; &#125;</div><div class="line"><span class="built_in">console</span>.assert(fun() === <span class="literal">undefined</span>);</div><div class="line"><span class="built_in">console</span>.assert(fun.call(<span class="number">2</span>) === <span class="number">2</span>);</div><div class="line"><span class="built_in">console</span>.assert(fun.apply(<span class="literal">null</span>) === <span class="literal">null</span>);</div><div class="line"><span class="built_in">console</span>.assert(fun.call(<span class="literal">undefined</span>) === <span class="literal">undefined</span>);</div><div class="line"><span class="built_in">console</span>.assert(fun.bind(<span class="literal">true</span>)() === <span class="literal">true</span>);</div></pre></td></tr></table></figure></p>
<p>第二，在严格模式中再也不能通过广泛实现的ECMAScript扩展“游走于”JavaScript的栈中。在普通模式下用这些扩展的话，当一个叫fun的函数正在被调用的时候，fun.caller是最后一个调用fun的函数，而且fun.arguments包含调用fun时用的形参。这两个扩展接口对于“安全”JavaScript而言都是有问题的，因为他们允许“安全的”代码访问”专有”函数和他们的（通常是没有经过保护的）形参。如果fun在严格模式下，那么fun.caller和fun.arguments都是不可删除的属性而且在存值、取值时都会报错：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">restricted</span>(<span class="params"></span>)</span></div><div class="line">&#123;</div><div class="line"><span class="meta">  "use strict"</span>;</div><div class="line">  restricted.caller;    <span class="comment">// 抛出类型错误</span></div><div class="line">  restricted.arguments; <span class="comment">// 抛出类型错误</span></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">privilegedInvoker</span>(<span class="params"></span>)</span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">return</span> restricted();</div><div class="line">&#125;</div><div class="line">privilegedInvoker();</div></pre></td></tr></table></figure>
<p>第三，严格模式下的arguments不会再提供访问与调用这个函数相关的变量的途径。在一些旧时的ECMAScript实现中arguments.caller曾经是一个对象，里面存储的属性指向那个函数的变量。这是一个安全隐患，因为它通过函数抽象打破了本来被隐藏起来的保留值；它同时也是引起大量优化工作的原因。出于这些原因，现在的浏览器没有实现它。但是因为它这种历史遗留的功能，arguments.caller在严格模式下同样是一个不可被删除的属性，在赋值或者取值时会报错：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">a, b</span>)</span></div><div class="line">&#123;</div><div class="line"><span class="meta">  "use strict"</span>;</div><div class="line">  <span class="keyword">var</span> v = <span class="number">12</span>;</div><div class="line">  <span class="keyword">return</span> <span class="built_in">arguments</span>.caller; <span class="comment">// 抛出类型错误</span></div><div class="line">&#125;</div><div class="line">fun(<span class="number">1</span>, <span class="number">2</span>); <span class="comment">// 不会暴露v（或者a，或者b）</span></div></pre></td></tr></table></figure>
<h3 id="为未来的ECMAScript版本铺平道路"><a href="#为未来的ECMAScript版本铺平道路" class="headerlink" title="为未来的ECMAScript版本铺平道路"></a>为未来的ECMAScript版本铺平道路</h3><p>未来版本的ECMAScript很有可能会引入新语法，ECMAScript5中的严格模式就提早设置了一些限制来减轻之后版本改变产生的影响。如果提早使用了严格模式中的保护机制，那么做出改变就会变得更容易。</p>
<p>首先，在严格模式中一部分字符变成了保留的关键字。这些字符包括implements, interface, let, package, private, protected, public, static和yield。在严格模式下，你不能再用这些名字作为变量名或者形参名。
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">package</span>(<span class="params">protected</span>)</span>&#123; <span class="comment">// !!!</span></div><div class="line"><span class="meta">  "use strict"</span>;</div><div class="line">  <span class="keyword">var</span> implements; <span class="comment">// !!!</span></div><div class="line"></div><div class="line">  interface: <span class="comment">// !!!</span></div><div class="line">  <span class="keyword">while</span> (<span class="literal">true</span>)</div><div class="line">  &#123;</div><div class="line">    <span class="keyword">break</span> interface; <span class="comment">// !!!</span></div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">private</span>(<span class="params"></span>) </span>&#123; &#125; <span class="comment">// !!!</span></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">static</span>) </span>&#123; <span class="string">'use strict'</span>; &#125; <span class="comment">// !!!</span></div></pre></td></tr></table></figure></p>
<p>两个针对Mozilla开发的警告：第一，如果你的JavaScript版本在1.7及以上（你的chrome代码或者你正确使用了<code>&lt;script type=&quot;&quot;&gt;</code>）并且开启了严格模式的话，因为<code>let</code>和<code>yield</code>是最先引入的关键字，所以它们会起作用。但是网络上用<code>&lt;script src=&quot;&quot;&gt;</code>或者<code>&lt;script&gt;</code>…<code>&lt;/script&gt;</code> 加载的代码，<code>let</code>或者<code>yield</code>都不会作为关键字起作用；第二，尽管ES5无条件的保留了<code>class</code>, <code>enum</code>, <code>expor</code>, <code>extends</code>, <code>import</code>和<code>super</code>关键字，在Firefox 5之前，Mozilla仅仅在严格模式中保留了它们。</p>
<p>其次，严格模式禁止了不在脚本或者函数层面上的函数声明。在浏览器的普通代码中，在“所有地方”的函数声明都是合法的。这并不在ES5规范中（甚至是ES3）！这是一种针对不同浏览器中不同语义的一种延伸。未来的ECMAScript版本很有希望制定一个新的，针对不在脚本或者函数层面进行函数声明的语法。在严格模式下禁止这样的函数声明对于将来ECMAScript版本的推出扫清了障碍：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">"use strict"</span>;</div><div class="line"><span class="keyword">if</span> (<span class="literal">true</span>)&#123;</div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123; &#125; <span class="comment">// !!! 语法错误</span></div><div class="line">  f();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>) </span>&#123; &#125; <span class="comment">// !!! 语法错误</span></div><div class="line">  f2();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 合法</span></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">eit</span>(<span class="params"></span>) </span>&#123; &#125; <span class="comment">// 同样合法</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这种禁止放到严格模式中并不是很合适，因为这样的函数声明方式从ES5中延伸出来的。但这是ECMAScript委员会推荐的做法，浏览器就实现了这一点。</p>
<h2 id="浏览器的严格模式"><a href="#浏览器的严格模式" class="headerlink" title="浏览器的严格模式"></a>浏览器的严格模式</h2><p>主流浏览器现在实现了严格模式。但是不要盲目的依赖它，因为市场上仍然有大量的浏览器版本只部分支持严格模式或者根本就不支持（比如IE10之前的版本）。严格模式改变了语义。依赖这些改变可能会导致没有实现严格模式的浏览器中出现问题或者错误。谨慎地使用严格模式，通过检测相关代码的功能保证严格模式不出问题。最后，记得在支持或者不支持严格模式的浏览器中测试你的代码。如果你只在不支持严格模式的浏览器中测试，那么在支持的浏览器中就很有可能出问题，反之亦然。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ECMAScript5的严格模式是JavaScript中的一种限制性更强的变种方式。严格模式不是一个子集：它在语义上与正常代码有着明显的差异。
    
    </summary>
    
      <category term="js" scheme="http://kingzez.com/categories/js/"/>
    
    
      <category term="严格模式" scheme="http://kingzez.com/tags/%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>DataTables 1.10.x使用指南</title>
    <link href="http://kingzez.com/2017/03/03/DataTables-1-10-x%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://kingzez.com/2017/03/03/DataTables-1-10-x使用指南/</id>
    <published>2017-03-03T04:51:16.000Z</published>
    <updated>2017-03-03T05:09:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>DataTables是一个jQuery的表格插件。这是一个高度灵活的工具，依据的基础逐步增强，这将增加先进的互动控制，支持任何HTML表格。主要特点：
<a id="more"></a>
- 自动分页处理
- 即时表格数据过滤
- 数据排序以及数据类型自动检测
- 自动处理列宽度
- 可通过CSS定制样式
- 支持隐藏列
- 易用
- 可扩展性和灵活性
- 国际化
- 动态创建表格
- 免费的</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><p>因为DataTables是依赖jquery，所以要先引入jquery，再引入<code>jquery.dataTables.min.js</code>。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//code.jquery.com/jquery-1.12.4.js</span></div><div class="line">https:<span class="comment">//cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js</span></div></pre></td></tr></table></figure>
<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>对于数据表能够增强HTML表格效果，表格必须是有效的，要有<code>&lt;thead&gt;</code>,<code>&lt;tbody&gt;</code>标签，可选的有<code>&lt;tfoot&gt;</code>标签。
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"table_id"</span> <span class="attr">class</span>=<span class="string">"display"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Column 1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Column 2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Row 1 Data 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Row 1 Data 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Row 2 Data 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Row 2 Data 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="安装javascript-css文件"><a href="#安装javascript-css文件" class="headerlink" title="安装javascript/css文件"></a>安装javascript/css文件</h2><p>共三种不同的方式安装</p>
<ul>
<li>使用DataTables CDN</li>
<li>下载后本地引入</li>
<li>通过NPM或Bower包管理工具安装</li>
</ul>
<h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"//cdn.datatables.net/1.10.13/css/jquery.dataTables.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf8"</span> <span class="attr">src</span>=<span class="string">"//cdn.datatables.net/1.10.13/js/jquery.dataTables.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="本地安装"><a href="#本地安装" class="headerlink" title="本地安装"></a>本地安装</h3><p>下载安装包
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"/DataTables/datatables.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf8"</span> <span class="attr">src</span>=<span class="string">"/DataTables/datatables.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install datatables.net    <span class="comment"># Core library</span></div><div class="line">npm install datatables.net-dt <span class="comment"># Styling</span></div></pre></td></tr></table></figure>
<h2 id="初始化表格"><a href="#初始化表格" class="headerlink" title="初始化表格"></a>初始化表格</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).ready( <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    $(<span class="string">'#table_id'</span>).DataTable();</div><div class="line">&#125; );</div></pre></td></tr></table></figure>
<h1 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h1><ul>
<li>数据处理模式</li>
<li>数据类型</li>
<li>数据源</li>
</ul>
<h2 id="处理模式"><a href="#处理模式" class="headerlink" title="处理模式"></a>处理模式</h2><p>分为两种：客户端处理模式和服务端处理模式。</p>
<p>客户端处理模式：完整的数据集加载和数据处理都是在浏览器中完成。</p>
<p>服务端处理模式：通过Ajax请求数据绘画表格，服务端只返回数据，数据处理由服务端来完成。</p>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>分为数组（Array）、对象（Object）、实例（new MyClass()）。</p>
<ul>
<li>数组：数组数据<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> data = [</div><div class="line">    [</div><div class="line">        <span class="string">"Tiger Nixon"</span>,</div><div class="line">        <span class="string">"System Architect"</span>,</div><div class="line">        <span class="string">"Edinburgh"</span>,</div><div class="line">        <span class="string">"5421"</span>,</div><div class="line">        <span class="string">"2011/04/25"</span>,</div><div class="line">        <span class="string">"$3,120"</span></div><div class="line">    ],</div><div class="line">    [</div><div class="line">        <span class="string">"Garrett Winters"</span>,</div><div class="line">        <span class="string">"Director"</span>,</div><div class="line">        <span class="string">"Edinburgh"</span>,</div><div class="line">        <span class="string">"8422"</span>,</div><div class="line">        <span class="string">"2011/07/25"</span>,</div><div class="line">        <span class="string">"$5,300"</span></div><div class="line">    ]</div><div class="line">]</div></pre></td></tr></table></figure>
</li>
</ul>
<p>表格初始化
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(&apos;#example&apos;).DataTable( &#123;</div><div class="line">    data: data</div><div class="line">&#125; );</div></pre></td></tr></table></figure></p>
<p>效果图为</p>
<ul>
<li>对象：对象数据<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[    &#123;</div><div class="line">        <span class="string">"name"</span>:       <span class="string">"Tiger Nixon"</span>,</div><div class="line">        <span class="string">"position"</span>:   <span class="string">"System Architect"</span>,</div><div class="line">        <span class="string">"salary"</span>:     <span class="string">"$3,120"</span>,</div><div class="line">        <span class="string">"start_date"</span>: <span class="string">"2011/04/25"</span>,</div><div class="line">        <span class="string">"office"</span>:     <span class="string">"Edinburgh"</span>,</div><div class="line">        <span class="string">"extn"</span>:       <span class="string">"5421"</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        <span class="string">"name"</span>:       <span class="string">"Garrett Winters"</span>,</div><div class="line">        <span class="string">"position"</span>:   <span class="string">"Director"</span>,</div><div class="line">        <span class="string">"salary"</span>:     <span class="string">"$5,300"</span>,</div><div class="line">        <span class="string">"start_date"</span>: <span class="string">"2011/07/25"</span>,</div><div class="line">        <span class="string">"office"</span>:     <span class="string">"Edinburgh"</span>,</div><div class="line">        <span class="string">"extn"</span>:       <span class="string">"8422"</span></div><div class="line">    &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
</li>
</ul>
<p>表格初始化为
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#example'</span>).DataTable( &#123;</div><div class="line">    <span class="attr">data</span>: data,</div><div class="line">    <span class="attr">columns</span>: [</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'name'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'position'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'salary'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'office'</span> &#125;</div><div class="line">    ]</div><div class="line">&#125; );</div></pre></td></tr></table></figure></p>
<p>效果图为</p>
<p>实例化：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Employee</span> (<span class="params"> name, position, salary, office </span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">    <span class="keyword">this</span>.position = position;</div><div class="line">    <span class="keyword">this</span>.salary = salary;</div><div class="line">    <span class="keyword">this</span>._office = office;</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.office = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._office;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#example'</span>).DataTable( &#123;</div><div class="line">    <span class="attr">data</span>: [</div><div class="line">        <span class="keyword">new</span> Employee( <span class="string">"Tiger Nixon"</span>, <span class="string">"System Architect"</span>, <span class="string">"$3,120"</span>, <span class="string">"Edinburgh"</span> ),</div><div class="line">        <span class="keyword">new</span> Employee( <span class="string">"Garrett Winters"</span>, <span class="string">"Director"</span>, <span class="string">"$5,300"</span>, <span class="string">"Edinburgh"</span> )</div><div class="line">    ],</div><div class="line">    <span class="attr">columns</span>: [</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'name'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'salary'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'office'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'position'</span> &#125;</div><div class="line">    ]</div><div class="line">&#125; );</div></pre></td></tr></table></figure>
<p>效果图如下</p>
<h2 id="数据源"><a href="#数据源" class="headerlink" title="数据源"></a>数据源</h2><ul>
<li>DOM (html文件)</li>
<li>Javascript</li>
<li>Ajax 数据源</li>
</ul>
<h3 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h3><p>加载数据
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#myTable'</span>).DataTable( &#123;</div><div class="line">    <span class="attr">ajax</span>: <span class="string">'/api/myData'</span></div><div class="line">&#125; );</div></pre></td></tr></table></figure></p>
<p>可以使用json数据源，数组数据源，对象数据源。以下举例说明：</p>
<p>1.简单的数组数据
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[    &#123;</div><div class="line">        <span class="string">"name"</span>: <span class="string">"Tiger Nixon"</span>,</div><div class="line">        <span class="string">"position"</span>: <span class="string">"System Architect"</span>,</div><div class="line">        <span class="string">"salary"</span>: <span class="string">"$320,800"</span>,</div><div class="line">        <span class="string">"start_date"</span>: <span class="string">"2011/04/25"</span>,</div><div class="line">        <span class="string">"office"</span>: <span class="string">"Edinburgh"</span>,</div><div class="line">        <span class="string">"extn"</span>: <span class="string">"5421"</span></div><div class="line">    &#125;,</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>使用方法如下
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#myTable'</span>).DataTable( &#123;</div><div class="line">	<span class="attr">ajax</span>: &#123;</div><div class="line">        <span class="attr">url</span>: <span class="string">'/api/myData'</span>,</div><div class="line">        <span class="attr">dataSrc</span>: <span class="string">''</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">columns</span>: [ ... ]</div><div class="line">&#125; );</div></pre></td></tr></table></figure></p>
<p>2.对象数据
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"data"</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="string">"name"</span>: <span class="string">"Tiger Nixon"</span>,</div><div class="line">            <span class="string">"position"</span>: <span class="string">"System Architect"</span>,</div><div class="line">            <span class="string">"salary"</span>: <span class="string">"$320,800"</span>,</div><div class="line">            <span class="string">"start_date"</span>: <span class="string">"2011/04/25"</span>,</div><div class="line">            <span class="string">"office"</span>: <span class="string">"Edinburgh"</span>,</div><div class="line">            <span class="string">"extn"</span>: <span class="string">"5421"</span></div><div class="line">        &#125;,</div><div class="line">        ...</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>使用方法如下
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#myTable'</span>).DataTable( &#123;</div><div class="line">	<span class="attr">ajax</span>: <span class="string">'/api/myData'</span>,</div><div class="line">    <span class="attr">columns</span>: [ ... ]</div><div class="line">&#125; );</div><div class="line"></div><div class="line"><span class="comment">// or!</span></div><div class="line"></div><div class="line">$(<span class="string">'#myTable'</span>).DataTable( &#123;</div><div class="line">    <span class="attr">ajax</span>: &#123;</div><div class="line">        <span class="attr">url</span>: <span class="string">'/api/myData'</span>,</div><div class="line">        <span class="attr">dataSrc</span>: <span class="string">'data'</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">columns</span>: [ ... ]</div><div class="line">&#125; );</div></pre></td></tr></table></figure></p>
<p>3.对象数据对应关系
 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&#123;  <span class="string">"name"</span>: <span class="string">"Tiger Nixon"</span>,</div><div class="line">    <span class="string">"position"</span>: <span class="string">"System Architect"</span>,</div><div class="line">    <span class="string">"salary"</span>: <span class="string">"$320,800"</span>,</div><div class="line">    <span class="string">"start_date"</span>: <span class="string">"2011/04/25"</span>,</div><div class="line">    <span class="string">"office"</span>: <span class="string">"Edinburgh"</span>,</div><div class="line">    <span class="string">"extn"</span>: <span class="string">"5421"</span></div><div class="line">&#125;</div><div class="line"> $(<span class="string">'#myTable'</span>).DataTable( &#123;</div><div class="line"> 	<span class="attr">ajax</span>: ...,</div><div class="line">    <span class="attr">columns</span>: [</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'name'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'position'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'salary'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'state_date'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'office'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'extn'</span> &#125;</div><div class="line">    ]</div><div class="line">&#125; );</div></pre></td></tr></table></figure></p>
<p>4.嵌套对象关系
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"name"</span>: <span class="string">"Tiger Nixon"</span>,</div><div class="line">    <span class="string">"hr"</span>: &#123;</div><div class="line">        <span class="string">"position"</span>: <span class="string">"System Architect"</span>,</div><div class="line">        <span class="string">"salary"</span>: <span class="string">"$320,800"</span>,</div><div class="line">        <span class="string">"start_date"</span>: <span class="string">"2011/04/25"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"contact"</span>: &#123;</div><div class="line">        <span class="string">"office"</span>: <span class="string">"Edinburgh"</span>,</div><div class="line">        <span class="string">"extn"</span>: <span class="string">"5421"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">$(<span class="string">'#myTable'</span>).DataTable( &#123;</div><div class="line">	<span class="attr">ajax</span>: ...,</div><div class="line">    <span class="attr">columns</span>: [</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'name'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'hr.position'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'hr.salary'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'hr.state_date'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'contact.office'</span> &#125;,</div><div class="line">        &#123; <span class="attr">data</span>: <span class="string">'contact.extn'</span> &#125;</div><div class="line">    ]</div><div class="line">&#125; );</div></pre></td></tr></table></figure></p>
<h1 id="在线例子"><a href="#在线例子" class="headerlink" title="在线例子"></a><a href="https://www.datatables.net/examples/ajax/" target="_blank" rel="external">在线例子</a></h1><h1 id="配置项"><a href="#配置项" class="headerlink" title="配置项"></a>配置项</h1><p>使用案例说明配置项，以下是常用的配置项，详细请到官网<a href="https://www.datatables.net/" target="_blank" rel="external">https://www.datatables.net/</a>查询。
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">var reportMonthtable = $(&apos;#monthReport&apos;).DataTable(&#123;</div><div class="line">    retrieve: true, //防止多次初始化</div><div class="line">    data: dataSet, //数据集</div><div class="line">    columns: [</div><div class="line">        &#123; &quot;data&quot;: &quot;ruleName&quot; &#125;,</div><div class="line">        &#123; &quot;data&quot;: &quot;mainWhere&quot; &#125;,</div><div class="line">        &#123; &quot;data&quot;: &quot;UV&quot; &#125;,</div><div class="line">        &#123; &quot;data&quot;: &quot;PV&quot; &#125;,</div><div class="line">        &#123; &quot;data&quot;: &quot;sessions&quot; &#125;</div><div class="line">    ], //表头名称</div><div class="line">    paging: true, //显示翻页</div><div class="line">    lengthChange: false, //关闭每页显示</div><div class="line">    &quot;info&quot;: false, //关闭当前显示表格信息</div><div class="line">    searching: false, //关闭搜索框</div><div class="line">    scrollY: 200, //自定义滚动高度</div><div class="line">    iDisplayLength: jtPageSize, //每页显示条数</div><div class="line">    order: [], //插件bug 取代默认值</div><div class="line">    columnDefs: [&#123;</div><div class="line">            orderable: false, //禁用排序</div><div class="line">            targets: [0, 1] //指定的列</div><div class="line">        &#125;,</div><div class="line">        // 将mainWhere列变为蓝色</div><div class="line">        &#123;</div><div class="line">            targets: [1], // 目标列位置，下标从0开始</div><div class="line">            data: &quot;mainWhere&quot;, // 数据列名</div><div class="line">            render: function(data, type, full) &#123; // 返回自定义内容</div><div class="line">                return &quot;&lt;span style=&apos;color:#337ab7;&apos;&gt;&quot; + data + &quot;&lt;/span&gt;&quot;;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    ],</div><div class="line">    bProcessing: true, //加载进度条</div><div class="line">    stateSave: true, //保存翻页状态</div><div class="line">    //语言配置</div><div class="line">    language: &#123;</div><div class="line">        sProcessing: &quot;正在加载中......&quot;,</div><div class="line">        sLengthMenu: &quot;每页显示 _MENU_ 条记录&quot;,</div><div class="line">        sZeroRecords: &quot;该时间段无统计数据&quot;,</div><div class="line">        sEmptyTable: &quot;该时间段无统计数据&quot;,</div><div class="line">        sInfoEmpty: &quot;&quot;,</div><div class="line">        sInfo: &quot;当前显示 _START_ 到 _END_ 条，共 _TOTAL_ 条记录&quot;,</div><div class="line">        sInfoFiltered: &quot;数据表中共为 _MAX_ 条记录&quot;,</div><div class="line">        sSearch: &quot;&quot;,</div><div class="line">        oPaginate: &#123;</div><div class="line">            sFirst: &quot;首页&quot;,</div><div class="line">            sPrevious: &quot;上一页&quot;,</div><div class="line">            sNext: &quot;下一页&quot;,</div><div class="line">            sLast: &quot;末页&quot;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h1 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h1><p>结合项目中与angularjs结合使用，angular通过service获取后端数据，将数据集导入初始化中，但是该插件暂时不支持<code>promise</code>，只能通过变量数据集，这将导致数据变化后表格的数据不能及时更新，需要刷新页面才可以，这不是我们想要的效果，可以通过ui-router中的<code>$state</code>服务的<code>$state.reload</code>来实现reload操作，无需刷新页面即可达到数据变化后页面能够更新重绘。</p>
<h1 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h1><p><a href="https://www.datatables.net/" target="_blank" rel="external">https://www.datatables.net/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DataTables是一个jQuery的表格插件。这是一个高度灵活的工具，依据的基础逐步增强，这将增加先进的互动控制，支持任何HTML表格。主要特点：
    
    </summary>
    
      <category term="js" scheme="http://kingzez.com/categories/js/"/>
    
    
      <category term="js datatables" scheme="http://kingzez.com/tags/js-datatables/"/>
    
  </entry>
  
  <entry>
    <title>初试Mithril.js</title>
    <link href="http://kingzez.com/2016/11/15/%E5%88%9D%E8%AF%95Mithril-js/"/>
    <id>http://kingzez.com/2016/11/15/初试Mithril-js/</id>
    <published>2016-11-15T06:00:01.000Z</published>
    <updated>2017-03-01T09:43:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>初试Mithril.js<a id="more"></a></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>mithril<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"node_modules/mithril/mithril.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">	<span class="comment">// this simplicity , we use this component to namespace the model classes</span></div><div class="line">	<span class="keyword">var</span> todo = &#123;&#125;;</div><div class="line">	<span class="comment">// the Todo class has two properties</span></div><div class="line">	todo.Todo = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</div><div class="line">		<span class="keyword">this</span>.description = m.prop(data.description);</div><div class="line">		<span class="keyword">this</span>.done = m.prop(<span class="literal">false</span>);</div><div class="line">	&#125;;</div><div class="line">	<span class="comment">// TodoList class is a list of Todo's</span></div><div class="line">	todo.TodoList = <span class="built_in">Array</span>;</div><div class="line">	<span class="comment">// the view-model tracks a running list of todos,</span></div><div class="line">	<span class="comment">// store a description for new todos before they are created</span></div><div class="line">	<span class="comment">// and takes care of the logic surrounding when adding is permitted</span></div><div class="line">	<span class="comment">// and clearing the input after adding a todo to the list</span></div><div class="line">	todo.vm = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="keyword">var</span> vm = &#123;&#125;;</div><div class="line">		vm.init = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">			<span class="comment">// a running list of todos</span></div><div class="line">			vm.list = <span class="keyword">new</span> todo.TodoList();</div><div class="line">			<span class="comment">// a slot to store the name of a new todo before it is created</span></div><div class="line">			vm.description = m.prop(<span class="string">""</span>);</div><div class="line">			<span class="comment">// adds a todo to the list, and clears the description filed for user convenience</span></div><div class="line">			vm.add = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">				<span class="keyword">if</span> (vm.description) &#123;</div><div class="line">					vm.list.push(<span class="keyword">new</span> todo.Todo(&#123;<span class="attr">description</span>: vm.description()&#125;));</div><div class="line">					vm.description(<span class="string">""</span>);</div><div class="line">				&#125;</div><div class="line">			&#125;;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> vm;</div><div class="line">	&#125;())</div><div class="line">	<span class="comment">// the controller defineds what part of the model is relevant for the current page</span></div><div class="line">	<span class="comment">// in our case, there's only one view-model that handles everything</span></div><div class="line">	todo.controller = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		todo.vm.init()</div><div class="line">	&#125;;</div><div class="line">	<span class="comment">// here is the view</span></div><div class="line">	todo.view = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="keyword">return</span> [</div><div class="line">			m(<span class="string">"input"</span>, &#123;<span class="attr">onchange</span>: m.withAttr(<span class="string">"value"</span>, todo.vm.description), <span class="attr">value</span>: todo.vm.description()&#125;),</div><div class="line">			m(<span class="string">"button"</span>, &#123;<span class="attr">onclick</span>: todo.vm.add&#125;, <span class="string">"Add"</span>),</div><div class="line">			m(<span class="string">"table"</span>, [</div><div class="line">				todo.vm.list.map(<span class="function"><span class="keyword">function</span>(<span class="params">task, index</span>) </span>&#123;</div><div class="line">					<span class="keyword">return</span> m(<span class="string">"tr"</span>, [</div><div class="line">						m(<span class="string">"td"</span>, [</div><div class="line">							m(<span class="string">"input[type=checkbox]"</span>, &#123;<span class="attr">onclick</span>: m.withAttr(<span class="string">"checked"</span>, task.done), <span class="attr">checked</span>: task.done()&#125;)</div><div class="line">						]),</div><div class="line">						m(<span class="string">"td"</span>, &#123;<span class="attr">style</span>: &#123;<span class="attr">textDecoration</span>: task.done() ? <span class="string">"line-through"</span> : <span class="string">"none"</span>&#125;&#125;, task.description()),</div><div class="line">					])</div><div class="line">				&#125;)</div><div class="line">			])</div><div class="line">		]</div><div class="line">	&#125;;</div><div class="line">	<span class="comment">// initialize the application</span></div><div class="line">	m.mount(<span class="built_in">document</span>.body, &#123;<span class="attr">controller</span>: todo.controller, <span class="attr">view</span>: todo.view&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;初试Mithril.js
    
    </summary>
    
      <category term="js" scheme="http://kingzez.com/categories/js/"/>
    
    
      <category term="mithril.js" scheme="http://kingzez.com/tags/mithril-js/"/>
    
  </entry>
  
  <entry>
    <title>Yarn A new package manager for JavaScript</title>
    <link href="http://kingzez.com/2016/10/18/Yarn-A-new-package-manager-for-JavaScript-1/"/>
    <id>http://kingzez.com/2016/10/18/Yarn-A-new-package-manager-for-JavaScript-1/</id>
    <published>2016-10-18T13:44:14.000Z</published>
    <updated>2017-02-20T09:25:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>Facebook 开源了 yarn 这个新的 JavaScript 包管理工具，yarn 和 npm 做的是完全一样的事情：作为 nodejs 的包管理工具。既然是一样的事情，那么 yarn 必须有一些优点，才能说服大家去用。根据官方网站的介绍，yarn 有以下六项特点：
<a id="more"></a>
（2016 年 10 月 11 日）到今天（10月18）八天内达到14934star，这是何等的快速……</p>
<blockquote>
<p>离线模式（重要）</p>
</blockquote>
<p>如果之前已经安装过一个软件包，再次安装时就不用再从网络下载了。
这一点很重要，npm 饱受诟病的一点就是，每次安装依赖，都需要从网络下载一大堆东西，而且是全部重新下载。工程多的时候比较烦人。这下子可以节约大量时间了。</p>
<blockquote>
<p>依赖关系确定性（重要）</p>
</blockquote>
<p>在每一台机器上针对同一个工程安装依赖时，生成的依赖关系顺序和版本是一致的。
就是说我在另一台设备上对同样的工程安装依赖，或者把这台机器工程下的 node_modules 目录删除来重新安装依赖。由于关联依赖中，没有指定版本号的库，发生了版本更新，就会导致再次安装的依赖，其中具体某些软件包的版本是不一致的。 在这种情况下，你会发现原来能够正常运行的程序，忽然变得不能工作或一堆 BUG。
yarn 采用的解决方式是，引入了一个 yarn.lock 文件来应对这个问题。lock 机制在很多包管理中都有用到。例如 ruby 的 rubygems 就会生成 Gemfile.lock.
yarn.lock 会记录你安装的所有大大小小的软件包的具体版本号。只要你不删除 yarn.lock 文件，再次运行 yarn install 时，会根据其中记录的版本号获取所有依赖包。你可以把 yarn.lock 提交到版本库里，这样其他同事签出代码并运行 yarn install 时，可以保证大家安装的依赖都是完全一致的。
这就特别适合大型项目的多人协作开发和部署。</p>
<blockquote>
<p>更好的网络性能</p>
</blockquote>
<p>下载软件包时，会进行更好的排序，避免“请求瀑布”，最大限度提高网络利用率。</p>
<blockquote>
<p>多注册来源处理</p>
</blockquote>
<p>所有的依赖包，不管他被不同的库间接关联引用多少次，安装这个包时，只会从一个注册来源去装，要么是 npm 要么是 bower, 防止出现混乱不一致。</p>
<blockquote>
<p>网络弹性处理</p>
</blockquote>
<p>安装依赖的过程中，不会因为某个单次网络请求的失败导致整个安装挂掉（不由自主的要黑一下 npm）。当请求失败时会进行自动重试。</p>
<blockquote>
<p>扁平模式（重要）</p>
</blockquote>
<p>当关联依赖中包括对某个软件包的重复引用，在实际安装时将尽量避免重复的创建。</p>
<p>为了说明这个问题，我们假设目前工程依赖 A, B, C 三个库，而他们对某个库 somelib 存在这样的依赖关系：</p>
<p>A - somelib 1.4.x
B - somelib 1.6.x
C - somelib 1.6.x</p>
<p>如果要安装 ABC 三个库，那么 somelib 会存在版本冲突。npm 会在实际安装时，给三个库分别下载各自依赖的 somelib 版本。假设 npm 先安装了 A, 由于 A 依赖 somelib 1.4.x 版本，那么 1.4.x 会变成主版本。</p>
<p>再安装 B, C 时，由于 B, C 依赖的都不是 1.4.x, 于是安装完之后，关系就变成这个样子了：</p>
<p>node_modules
├── A
├── somelib 1.4.x
├── B
│  └── node_modules
│      └── somelib 1.6.x
└── C
    └── node_modules
        └── somelib 1.6.x</p>
<p>明明 B, C 都依赖 1.6.x 版本，实际上 npm 却要把这个版本保存两次，这样明显是对磁盘空间的浪费。我们把这种情况就称为“不扁平的”。尽管 npm 也提供了诸如 flat 等指令去支持“扁平化”处理，yarn 明显试图在这方面做得更好。</p>
<p>总结三大特点： 超快速、超级安全、超级可靠</p>
<p>（有没有感觉这猫忒怪……）</p>
<p>下面说一下安装使用：
yarn与npm相同，都是依靠package.json文件安装包。yarn要怎么安装呢？</p>
<p>macOS下：
首先需要先安装Node.js，如果已安装则略过。通过Homebrew安装
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">brew </span>update</div><div class="line"><span class="keyword">brew </span><span class="keyword">install </span>yarn</div></pre></td></tr></table></figure></p>
<p>设置PATH
需要终端中设置PATH环境变量，以便于全局使用。
添加<code>export PATH=&quot;$PATH:$HOME/.yarn/bin&quot;</code>到 profile中 (可能是 .profile, .bashrc, .zshrc, 等等)
测试一下~
yarn –version</p>
<p>Windows下：
首先需要先安装Node.js，如果已安装则略过。windows下有两种方式安装
1.下载.msi文件安装 https://yarnpkg.com/latest.msi
2.通过Chocolatey安装（chocolatey是windows下包管理软件，详情移步了解https://chocolatey.org/install）
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">choco <span class="keyword">install</span> yarn</div></pre></td></tr></table></figure></p>
<p>设置PATH
添加<code>set PATH=%PATH%;C:\.yarn\bin</code> 到shell环境变量中</p>
<p>npm下快速安装
可以通过npm安装，非常方便
npm install -g yarn</p>
<p>设置PATH
Unix/Linux/macOS
需要终端中设置PATH环境变量，以便于全局使用。
添加 <code>export PATH=&quot;$PATH:$HOME/.yarn/bin&quot;</code>到 profile中 (可能是 .profile, .bashrc, .zshrc, 等等)
windows
添加<code>set PATH=%PATH%;C:\.yarn\bin</code>到shell环境变量中
测试一下~
<figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yarn <span class="comment">--version</span></div></pre></td></tr></table></figure></p>
<p>安装之后，就可以愉快优雅的创建项目了~</p>
<p>创建一个新项目</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">yarn init</span></div></pre></td></tr></table></figure>
<p>添加项目依赖包</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yarn <span class="keyword">add</span><span class="bash"> [package]</span></div><div class="line">yarn <span class="keyword">add</span><span class="bash"> [package]@[version]</span></div><div class="line">yarn <span class="keyword">add</span><span class="bash"> [package]@[tag]</span></div></pre></td></tr></table></figure>
<p>更新依赖包</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yarn upgrade <span class="string">[package]</span></div><div class="line">yarn upgrade <span class="string">[package]</span>@<span class="string">[version]</span></div><div class="line">yarn upgrade <span class="string">[package]</span>@<span class="string">[tag]</span></div></pre></td></tr></table></figure>
<p>移除依赖包</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yarn remove <span class="string">[package]</span></div></pre></td></tr></table></figure>
<p>安装项目依赖的所有
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">yarn</span></div></pre></td></tr></table></figure></p>
<p>或者</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yarn <span class="keyword">install</span></div></pre></td></tr></table></figure>
<p>简单比较一下yarn与npm的命令
运行<code>yarn</code>运行相当于<code>npm install</code>
运行  <code>yarn add &lt;name&gt;</code>运行相当于<code>npm install --save &lt;name&gt;</code></p>
<p>Reference：
https://yarnpkg.com/</p>
<p>https://github.com/yarnpkg/yarn</p>
<p>https://code.facebook.com/posts/1840075619545360</p>
<p>https://zhuanlan.zhihu.com/p/22892675?from=timeline&amp;isappinstalled=0</p>
<p>https://www.zhihu.com/question/51502849</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Facebook 开源了 yarn 这个新的 JavaScript 包管理工具，yarn 和 npm 做的是完全一样的事情：作为 nodejs 的包管理工具。既然是一样的事情，那么 yarn 必须有一些优点，才能说服大家去用。根据官方网站的介绍，yarn 有以下六项特点：
    
    </summary>
    
      <category term="js" scheme="http://kingzez.com/categories/js/"/>
    
    
      <category term="yarn" scheme="http://kingzez.com/tags/yarn/"/>
    
  </entry>
  
  <entry>
    <title>$scope与controller as区别</title>
    <link href="http://kingzez.com/2016/09/24/scope%E4%B8%8Econtroller-as%E5%8C%BA%E5%88%AB/"/>
    <id>http://kingzez.com/2016/09/24/scope与controller-as区别/</id>
    <published>2016-09-24T15:54:56.000Z</published>
    <updated>2016-09-25T05:25:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>AngularJS中controller的实现主要有两种方法：
<a id="more"></a>
- 第一种为：我们熟悉的将model绑定到$scope上，在html页面中<code>ng-controller=&quot;SettingsController&quot;</code>。
- 第二种为：将方法和属性直接绑定到controller上，在html页面中<code>ng-controller=&quot;SettingsController as setting&quot;</code>。
第一种我们都很熟悉，那么这两种到底有什么区别呢？例子来自angularJS官网。</p>
<p><em>controller as</em>
index.html
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ctrl-as-exmpl"</span> <span class="attr">ng-controller</span>=<span class="string">"SettingsController1 as settings"</span>&gt;</span></div><div class="line">  Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"settings.name"</span>/&gt;</span></div><div class="line">  [ <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">ng-click</span>=<span class="string">"settings.greet()"</span>&gt;</span>greet<span class="tag">&lt;/<span class="name">a</span>&gt;</span> ]<span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line">  Contact:</div><div class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">ng-repeat</span>=<span class="string">"contact in settings.contacts"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">select</span> <span class="attr">ng-model</span>=<span class="string">"contact.type"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">option</span>&gt;</span>phone<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">option</span>&gt;</span>email<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"contact.value"</span>/&gt;</span></div><div class="line">      [ <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">ng-click</span>=<span class="string">"settings.clearContact(contact)"</span>&gt;</span>clear<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">      | <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">ng-click</span>=<span class="string">"settings.removeContact(contact)"</span>&gt;</span>X<span class="tag">&lt;/<span class="name">a</span>&gt;</span> ]</div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>[ <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">ng-click</span>=<span class="string">"settings.addContact()"</span>&gt;</span>add<span class="tag">&lt;/<span class="name">a</span>&gt;</span> ]<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>app.js</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">angular.module(<span class="string">'controllerAsExample'</span>, [])</div><div class="line">  .controller(<span class="string">'SettingsController1'</span>, SettingsController1);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">SettingsController1</span><span class="params">()</span> </span>&#123;</div><div class="line">  <span class="keyword">this</span>.name = <span class="string">"John Smith"</span>;</div><div class="line">  <span class="keyword">this</span>.contacts = [</div><div class="line">    &#123;type: <span class="string">'phone'</span>, value: <span class="string">'408 555 1212'</span>&#125;,</div><div class="line">    &#123;type: <span class="string">'email'</span>, value: <span class="string">'john.smith@example.org'</span>&#125; ];</div><div class="line">&#125;</div><div class="line"></div><div class="line">SettingsController1.prototype.greet = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">  alert(<span class="keyword">this</span>.name);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">SettingsController1.prototype.addContact = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">  <span class="keyword">this</span>.contacts.push(&#123;type: <span class="string">'email'</span>, value: <span class="string">'yourname@example.org'</span>&#125;);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">SettingsController1.prototype.removeContact = <span class="function"><span class="keyword">function</span><span class="params">(contactToRemove)</span> </span>&#123;</div><div class="line"> <span class="keyword">var</span> index = <span class="keyword">this</span>.contacts.indexOf(contactToRemove);</div><div class="line">  <span class="keyword">this</span>.contacts.splice(index, <span class="number">1</span>);</div><div class="line">&#125;;</div><div class="line"></div><div class="line">SettingsController1.prototype.clearContact = <span class="function"><span class="keyword">function</span><span class="params">(contact)</span> </span>&#123;</div><div class="line">  contact.type = <span class="string">'phone'</span>;</div><div class="line">  contact.value = <span class="string">''</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p><em>$scope</em>
index.html
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ctrl-exmpl"</span> <span class="attr">ng-controller</span>=<span class="string">"SettingsController2"</span>&gt;</span></div><div class="line">  Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"name"</span>/&gt;</span></div><div class="line">  [ <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">ng-click</span>=<span class="string">"greet()"</span>&gt;</span>greet<span class="tag">&lt;/<span class="name">a</span>&gt;</span> ]<span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line">  Contact:</div><div class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">ng-repeat</span>=<span class="string">"contact in contacts"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">select</span> <span class="attr">ng-model</span>=<span class="string">"contact.type"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">option</span>&gt;</span>phone<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">option</span>&gt;</span>email<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"contact.value"</span>/&gt;</span></div><div class="line">      [ <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">ng-click</span>=<span class="string">"clearContact(contact)"</span>&gt;</span>clear<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">      | <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">ng-click</span>=<span class="string">"removeContact(contact)"</span>&gt;</span>X<span class="tag">&lt;/<span class="name">a</span>&gt;</span> ]</div><div class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>[ <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">ng-click</span>=<span class="string">"addContact()"</span>&gt;</span>add<span class="tag">&lt;/<span class="name">a</span>&gt;</span> ]<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>app.js
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">angular.module(<span class="string">'controllerExample'</span>, [])</div><div class="line">  .controller(<span class="string">'SettingsController2'</span>, [<span class="string">'$scope'</span>, SettingsController2]);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">SettingsController2</span><span class="params">($scope)</span> </span>&#123;</div><div class="line">  $scope.name = <span class="string">"John Smith"</span>;</div><div class="line">  $scope.contacts = [</div><div class="line">    &#123;type:<span class="string">'phone'</span>, value:<span class="string">'408 555 1212'</span>&#125;,</div><div class="line">    &#123;type:<span class="string">'email'</span>, value:<span class="string">'john.smith@example.org'</span>&#125; ];</div><div class="line"></div><div class="line">  $scope.greet = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">    alert($scope.name);</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  $scope.addContact = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">    $scope.contacts.push(&#123;type:<span class="string">'email'</span>, value:<span class="string">'yourname@example.org'</span>&#125;);</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  $scope.removeContact = <span class="function"><span class="keyword">function</span><span class="params">(contactToRemove)</span> </span>&#123;</div><div class="line">    <span class="keyword">var</span> index = $scope.contacts.indexOf(contactToRemove);</div><div class="line">    $scope.contacts.splice(index, <span class="number">1</span>);</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  $scope.clearContact = <span class="function"><span class="keyword">function</span><span class="params">(contact)</span> </span>&#123;</div><div class="line">    contact.type = <span class="string">'phone'</span>;</div><div class="line">    contact.value = <span class="string">''</span>;</div><div class="line">  &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>定义controller时不用显式的依赖$scope，好处就是一个普通的函数定义，例子中的SettingsController2就是所谓的POJO（Plain Old Javascript Object，Java里的概念），这样的Object与框架无关，里面只有逻辑。即便有一天你的项目不再使用AngularJS了，依然可以很方便的重用和移植这些逻辑。另外，从测试的角度看，这样的Object也是单元测试友好的。单元测试强调的就是孤立其他依赖元素，而POJO恰恰满足这个条件，可以单纯的去测试这个函数的输入输出，而不用费劲的去模拟一个假的$scope。</p>
<p>另外，还有一个比较牵强的好处：防止滥用$scope的$watch，$on，$broadcast方法。可能刚刚就有人想问了，不依赖$scope我怎么watch一个model，怎样广播和响应事件。答案是没法弄，这些事还真是只有$scope能干。但很多时候在controller里watch一个model是很多余的，这样做会明显的降低性能。所以，当你本来就依赖$scope的时候，你会习惯性的调用这些方法来实现自己的逻辑。但当使用controller as的时候，由于没有直接依赖$scope，使用watch前你会稍加斟酌，没准就思考到了别的实现方式了呢。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;AngularJS中controller的实现主要有两种方法：
    
    </summary>
    
      <category term="js" scheme="http://kingzez.com/categories/js/"/>
    
    
      <category term="angularjs" scheme="http://kingzez.com/tags/angularjs/"/>
    
  </entry>
  
  <entry>
    <title>MacOS自带Apache的坑</title>
    <link href="http://kingzez.com/2016/09/22/MacOS%E8%87%AA%E5%B8%A6Apache%E7%9A%84%E5%9D%91/"/>
    <id>http://kingzez.com/2016/09/22/MacOS自带Apache的坑/</id>
    <published>2016-09-22T03:16:02.000Z</published>
    <updated>2016-09-22T03:24:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>刚刚升级了10.12，<code>sudo apachectl start</code>启动apache的时候瞬间懵逼了，
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo apachectl start</div><div class="line">(48)Address already <span class="keyword">in</span> use: AH00072: make_sock: could not <span class="built_in">bind</span> to address [::]:80</div><div class="line">(48)Address already <span class="keyword">in</span> use: AH00072: make_sock: could not <span class="built_in">bind</span> to address 0.0.0.0:80</div><div class="line">no listening sockets available, shutting down</div><div class="line">AH00015: Unable to open logs</div></pre></td></tr></table></figure></p>
<p>明明没有启动，也没做什么，后来发现原因是我使用的不是mac自带的apache，升级之后就悲剧，因为在新的系统中，apache是默认启动的，且不支持删除，所以解决方法是
- 停止apache
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apachectl -k <span class="built_in">stop</span></div></pre></td></tr></table></figure></p>
<ul>
<li>关闭apache随系统启动<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo launchctl unload -w /System/Library/LaunchDaemons/org<span class="selector-class">.apache</span><span class="selector-class">.httpd</span><span class="selector-class">.plist</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>这样就可以了，再次<code>sudo apachectl start</code> 就是自己安装的apache服务了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚刚升级了10.12，&lt;code&gt;sudo apachectl start&lt;/code&gt;启动apache的时候瞬间懵逼了，
    
    </summary>
    
      <category term="Mac" scheme="http://kingzez.com/categories/Mac/"/>
    
    
      <category term="apache" scheme="http://kingzez.com/tags/apache/"/>
    
  </entry>
  
  <entry>
    <title>angularjs与MDL的整合</title>
    <link href="http://kingzez.com/2016/09/16/angularjs%E4%B8%8EMDL%E7%9A%84%E6%95%B4%E5%90%88/"/>
    <id>http://kingzez.com/2016/09/16/angularjs与MDL的整合/</id>
    <published>2016-09-16T03:03:25.000Z</published>
    <updated>2016-09-16T03:45:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>很喜欢Material Design的风格，最近做项目打算用<a href="https://getmdl.io" target="_blank" rel="external">Material Design Lite</a><a id="more"></a>搭配angularjs 1.3.x,首先需要注意的是MDL在动态网页中需要更新注册组件即<code>upgradeAllRegistered</code>,起初不了解，在angular中引用MDL的js和css，但是按钮的涟漪效果以及其他涉及js操作的样式都无效，（一脸懵逼中……）后来仔细研读官方文档后才注意到这个小坑，动态网页中需要随时更新注册组件才能生效，官方文档是这么说的：</p>
<blockquote>
<p>Material Design Lite will automatically register and render all elements marked with MDL classes upon page load. However in the case where you are creating DOM elements dynamically you need to register new elements using the <code>upgradeElement</code> function. Here is how you can dynamically create the same raised button with ripples shown in the section above:</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">  <span class="keyword">var</span> button = <span class="built_in">document</span>.createElement(<span class="string">'button'</span>);</div><div class="line">  <span class="keyword">var</span> textNode = <span class="built_in">document</span>.createTextNode(<span class="string">'Click Me!'</span>);</div><div class="line">  button.appendChild(textNode);</div><div class="line">  button.className = <span class="string">'mdl-button mdl-js-button mdl-js-ripple-effect'</span>;</div><div class="line">  componentHandler.upgradeElement(button);</div><div class="line">  <span class="built_in">document</span>.getElementById(<span class="string">'container'</span>).appendChild(button);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p>找到原因后就要解决问题了，在angularjs中如何更新组件呢？因为这个更新是每时每刻都在运行的，所以要加在angular的启动文件app.js中，需要注意的是run加的位置，区分config和run的区别，config阶段是给了ng上下文一个针对constant与provider修改其内部属性的一个阶段，而run阶段是在config之后的在运行独立的代码块，通常写法runBlock，简单的说一下就是ng启动阶段是 config–&gt;run–&gt;compile/link，那么解决方法是：
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">angular.module(<span class="string">'app'</span>,[])</div><div class="line">	.run([<span class="string">'$rootScope'</span>, <span class="string">'$timeout'</span>, <span class="function"><span class="keyword">function</span><span class="params">($rootScope, $timeout)</span> </span>&#123;</div><div class="line">		$rootScope.$on(<span class="string">'$viewContentLoaded'</span>, () =&gt; &#123;</div><div class="line">			$timeout(() =&gt; &#123;</div><div class="line">			componentHandler.upgradeAllRegistered();</div><div class="line">			&#125;)</div><div class="line">		&#125;)</div><div class="line">	&#125;]);</div></pre></td></tr></table></figure></p>
<p>那么开始后续的开发~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很喜欢Material Design的风格，最近做项目打算用&lt;a href=&quot;https://getmdl.io&quot;&gt;Material Design Lite&lt;/a&gt;
    
    </summary>
    
      <category term="js" scheme="http://kingzez.com/categories/js/"/>
    
    
      <category term="angularjs" scheme="http://kingzez.com/tags/angularjs/"/>
    
      <category term="MDL" scheme="http://kingzez.com/tags/MDL/"/>
    
  </entry>
  
  <entry>
    <title>iterm 2 cd 神器</title>
    <link href="http://kingzez.com/2016/07/26/iterm-2-cd-%E7%A5%9E%E5%99%A8/"/>
    <id>http://kingzez.com/2016/07/26/iterm-2-cd-神器/</id>
    <published>2016-07-26T15:44:32.000Z</published>
    <updated>2016-08-06T06:46:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>autojump - 更快的方式来浏览你的文件系统</em>
<a id="more"></a>
安装通过Homebrew</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">brew </span><span class="keyword">install </span>autojump</div></pre></td></tr></table></figure>
<p>在zsh下需要配置zsh文件，在.zshrc下添加命令
<figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$<span class="string">[[ -s `brew --prefix`/etc/autojump.sh ]]</span> &amp;&amp; . `brew <span class="comment">--prefix`/etc/autojump.sh</span></div></pre></td></tr></table></figure></p>
<p>保存文件，即可使用。
使用方法是<code>j</code>经常使用或之前使用过的文件夹，即可直接跳到你要浏览的目录，省去中间需要的各种<code>cd</code>。非常方便。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;autojump - 更快的方式来浏览你的文件系统&lt;/em&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://kingzez.com/categories/Mac/"/>
    
    
      <category term="iterm2" scheme="http://kingzez.com/tags/iterm2/"/>
    
  </entry>
  
  <entry>
    <title>apply、call和bind用法区别</title>
    <link href="http://kingzez.com/2016/06/10/apply-call%E5%92%8Cbind%E7%94%A8%E6%B3%95%E5%8C%BA%E5%88%AB/"/>
    <id>http://kingzez.com/2016/06/10/apply-call和bind用法区别/</id>
    <published>2016-06-10T09:48:22.000Z</published>
    <updated>2017-02-20T07:28:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>每个函数中都包含两个非继承而来的方法：<code>apply()</code>, <code>call</code>。这两个方法的用途都是在特定的作用域下调用函数，实际上等于设置函数体内this对象的值。首先，<code>apply()</code>方法接收两个参数：一个是在其中运行函数的作用域，另一个是参数数组。其中，第二个参数可以是Array的实例，也可以是arguments对象，例如：<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span> (<span class="params">num1, num2</span>)</span>&#123;</div><div class="line">	<span class="keyword">return</span> num1 + num2;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sumCall1</span>(<span class="params">num1, num2</span>)</span>&#123;</div><div class="line">	<span class="keyword">return</span> sum.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);  <span class="comment">//传入arguments对象</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sumCall2</span>(<span class="params">num1, num2</span>)</span>&#123;</div><div class="line">	<span class="keyword">return</span> sum.apply(<span class="keyword">this</span>, [num1,num2]);  <span class="comment">//传入数组</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">sumCall1(<span class="number">1</span>,<span class="number">3</span>);  <span class="comment">// 4</span></div><div class="line">sumCall2(<span class="number">1</span>,<span class="number">3</span>);  <span class="comment">// 4</span></div></pre></td></tr></table></figure></p>
<p>上面例子中，sumCall1()在执行sum()函数时传入了this作为this值（因为是在全局作用域中调用的，所以传入的就是window对象）和arguments对象，然而sumCall2()同样也调用sum()函数，但它传入的则是this和一个参数数组，都返回同样的结果。</p>
<blockquote>
<p>在严格模式下，未指定环境对象而调用函数，则this值不会转成window。除非明确把函数添加到某个对象或者调用<code>apply()</code>或<code>call()</code>，否则this值将是undefined。</p>
</blockquote>
<p><code>call()</code>方法与<code>apply()</code>方法的作用相同，它们的区别在于接收参数的方式不同，对于<code>call()</code>方法而言，第一个参数是this不变，变化的是其余参数都是直接传递给函数，也就是说在使用<code>call()</code>时，传递函数的参数要一一列举出来，看下面的例子🌰：
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(num1, num2)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> num1 + num2;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">callSum</span><span class="params">(num1, num2)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> sum.call(<span class="keyword">this</span>, num1,num2);</div><div class="line">&#125;</div><div class="line"></div><div class="line">callSum(<span class="number">1</span>，<span class="number">3</span>) <span class="comment">// 4</span></div></pre></td></tr></table></figure></p>
<p>在使用<code>call()</code>方法的情况下，callSum要传入每一个参数值，结果与使用<code>apply()</code>并没有什么不同。至于是使用<code>apply()</code>还是<code>call()</code>，完全取决于你采用哪种给函数传递参数的方式最方便。如果你打算直接传入arguments对象，或者包含函数中先接收到的也是一个数组，那么使用<code>apply()</code>肯定很方便；否则，选择<code>call()</code>更合适，（再不给函数传递参数的情况下，使用哪个方法都无所谓。）</p>
<p>事实上，传递参数并非<code>apply()</code>和<code>call()</code>真正用武之地，它们最强大的地方是能够扩充函数的赖以运行的作用域，看下面例子🌰：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.color = <span class="string">"red"</span>;</div><div class="line"><span class="keyword">var</span> o.color = <span class="string">"blue"</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayColor</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	alert(<span class="keyword">this</span>.color);</div><div class="line">&#125;</div><div class="line"></div><div class="line">sayColor();</div><div class="line"></div><div class="line">sayColor.call(<span class="keyword">this</span>);	<span class="comment">//red</span></div><div class="line">sayColor.call(<span class="built_in">window</span>);	<span class="comment">//red</span></div><div class="line">sayColor.call(o);		<span class="comment">//blue</span></div></pre></td></tr></table></figure></p>
<p>使用<code>apply()</code>或<code>call()</code>来扩充作用域的最大好处就是对象不需要与方法有任何耦合关系。在ES5中还定义了一个方法<code>bind()</code>。这个方法会创建一个函数的实例，其this值会被绑定到传给<code>bind()</code>函数的值。再来个例子🌰。
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.color = <span class="string">"red"</span>;</div><div class="line"><span class="keyword">var</span> o.color = <span class="string">"blue"</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayColor</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	alert(<span class="keyword">this</span>.color);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> objSayColor = sayColor.bind(o);</div><div class="line">objSayColor();	<span class="comment">//blue</span></div></pre></td></tr></table></figure></p>
<p>在这里，<code>sayColor()</code>调用<code>bind()</code>并传入对象o，创建了<code>objSayColor()</code>函数，<code>objSayColor()</code>函数this值等于o，因此即使是在全局作用域中调用这个函数，也会看到”blue”。</p>
<p>补充：
传入的第一个参数为<code>null</code>，函数体内的this会默认指向宿主对象，在浏览器中，如果使用严格模式，则还为null。
函数是在非严格模式下，指定为 <code>null</code> 或 <code>undefined</code> 的 this 值会被替换成全局对象，
就先说这么多~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每个函数中都包含两个非继承而来的方法：&lt;code&gt;apply()&lt;/code&gt;, &lt;code&gt;call&lt;/code&gt;。这两个方法的用途都是在特定的作用域下调用函数，实际上等于设置函数体内this对象的值。首先，&lt;code&gt;apply()&lt;/code&gt;方法接收两个参数：一个是在其中运行函数的作用域，另一个是参数数组。其中，第二个参数可以是Array的实例，也可以是arguments对象，例如：
    
    </summary>
    
      <category term="js" scheme="http://kingzez.com/categories/js/"/>
    
    
      <category term="js" scheme="http://kingzez.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Sass中混合宏、继承、占位符比较</title>
    <link href="http://kingzez.com/2016/06/07/Sass%E4%B8%AD%E6%B7%B7%E5%90%88%E5%AE%8F%E3%80%81%E7%BB%A7%E6%89%BF%E3%80%81%E5%8D%A0%E4%BD%8D%E7%AC%A6%E6%AF%94%E8%BE%83/"/>
    <id>http://kingzez.com/2016/06/07/Sass中混合宏、继承、占位符比较/</id>
    <published>2016-06-07T07:20:37.000Z</published>
    <updated>2016-06-10T10:48:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>初学Sass对Sass的一点理解和笔记，Sass同Scss，其实两者指的都是一个，区别在于书写格式上，Sass的书写形式为ruby（其实我不了解ruby）<a id="more"></a>，省去了class的<code>. {} ;</code>, Scss的书写形式更像是css的写法，关于Sass就说这么多，这不是重点，该篇文章也不是Sass的入门等等，主要作为自己的学习笔记 。
关于混合宏、继承和占位符的区别比较： </p>
<h4 id="混合宏"><a href="#混合宏" class="headerlink" title="混合宏"></a>混合宏</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">声明方式 <span class="variable">@mixin</span></div><div class="line">调用方式 <span class="variable">@include</span></div></pre></td></tr></table></figure>
<blockquote>
<p>常用于 相同的代码块需要在不同的环境传递不同的值时，可以通过混合宏来定义重复使用的代码块
<strong>不足</strong>：编译出来的css代码有相同部分的代码块不能自动合并，从而导致代码冗余</p>
</blockquote>
<h4 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">声明方式 <span class="selector-class">.class</span></div><div class="line">调用方式 @extend</div></pre></td></tr></table></figure>
<blockquote>
<p>常用于 相同的代码块不需要传递不同的值，且在sass中已定义，这样可以通过Sass继承调用已存在的基类，使用继承可以将调用相同基类的代码合并到一起
<strong>不足</strong>： 即使基类不存在与html的结构中，继承后都会生成基类样式的代码块</p>
</blockquote>
<h4 id="占位符-placeholder"><a href="#占位符-placeholder" class="headerlink" title="占位符%placeholder"></a>占位符%placeholder</h4><figure class="highlight llvm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">声明方式 <span class="symbol">%placeholder</span></div><div class="line">调用方式 <span class="title">@extend</span></div></pre></td></tr></table></figure>
<blockquote>
<p>常用于 占位符与继承基本类型类似，不同的是相同的代码不存在基类中，需要额外声明，如果不调用已声明的占位符，则不会产生其相关代码，如果在不同选择器中调用占位符，那么编译出的css则是合并相同的代码，不会造成代码冗余</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;初学Sass对Sass的一点理解和笔记，Sass同Scss，其实两者指的都是一个，区别在于书写格式上，Sass的书写形式为ruby（其实我不了解ruby）
    
    </summary>
    
      <category term="sass" scheme="http://kingzez.com/categories/sass/"/>
    
    
      <category term="sass" scheme="http://kingzez.com/tags/sass/"/>
    
  </entry>
  
  <entry>
    <title>前端资源收集</title>
    <link href="http://kingzez.com/2016/05/30/%E5%89%8D%E7%AB%AF%E8%B5%84%E6%BA%90%E6%94%B6%E9%9B%86/"/>
    <id>http://kingzez.com/2016/05/30/前端资源收集/</id>
    <published>2016-05-30T14:44:09.000Z</published>
    <updated>2016-05-30T15:19:44.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>综合类</p>
<a id="more"></a> 
<ul>
<li><a href="http://www.cnblogs.com/sb19871023/p/3894452.html" target="_blank" rel="external">前端知识体系</a></li>
<li><a href="https://github.com/JacksonTian/fks" target="_blank" rel="external">前端知识结构</a></li>
<li><a href="https://github.com/unruledboy/WebFrontEndStack" target="_blank" rel="external">Web前端开发大系概览</a></li>
<li><a href="http://www.cnblogs.com/unruledboy/p/WebFrontEndStack.html" target="_blank" rel="external">Web前端开发大系概览-中文版</a></li>
<li><a href="https://raw.githubusercontent.com/unruledboy/WebFrontEndStack/master/Web%20Front%20End%20Stack.png" target="_blank" rel="external">Web Front-end Stack v2.2</a></li>
<li><a href="https://github.com/justjavac/free-programming-books-zh_CN" target="_blank" rel="external">免费的编程中文书籍索引</a></li>
<li><a href="https://github.com/dypsilon/frontend-dev-bookmarks" target="_blank" rel="external">前端书籍</a></li>
<li><a href="https://github.com/vhf/free-programming-books" target="_blank" rel="external">前端免费书籍大全</a></li>
<li><a href="http://www.cnblogs.com/sb19871023/p/3894452.html" target="_blank" rel="external">前端知识体系</a></li>
<li><a href="https://github.com/justjavac/free-programming-books-zh_CN" target="_blank" rel="external">免费的编程中文书籍索引</a></li>
<li><a href="http://study.163.com/course/introduction/224014.htm" target="_blank" rel="external">智能社 - 精通JavaScript开发</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript" target="_blank" rel="external">重新介绍 JavaScript（JS 教程）</a></li>
<li><a href="http://v.163.com/special/opencourse/bianchengdaolun.html" target="_blank" rel="external">麻省理工学院公开课：计算机科学及编程导论</a></li>
<li><a href="http://segmentfault.com/a/1190000002640298" target="_blank" rel="external">JavaScript中的this陷阱的最全收集–没有之一</a></li>
<li><a href="https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch1.html" target="_blank" rel="external">JS函数式编程指南</a></li>
<li><a href="http://liubin.github.io/promises-book/" target="_blank" rel="external">JavaScript Promise迷你书（中文版）</a></li>
<li><a href="https://github.com/AlloyTeam/Mars" target="_blank" rel="external">腾讯移动Web前端知识库</a></li>
<li><a href="https://github.com/Front-End-Developers-Hunan/Front-End-Develop-Guide" target="_blank" rel="external">Front-End-Develop-Guide 前端开发指南</a></li>
<li><a href="https://li-xinyang.gitbooks.io/frontend-notebook/content/" target="_blank" rel="external">前端开发笔记本</a></li>
<li><a href="https://github.com/nieweidong/fetool" target="_blank" rel="external">大前端工具集 - 聂微东</a></li>
<li><a href="https://dwqs.gitbooks.io/frontenddevhandbook/content/" target="_blank" rel="external">前端开发者手册</a></li>
</ul>
</li>
<li><p>入门类</p>
<ul>
<li><a href="http://www.cnblogs.com/jikey/p/3613082.html" target="_blank" rel="external">前端入门教程</a></li>
<li><a href="http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="external">瘳雪峰的Javascript教程</a></li>
<li><a href="http://www.imooc.com/view/11" target="_blank" rel="external">jQuery基础教程</a></li>
<li><a href="http://www.imooc.com/view/506" target="_blank" rel="external">前端工程师必备的PS技能——切图篇</a></li>
<li><a href="https://github.com/qiu-deqing/FE-learning" target="_blank" rel="external">结合个人经历总结的前端入门方法</a></li>
</ul>
</li>
<li><p>效果类</p>
<ul>
<li><a href="http://www.imooc.com/learn/58" target="_blank" rel="external">弹出层</a></li>
<li><a href="http://www.imooc.com/learn/18" target="_blank" rel="external">焦点图轮播特效</a></li>
</ul>
</li>
<li><p>工具类</p>
<ul>
<li><a href="http://www.imooc.com/learn/93" target="_blank" rel="external">css sprite 雪碧图制作</a></li>
<li><a href="http://www.imooc.com/learn/390" target="_blank" rel="external">版本控制入门 – 搬进 Github</a></li>
<li><a href="http://www.imooc.com/learn/30" target="_blank" rel="external">Grunt-beginner前端自动化工具</a></li>
</ul>
</li>
<li><p>慕课专题</p>
<ul>
<li><a href="http://www.imooc.com/space/teacher/id/197450" target="_blank" rel="external">张鑫旭 - 慕课系列</a></li>
<li><a href="http://www.imooc.com/space/teacher/id/104593" target="_blank" rel="external">lyn - 慕课系列</a></li>
<li><a href="http://www.imooc.com/space/teacher/id/290139" target="_blank" rel="external">艾伦 - 慕课系列</a></li>
<li><a href="http://www.imooc.com/view/494" target="_blank" rel="external">碧仔 - Hello，移动WEB</a></li>
</ul>
</li>
<li><p>周报类</p>
<ul>
<li><a href="https://github.com/PaicHyperionDev/MobileDevWeekly" target="_blank" rel="external">平安科技移动开发二队技术周报</a></li>
</ul>
</li>
</ol>
<h3 id="六-API"><a href="#六-API" class="headerlink" title="六. API:"></a>六. API:</h3><h4 id="1-总目录"><a href="#1-总目录" class="headerlink" title="1. 总目录"></a>1. 总目录</h4><ol>
<li><p>开发中心</p>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript" target="_blank" rel="external">mozilla js参考</a></li>
<li><a href="https://developer.chrome.com/extensions/api_index.html" target="_blank" rel="external">chrome开发中心（chrome的内核已转向blink）</a></li>
<li><a href="https://developer.apple.com/library/safari/navigation" target="_blank" rel="external">safari开发中心</a></li>
<li><a href="https://msdn.microsoft.com/zh-cn/library/d1et7k7c(v=vs.94" target="_blank" rel="external">microsoft js参考</a>.aspx)</li>
<li><a href="http://sanshi.me/articles/JavaScript-Garden-CN/html/index.html" target="_blank" rel="external">js秘密花园</a></li>
<li><a href="http://bonsaiden.github.io/JavaScript-Garden/zh/" target="_blank" rel="external">js秘密花园</a></li>
<li><a href="http://www.w3help.org/" target="_blank" rel="external">w3help</a> 综合Bug集合网站</li>
</ul>
</li>
<li><p>综合搜索</p>
<ul>
<li><a href="http://www.javascripting.com/" target="_blank" rel="external">javascripting</a></li>
<li><a href="http://microjs.com/" target="_blank" rel="external">各种流行库搜索</a></li>
</ul>
</li>
<li><p>综合API</p>
<ul>
<li><a href="http://www.runoob.com/" target="_blank" rel="external">runoob.com-包含各种API集合</a></li>
<li><a href="http://tool.oschina.net/apidocs" target="_blank" rel="external">开源中国在线API文档合集</a></li>
<li><a href="http://devdocs.io/" target="_blank" rel="external">devdocs</a> 英文综合API网站</li>
</ul>
</li>
</ol>
<h4 id="2-jQuery"><a href="#2-jQuery" class="headerlink" title="2. jQuery"></a>2. jQuery</h4><ul>
<li><a href="http://www.jquery123.com/" target="_blank" rel="external">jQuery API 中文文档</a></li>
<li><a href="http://hemin.cn/jq/" target="_blank" rel="external">hemin 在线版</a></li>
<li><a href="http://www.css88.com/jqapi-1.9/on/" target="_blank" rel="external">css88 jq api</a></li>
<li><a href="http://www.css88.com/jquery-ui-api/" target="_blank" rel="external">css88 jqui api</a></li>
<li><a href="http://learn.jquery.com/" target="_blank" rel="external">学习jquery</a></li>
<li><a href="http://james.padolsey.com/jquery/" target="_blank" rel="external">jquery 源码查找</a></li>
</ul>
<h4 id="3-Ecmascript"><a href="#3-Ecmascript" class="headerlink" title="3. Ecmascript"></a>3. Ecmascript</h4><ul>
<li><a href="https://leanpub.com/understandinges6/read" target="_blank" rel="external">Understanding ECMAScript 6 - Nicholas C. Zakas</a></li>
<li><a href="https://leanpub.com/exploring-es6/read" target="_blank" rel="external">exploring-es6</a></li>
<li><a href="https://github.com/es6-org/exploring-es6" target="_blank" rel="external">exploring-es6翻译</a></li>
<li><a href="http://es6-org.github.io/exploring-es6/" target="_blank" rel="external">exploring-es6翻译后预览</a></li>
<li><a href="http://es6.ruanyifeng.com/" target="_blank" rel="external">阮一峰 es6</a></li>
<li><a href="http://javascript.ruanyifeng.com/" target="_blank" rel="external">阮一峰 Javascript</a></li>
<li><a href="http://yanhaijing.com/es5/" target="_blank" rel="external">ECMA-262，第 5 版</a></li>
<li><a href="http://es5.github.io/" target="_blank" rel="external">es5</a></li>
</ul>
<h4 id="4-Js-template"><a href="#4-Js-template" class="headerlink" title="4. Js template"></a>4. Js template</h4><ul>
<li><a href="http://garann.github.io/template-chooser/" target="_blank" rel="external">template-chooser</a></li>
<li><a href="https://github.com/aui/artTemplate" target="_blank" rel="external">artTemplate</a></li>
<li><a href="https://github.com/aui/tmodjs/blob/master/README.md" target="_blank" rel="external">tomdjs</a></li>
<li><a href="http://juicer.name/docs/docs_zh_cn.html" target="_blank" rel="external">淘宝模板juicer模板</a></li>
<li><a href="http://koen301.github.io/fxtpl/" target="_blank" rel="external">Fxtpl v1.0 繁星前端模板引擎</a></li>
<li><a href="http://laytpl.layui.com/" target="_blank" rel="external">laytpl</a></li>
<li><a href="https://github.com/mozilla/nunjucks" target="_blank" rel="external">mozilla - nunjucks</a></li>
<li><a href="https://github.com/PaulGuo/Juicer" target="_blank" rel="external">Juicer</a></li>
<li><a href="http://akdubya.github.io/dustjs/" target="_blank" rel="external">dustjs</a></li>
<li><a href="http://ecomfe.github.io/etpl/" target="_blank" rel="external">etpl</a></li>
</ul>
<h4 id="5-弹出层"><a href="#5-弹出层" class="headerlink" title="5. 弹出层"></a>5. 弹出层</h4><ul>
<li><a href="https://github.com/aui/artDialog" target="_blank" rel="external">artDialog 最新版</a></li>
<li><a href="http://aui.github.io/artDialog/doc/index.html" target="_blank" rel="external">artDialog 文档</a></li>
<li><a href="https://code.google.com/p/artdialog/downloads/list" target="_blank" rel="external">google code 下载地址</a></li>
<li><a href="http://layer.layui.com/" target="_blank" rel="external">贤心弹出层</a></li>
<li><a href="https://github.com/bh-lay/UI" target="_blank" rel="external">响应式用户交互组件库</a></li>
<li><a href="http://t4t5.github.io/sweetalert/" target="_blank" rel="external">sweetalert-有css3动画弹出层</a></li>
</ul>
<h4 id="6-CSS"><a href="#6-CSS" class="headerlink" title="6. CSS"></a>6. CSS</h4><ul>
<li><a href="http://tympanus.net/codrops/css_reference/" target="_blank" rel="external">CSS 语法参考</a></li>
<li><a href="http://isux.tencent.com/css3/index.html" target="_blank" rel="external">CSS3动画手册</a></li>
<li><a href="http://isux.tencent.com/css3/tools.html" target="_blank" rel="external">腾讯css3动画制作工具</a></li>
<li><a href="http://linxz.github.io/tianyizone/" target="_blank" rel="external">志爷css小工具集合</a></li>
<li><a href="http://www.note12.com/category/blog/2014-6-5/538fe0a9f786f1b7019a4dfb" target="_blank" rel="external">css3 js 移动大杂烩</a></li>
<li><a href="http://bouncejs.com/" target="_blank" rel="external">bouncejs 触摸库</a></li>
<li><a href="http://fian.my.id/Waves/" target="_blank" rel="external">css3 按钮动画</a></li>
<li><a href="http://daneden.github.io/animate.css/" target="_blank" rel="external">animate.css</a></li>
<li><a href="http://www.alloyteam.com/2015/10/8536/" target="_blank" rel="external">全局CSS的终结(狗带) [译]</a></li>
</ul>
<h4 id="7-Angularjs"><a href="#7-Angularjs" class="headerlink" title="7. Angularjs"></a>7. Angularjs</h4><ul>
<li><a href="https://github.com/dolymood/AngularLearning" target="_blank" rel="external">Angular.js 的一些学习资源</a></li>
<li><a href="http://angularjs.cn/" target="_blank" rel="external">angularjs中文社区</a></li>
<li><a href="http://www.cnblogs.com/xuwenmin888/p/3739096.html" target="_blank" rel="external">Angularjs源码学习</a></li>
<li><a href="http://www.ifeenan.com/?c=AngularJS" target="_blank" rel="external">Angularjs源码学习</a></li>
<li><a href="http://angular-ui.github.io/bootstrap/" target="_blank" rel="external">angular对bootstrap的封装</a></li>
<li><a href="https://cnodejs.org/topic/51404e0f069911196d2e3923" target="_blank" rel="external">angularjs + nodejs</a></li>
<li><a href="http://www.cnblogs.com/lvdabao/tag/AngularJs/" target="_blank" rel="external">吕大豹 Angularjs</a></li>
<li><a href="http://www.infoq.com/cn/news/2013/02/angular-web-app" target="_blank" rel="external">AngularJS 最佳实践</a></li>
<li><a href="http://www.lovelucy.info/angularjs-best-practices.html" target="_blank" rel="external">Angular的一些扩展指令</a></li>
<li><a href="https://github.com/Pasvaz/bindonce" target="_blank" rel="external">Angular数据绑定原理</a></li>
<li><a href="https://github.com/angular-ui/" target="_blank" rel="external">一些扩展Angular UI组件</a></li>
<li><a href="http://voidcanvas.com/emberjs-vs-angularjs-performance-testing/" target="_blank" rel="external">Ember和AngularJS的性能测试</a></li>
<li><a href="http://www.cnblogs.com/powertoolsteam/p/angularjs-introdection.html" target="_blank" rel="external">带你走近AngularJS - 基本功能介绍</a></li>
<li><a href="http://angular.duapp.com/docs/guide" target="_blank" rel="external">Angularjs开发指南</a></li>
<li><a href="http://www.cnblogs.com/amosli/p/3710648.html" target="_blank" rel="external">Angularjs学习</a></li>
<li><a href="http://www.rainweb.cn/article/angularjs-jquery.html" target="_blank" rel="external">不要带着jQuery的思维去学习AngularJS</a></li>
<li><a href="http://wangjiatao.diandian.com/?tag=angularjs" target="_blank" rel="external">angularjs 学习笔记</a></li>
<li><a href="http://www.angularjs.cn/T008" target="_blank" rel="external">angularjs 开发指南</a></li>
<li><a href="https://github.com/jmcunningham/AngularJS-Learning" target="_blank" rel="external">angularjs 英文资料</a></li>
<li><a href="http://angular-ui.github.io/bootstrap/" target="_blank" rel="external">angular bootstrap</a></li>
<li><a href="https://github.com/opitzconsulting/jquery-mobile-angular-adapter" target="_blank" rel="external">angular jq mobile</a></li>
<li><a href="http://mgcrea.github.io/angular-strap/" target="_blank" rel="external">angular ui</a></li>
<li><a href="http://www.tuicool.com/articles/7ZZVr2" target="_blank" rel="external">整合jQuery Mobile+AngularJS经验谈</a></li>
<li><a href="http://blog.jobbole.com/46589/" target="_blank" rel="external">有jQuery背景，该如何用AngularJS编程思想</a></li>
<li><a href="http://each.sinaapp.com/angular/" target="_blank" rel="external">AngularJS在线教程</a></li>
<li><a href="http://www.zouyesheng.com/angular.html" target="_blank" rel="external">angular学习笔记</a></li>
</ul>
<h4 id="8-React"><a href="#8-React" class="headerlink" title="8. React"></a>8. React</h4><ul>
<li><a href="http://www.react-china.org/" target="_blank" rel="external">react.js 中文论坛</a></li>
<li><a href="https://facebook.github.io/react/index.html" target="_blank" rel="external">react.js 官方网址</a></li>
<li><a href="https://facebook.github.io/react/docs/getting-started.html" target="_blank" rel="external">react.js 官方文档</a></li>
<li><a href="http://material-ui.com/#/" target="_blank" rel="external">react.js material UI</a></li>
<li><a href="http://touchstonejs.io/" target="_blank" rel="external">react.js TouchstoneJS UI</a></li>
<li><a href="http://amazeui.org/react/" target="_blank" rel="external">react.js amazeui UI</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2015/03/react.html" target="_blank" rel="external">React 入门实例教程 - 阮一峰</a></li>
<li><a href="http://wiki.jikexueyuan.com/project/react-native/" target="_blank" rel="external">React Native 中文版</a></li>
<li><a href="http://www.html-js.com/article/Fakefish%203053" target="_blank" rel="external">Webpack 和 React 小书 - 前端乱炖</a></li>
<li><a href="https://fakefish.github.io/react-webpack-cookbook/" target="_blank" rel="external">Webpack 和 React 小书 - gitbook</a></li>
<li><a href="https://github.com/webpack/webpack" target="_blank" rel="external">webpack</a></li>
<li><a href="http://html-js.com/article/3009" target="_blank" rel="external">Webpack，101入门体验</a></li>
<li><a href="http://html-js.com/article/3113" target="_blank" rel="external">webpack入门教程</a></li>
<li><a href="http://segmentfault.com/a/1190000003499526" target="_blank" rel="external">基于webpack搭建前端工程解决方案探索</a></li>
<li><a href="http://www.piliyu.com/" target="_blank" rel="external">React原创实战视频教程</a></li>
</ul>
<h4 id="9-移动端API"><a href="#9-移动端API" class="headerlink" title="9. 移动端API"></a>9. 移动端API</h4><ol>
<li>API    <ul>
<li><a href="https://github.com/jtyjty99999/mobileTech" target="_blank" rel="external">99移动端知识集合</a></li>
<li><a href="https://github.com/AlloyTeam/Mars" target="_blank" rel="external">移动端前端开发知识库</a></li>
<li><a href="http://caibaojian.com/mobile-web-bug.html" target="_blank" rel="external">移动前端的一些坑和解决方法（外观表现）</a></li>
<li><a href="http://www.cnblogs.com/PeunZhang/p/3407453.html" target="_blank" rel="external">【原】移动web资源整理</a></li>
<li><a href="http://mweb.baidu.com/zeptoapi/" target="_blank" rel="external">zepto 1.0 中文手册</a></li>
<li><a href="http://www.html-5.cn/Manual/Zepto/" target="_blank" rel="external">zepto 1.0 中文手册</a></li>
<li><a href="http://www.css88.com/doc/zeptojs_api/" target="_blank" rel="external">zepto 1.1.2</a></li>
<li><a href="http://www.cnblogs.com/sky000/archive/2013/03/29/2988952.html" target="_blank" rel="external">zepto 中文注释</a></li>
<li><a href="http://app-framework-software.intel.com/api.php" target="_blank" rel="external">jqmobile 手册</a></li>
<li><a href="https://github.com/maxzhang/maxzhang.github.com/issues" target="_blank" rel="external">移动浏览器开发集合</a></li>
<li><a href="https://github.com/hoosin/mobile-web-favorites" target="_blank" rel="external">移动开发大杂烩</a></li>
<li><a href="http://lin-chao.github.io/2014/11/14/%E5%BE%AE%E4%BF%A1webview%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/" target="_blank" rel="external">微信webview中的一些问题</a></li>
</ul>
</li>
<li>框架    <ul>
<li><a href="http://framework7.taobao.org/" target="_blank" rel="external">特色的HTML框架可以创建精美的iOS应用</a></li>
<li><a href="http://m.sui.taobao.org/" target="_blank" rel="external">淘宝SUI</a></li>
</ul>
</li>
</ol>
<h4 id="10-avalon"><a href="#10-avalon" class="headerlink" title="10. avalon"></a>10. avalon</h4><ul>
<li><a href="http://avalonjs.github.io/" target="_blank" rel="external">avalonjs</a></li>
<li><a href="http://ued.qunar.com/oniui/index.html" target="_blank" rel="external">Avalon新一代UI库： OniUI</a></li>
<li><a href="https://github.com/RubyLouvre/avalon.oniui" target="_blank" rel="external">avalon.oniui-基于avalon的组件库</a></li>
<li><a href=""></a></li>
</ul>
<h4 id="11-Requriejs"><a href="#11-Requriejs" class="headerlink" title="11. Requriejs"></a>11. Requriejs</h4><ul>
<li><a href="http://www.ruanyifeng.com/blog/2012/10/javascript_module.html" target="_blank" rel="external">Javascript模块化编程（一）：模块的写法 </a></li>
<li><a href="http://www.ruanyifeng.com/blog/2012/10/asynchronous_module_definition.html" target="_blank" rel="external">Javascript模块化编程（二）：AMD规范</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2012/11/require_js.html" target="_blank" rel="external">Javascript模块化编程（三）：require.js的用法</a></li>
<li><a href="http://www.cnblogs.com/snandy/archive/2012/05/22/2513652.html" target="_blank" rel="external">RequireJS入门（一）</a></li>
<li><a href="http://www.cnblogs.com/snandy/archive/2012/05/23/2513712.html" target="_blank" rel="external">RequireJS入门（二）</a></li>
<li><a href="http://www.cnblogs.com/snandy/archive/2012/06/08/2538001.html" target="_blank" rel="external">RequireJS进阶（三）</a></li>
<li><a href="http://www.cnblogs.com/yexiaochai/p/3632580.html" target="_blank" rel="external">requrie源码学习</a></li>
<li><a href="http://www.oschina.net/translate/getting-started-with-the-requirejs-library" target="_blank" rel="external">requrie 入门指南</a></li>
<li><a href="http://www.cnblogs.com/yexiaochai/p/3214926.html" target="_blank" rel="external">requrieJS 学习笔记</a></li>
<li><a href="http://cyj.me/why-seajs/requirejs/" target="_blank" rel="external">requriejs 其一 </a></li>
<li><a href="http://www.cnblogs.com/yexiaochai/p/3221081.html" target="_blank" rel="external">require backbone结合</a></li>
</ul>
<h4 id="12-Seajs"><a href="#12-Seajs" class="headerlink" title="12. Seajs"></a>12. Seajs</h4><ul>
<li><a href="http://seajs.org/" target="_blank" rel="external">seajs</a></li>
<li><a href="http://cyj.me/why-seajs/zh/" target="_blank" rel="external">seajs 中文手册</a></li>
</ul>
<h4 id="13-Less-sass"><a href="#13-Less-sass" class="headerlink" title="13. Less,sass"></a>13. Less,sass</h4><ul>
<li><a href="http://www.w3cplus.com/sassguide/" target="_blank" rel="external">sass</a></li>
<li><a href="http://www.sass.hk/" target="_blank" rel="external">sass教程-sass中国</a></li>
<li><a href="http://sass.bootcss.com/" target="_blank" rel="external">Sass 中文文档</a></li>
<li><a href="http://less.bootcss.com/" target="_blank" rel="external">less</a></li>
</ul>
<h4 id="14-Markdown"><a href="#14-Markdown" class="headerlink" title="14. Markdown"></a>14. Markdown</h4><ul>
<li><a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">Markdown 语法说明 (简体中文版)</a></li>
<li><a href="https://github.com/LearnShare/Learning-Markdown/blob/master/README.md" target="_blank" rel="external">markdown入门参考</a></li>
<li><a href="https://www.gitbook.com/" target="_blank" rel="external">gitbook</a> 国外的在线markdown可编辑成书</li>
<li><a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">mdeditor</a>  一款国内的在线markdown编辑器</li>
<li><a href="https://stackedit.io" target="_blank" rel="external">stackedit</a> 国外的在线markdown编辑器，功能强大，同步云盘</li>
<li><a href="http://bh-lay.github.io/mditor/" target="_blank" rel="external">mditor</a> 一款轻量级的markdown编辑器</li>
<li><a href="https://github.com/lepture/editor" target="_blank" rel="external">lepture-editor</a></li>
<li><a href="https://github.com/jbt/markdown-editor" target="_blank" rel="external">markdown-editor</a></li>
</ul>
<h4 id="15-D3"><a href="#15-D3" class="headerlink" title="15. D3"></a>15. D3</h4><ul>
<li><a href="https://github.com/mbostock/d3/wiki/Tutorials" target="_blank" rel="external">d3 Tutorials</a></li>
<li><a href="https://github.com/mbostock/d3/wiki/Gallery" target="_blank" rel="external">Gallery</a></li>
<li><a href="http://datavisual.lofter.com/post/40cf3a_188e535" target="_blank" rel="external">lofter</a></li>
<li><a href="http://alanland.iteye.com/blog/1878595" target="_blank" rel="external">iteye</a></li>
<li><a href="http://javascript.ruanyifeng.com/library/d3.html" target="_blank" rel="external">ruanyifeng</a></li>
</ul>
<h4 id="16-兼容性"><a href="#16-兼容性" class="headerlink" title="16. 兼容性"></a>16. 兼容性</h4><ul>
<li><a href="http://kangax.github.io/compat-table/es6/" target="_blank" rel="external">esma 兼容列表</a></li>
<li><a href="http://jigsaw.w3.org/css-validator/validator.html.zh-cn" target="_blank" rel="external">W3C CSS验证服务</a></li>
<li><a href="http://caniuse.com/#index" target="_blank" rel="external">caniuse</a></li>
<li><a href="http://csscreator.com/properties" target="_blank" rel="external">csscreator</a></li>
<li><a href="https://msdn.microsoft.com/zh-cn/library/cc351024(v=vs.85" target="_blank" rel="external">microsoft</a>.aspx)</li>
<li><a href="http://www.responsinator.com/" target="_blank" rel="external">在线测兼容-移动端</a></li>
<li><a href="https://www.manymo.com/emulators" target="_blank" rel="external">emulators</a></li>
</ul>
<h4 id="17-UI相关"><a href="#17-UI相关" class="headerlink" title="17. UI相关"></a>17. UI相关</h4><ul>
<li><a href="http://v3.bootcss.com/" target="_blank" rel="external">bootcss</a></li>
<li><a href="http://www.w3cplus.com/MetroUICSS/" target="_blank" rel="external">MetroUICSS</a></li>
<li><a href="http://semantic-ui.com/" target="_blank" rel="external">semantic</a></li>
<li><a href="http://alexwolfe.github.io/Buttons/" target="_blank" rel="external">Buttons</a></li>
<li><a href="http://hiloki.github.io/kitecss/" target="_blank" rel="external">kitecss</a></li>
<li><a href="http://www.pintuer.com/" target="_blank" rel="external">pintuer</a></li>
<li><a href="http://amazeui.org/" target="_blank" rel="external">amazeui</a></li>
<li><a href="http://www.worldhello.net/gotgithub/index.html" target="_blank" rel="external">worldhello</a></li>
<li><a href="http://igit.linuxtoy.org/contents.html" target="_blank" rel="external">linuxtoy</a></li>
<li><a href="http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/" target="_blank" rel="external">gitmagic</a></li>
<li><a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="external">rogerdudler</a></li>
<li><a href="http://gitref.justjavac.com/" target="_blank" rel="external">gitref</a></li>
<li><a href="http://git-scm.com/book/zh" target="_blank" rel="external">book</a></li>
<li><a href="http://gogojimmy.net/2012/01/17/how-to-use-git-1-git-basic/" target="_blank" rel="external">gogojimmy</a></li>
</ul>
<h4 id="18-HTTP"><a href="#18-HTTP" class="headerlink" title="18. HTTP"></a>18. HTTP</h4><ul>
<li><a href="http://segmentfault.com/bookmark/1230000002521721" target="_blank" rel="external">HTTP API 设计指南</a></li>
</ul>
<h4 id="19-其它API"><a href="#19-其它API" class="headerlink" title="19. 其它API"></a>19. 其它API</h4><ul>
<li><a href="javascriptoo">javascript流行库汇总</a></li>
<li><a href="http://niceue.com/validator/demo/index.php" target="_blank" rel="external">验证api</a></li>
<li><a href="http://www.css88.com/doc/underscore/" target="_blank" rel="external">underscore 中文手册</a></li>
<li><a href="http://www.html-js.com/article/Underscorejs-source-code-analysis-of-underscorejs-source-code-analysis%203031" target="_blank" rel="external">underscore源码分析</a></li>
<li><a href="http://yalishizhude.github.io/tags/underscore/" target="_blank" rel="external">underscore源码分析-亚里士朱德的博客</a></li>
<li><a href="http://underscorejs.org/" target="_blank" rel="external">underscrejs en api</a></li>
<li><a href="https://lodash.com/" target="_blank" rel="external">lodash - underscore的代替品</a></li>
<li><a href="http://extjs-doc-cn.github.io/ext4api/" target="_blank" rel="external">ext4api</a></li>
<li><a href="http://www.csser.com/tools/backbone/backbone.js.html" target="_blank" rel="external">backbone 中文手册</a></li>
<li><a href="http://dev.qwrap.com/resource/js/_docs/_youa/#/qw/base/loadJs_.htm" target="_blank" rel="external">qwrap手册</a></li>
<li><a href="http://easings.net/zh-cn" target="_blank" rel="external">缓动函数</a></li>
<li><a href="http://www.w3school.com.cn/svg/svg_reference.asp" target="_blank" rel="external">svg 中文参考</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/SVG" target="_blank" rel="external">svg mdn参考</a></li>
<li><a href="https://github.com/gabelerner/canvg" target="_blank" rel="external">svg 导出 canvas</a></li>
<li><a href="https://github.com/exupero/saveSvgAsPng" target="_blank" rel="external">svg 导出 png</a></li>
<li><a href="http://www.zamzar.com/convert/ai-to-svg/" target="_blank" rel="external">ai-to-svg</a></li>
<li><a href="https://github.com/machao/localStorage" target="_blank" rel="external">localStorage 库</a></li>
</ul>
<h4 id="20-图表类"><a href="#20-图表类" class="headerlink" title="20. 图表类"></a>20. 图表类</h4><ul>
<li><a href="http://www.hcharts.cn/api/index.php" target="_blank" rel="external">Highcharts 中文API</a></li>
<li><a href="http://api.highcharts.com/highcharts" target="_blank" rel="external">Highcharts 英文API</a></li>
<li><a href="http://echarts.baidu.com/" target="_blank" rel="external">ECharts 百度的图表软件</a></li>
<li><a href="http://lbs.amap.com/api/" target="_blank" rel="external">高德地图</a></li>
<li><a href="http://paperjs.org/" target="_blank" rel="external">开源的矢量图脚本框架</a></li>
<li><a href="http://jvectormap.com/" target="_blank" rel="external">svg 地图</a></li>
</ul>
<h4 id="21-vue"><a href="#21-vue" class="headerlink" title="21. vue"></a>21. vue</h4><ul>
<li><a href="http://cn.vuejs.org/" target="_blank" rel="external">Vue</a></li>
<li><a href="http://forum.vuejs.org/" target="_blank" rel="external">Vue 论坛</a></li>
<li><a href="http://www.cnblogs.com/aaronjs/p/3660102.html" target="_blank" rel="external">Vue 入门指南</a></li>
<li><a href="http://segmentfault.com/a/1190000000411057" target="_blank" rel="external">Vue 的一些资源索引</a></li>
<li><a href="https://github.com/vuejs/awesome-vue" target="_blank" rel="external">awesome-vue</a></li>
</ul>
<h4 id="21-正则"><a href="#21-正则" class="headerlink" title="21. 正则"></a>21. 正则</h4><ul>
<li><a href="http://segmentfault.com/a/1190000002471140" target="_blank" rel="external">JS正则表达式元字符</a></li>
<li><a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="external">正则表达式30分钟入门教程</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank" rel="external">MDN-正则表达式</a></li>
<li><a href="http://javascript.ruanyifeng.com/stdlib/regexp.html" target="_blank" rel="external">ruanyifeng - RegExp对象</a></li>
<li><a href="http://div.io/topic/764?page=1" target="_blank" rel="external">小胡子哥 - 进阶正则表达式</a></li>
<li><a href="https://github.com/Cedriking/is.js/blob/master/is.js" target="_blank" rel="external">is.js</a></li>
<li><a href="http://regexper.com/" target="_blank" rel="external">正则在线测试</a></li>
<li><a href=""></a></li>
</ul>
<h4 id="22-ionic"><a href="#22-ionic" class="headerlink" title="22. ionic"></a>22. ionic</h4><ul>
<li><a href="https://github.com/ychow/ionic-guide" target="_blank" rel="external">ionic</a></li>
</ul>
<h4 id="23-其它"><a href="#23-其它" class="headerlink" title="23. 其它"></a>23. 其它</h4><ul>
<li><a href="http://mockjs.com/" target="_blank" rel="external">Mock.js 是一款模拟数据生成器</a></li>
</ul>
<h3 id="七-开发规范"><a href="#七-开发规范" class="headerlink" title="七. 开发规范"></a>七. 开发规范</h3><ol>
<li><p>前端</p>
<ul>
<li><a href="http://alloyteam.github.io/CodeGuide" target="_blank" rel="external">通过分析github代码库总结出来的工程师代码书写习惯</a></li>
<li><a href="http://codeguide.bootcss.com/" target="_blank" rel="external">HTML&amp;CSS编码规范 by @mdo</a></li>
<li><a href="http://www.alloyteam.com/2011/10/107/" target="_blank" rel="external">团队合作的css命名规范-腾讯AlloyTeam前端团队</a></li>
<li><a href="http://yuwenhui.github.io/" target="_blank" rel="external">前端编码规范之js - by yuwenhui</a></li>
<li><a href="http://www.cnblogs.com/hustskyking/p/javascript-spec.html" target="_blank" rel="external">前端编码规范之js - by 李靖</a></li>
<li><a href="http://zhibimo.com/read/Ashu/front-end-style-guide/" target="_blank" rel="external">前端开发规范手册</a></li>
<li><a href="https://github.com/yuche/javascript#table-of-contents" target="_blank" rel="external">Airbnb JavaScript 编码规范（简体中文版）</a></li>
<li><a href="http://www.zhihu.com/question/20351507" target="_blank" rel="external">AMD与CMD规范的区别</a></li>
<li><a href="http://www.cnblogs.com/tugenhua0707/p/3507957.html" target="_blank" rel="external">AMD与CMD规范的区别</a></li>
<li><a href="http://docs.kissyui.com/1.4/docs/html/tutorials/style-guide/kissy-source-style.html" target="_blank" rel="external">KISSY 源码规范</a></li>
<li><a href="http://codeguide.bootcss.com/" target="_blank" rel="external">bt编码规范</a></li>
<li><a href="https://github.com/Suxiaogang/Code_Guide" target="_blank" rel="external">规范加强版</a></li>
<li><a href="http://blog.jobbole.com/79075/" target="_blank" rel="external">前端代码规范 及 最佳实践</a></li>
<li><a href="http://coderlmn.github.io/code-standards/" target="_blank" rel="external">百度前端规范</a></li>
<li><a href="http://isobar-idev.github.io/code-standards/" target="_blank" rel="external">百度前端规范</a></li>
<li><a href="http://zhuanlan.zhihu.com/fuyun/19884834" target="_blank" rel="external">百度前端规范</a></li>
<li><a href="https://github.com/gf-rd/es6-coding-style" target="_blank" rel="external">ECMAScript6 编码规范–广发证券前端团队</a></li>
<li><a href="http://blog.jobbole.com/79484/" target="_blank" rel="external">JavaScript 风格指南/编码规范（Airbnb公司版）</a></li>
<li><a href="http://nec.netease.com/standard" target="_blank" rel="external">网易前端开发规范</a></li>
<li><a href="http://www.75team.com/archives/1049" target="_blank" rel="external">css模块</a></li>
<li><a href="https://github.com/ecomfe/spec" target="_blank" rel="external">前端规范资源列表</a></li>
</ul>
</li>
<li><p>PHP</p>
<ul>
<li><a href="http://segmentfault.com/a/1190000000443795" target="_blank" rel="external">最流行的PHP 代码规范</a></li>
<li><a href="https://github.com/hfcorriez/fig-standards/blob/zh_CN/%E6%8E%A5%E5%8F%97/PSR-2-coding-style-guide.md" target="_blank" rel="external">最流行的PHP 代码规范</a></li>
</ul>
</li>
<li><p>Android</p>
<ul>
<li><a href="http://www.cnblogs.com/lcw/p/3619181.html" target="_blank" rel="external">【敏捷开发】Android团队开发规范</a></li>
<li><a href="http://www.jianshu.com/p/4390f4fe19b3" target="_blank" rel="external">Android 开发规范与应用</a></li>
</ul>
</li>
</ol>
<h3 id="八-其它收集"><a href="#八-其它收集" class="headerlink" title="八. 其它收集"></a>八. 其它收集</h3><h4 id="1-各大公司开源项目"><a href="#1-各大公司开源项目" class="headerlink" title="1. 各大公司开源项目"></a>1. 各大公司开源项目</h4><ul>
<li><a href="https://code.facebook.com/projects/web/" target="_blank" rel="external">Facebook Projects</a></li>
<li><a href="http://fex.baidu.com/" target="_blank" rel="external">百度web前端研发部</a></li>
<li><a href="http://efe.baidu.com/" target="_blank" rel="external">百度EFE</a></li>
<li><a href="https://github.com/fex-team/" target="_blank" rel="external">百度github</a></li>
<li><a href="http://www.alloyteam.com/" target="_blank" rel="external">alloyteam</a></li>
<li><a href="http://alloyteam.github.io/" target="_blank" rel="external">alloyteam-github</a></li>
<li><a href="https://github.com/AlloyTeam/AlloyGameEngine" target="_blank" rel="external">alloyteam-AlloyGameEngine</a></li>
<li><a href="http://alloyteam.github.io/AlloyDesigner/" target="_blank" rel="external">AlloyDesigner</a> 即时修改，即时保存，设计稿较正，其它开发辅助工具</li>
<li><a href="http://www.alloyteam.com/2015/06/h5-jiao-hu-ye-bian-ji-qi-aeditor-jie-shao/" target="_blank" rel="external">H5交互页编辑器AEditor介绍</a> H5动画交互页开发的工具介绍</li>
<li><a href="http://aeditor.alloyteam.com/" target="_blank" rel="external">AEditor</a> H5动画交互页开发的工具</li>
<li><a href="http://forum.maka.im/wordpress/" target="_blank" rel="external">maka</a></li>
<li><a href="https://github.com/fenbility/weekly-feed" target="_blank" rel="external">值得订阅的weekly</a></li>
<li><a href="http://cube.qq.com/" target="_blank" rel="external">腾讯html5</a></li>
<li><a href="http://75team.github.io/" target="_blank" rel="external">奇舞团开源项目</a></li>
<li><a href="http://ued.qunar.com/" target="_blank" rel="external">Qunar UED</a></li>
<li><a href="http://scrat.io" target="_blank" rel="external">Scrat</a></li>
</ul>
<h4 id="2-Javascript"><a href="#2-Javascript" class="headerlink" title="2. Javascript"></a>2. Javascript</h4><ol>
<li><p>常用    </p>
<ul>
<li><a href="http://www.zhangxinxu.com/wordpress/2013/12/iebetter-js-make-ie6-ie8-like-modern-browser-ie9-chrome/" target="_blank" rel="external">ieBetter.js-让IE6-IE8拥有IE9+,Chrome等浏览器特性</a></li>
<li><a href="http://mottie.github.io/Keyboard/" target="_blank" rel="external">模拟键盘</a></li>
<li><a href="https://github.com/hotoo/pinyin" target="_blank" rel="external">拼音</a></li>
<li><a href="https://github.com/mc-zone/IDValidator" target="_blank" rel="external">中国个人身份证号验证</a></li>
</ul>
</li>
<li><p>算法</p>
<ul>
<li><a href="https://github.com/Ralph-Wang/algorithm.in.js" target="_blank" rel="external">数据结构与算法 JavaScript 描述. 章节练习</a></li>
<li><a href="https://github.com/twobin/twobinSort" target="_blank" rel="external">常见排序算法（JS版）</a></li>
<li><a href="https://github.com/luofei2011/jsAgm/blob/master/js/sort.js" target="_blank" rel="external">经典排序</a></li>
<li><a href="https://github.com/hechangmin/jssort" target="_blank" rel="external">常见排序算法-js版本</a></li>
<li><a href="https://github.com/lightningtgc/JavaScript-Algorithms" target="_blank" rel="external">JavaScript 算法与数据结构 精华集</a></li>
<li><a href="http://www.nowcoder.com/live/courses" target="_blank" rel="external">面试常考算法题精讲</a></li>
<li><a href=""></a></li>
</ul>
</li>
<li><p>移动端</p>
<ul>
<li><a href="https://github.com/ftlabs/fastclick" target="_blank" rel="external">fastclick</a></li>
<li><a href="https://github.com/mmastrac/jquery-noclickdelay" target="_blank" rel="external">no-click-delay</a></li>
</ul>
</li>
<li><p>JSON</p>
<ul>
<li><a href="http://beta.json-generator.com/" target="_blank" rel="external">模拟生成JSON数据</a></li>
<li><a href="http://jsonp.afeld.me/" target="_blank" rel="external">返回跨域JSONAPI</a></li>
</ul>
</li>
</ol>
<h4 id="3-Html5"><a href="#3-Html5" class="headerlink" title="3. Html5"></a>3. Html5</h4><ul>
<li><a href="http://www.zhihu.com/question/24398907" target="_blank" rel="external">HTML5 有哪些让你惊艳的 demo？</a></li>
</ul>
<h4 id="4-CSS"><a href="#4-CSS" class="headerlink" title="4. CSS"></a>4. CSS</h4><ul>
<li><a href="http://browserhacks.com/" target="_blank" rel="external">browserhacks</a></li>
<li><a href=""></a></li>
</ul>
<h4 id="5-jQuery"><a href="#5-jQuery" class="headerlink" title="5. jQuery"></a>5. jQuery</h4><ol>
<li><p>焦点图</p>
<ul>
<li><a href="https://github.com/koen301/myfocus" target="_blank" rel="external">myfocus</a></li>
<li><a href="http://www.chhua.com/myfocus/" target="_blank" rel="external">myfocus-官方演示站</a></li>
<li><a href="http://www.superslide2.com/" target="_blank" rel="external">SuperSlidev2.1 – 大话主席</a></li>
<li><a href="http://www.bujichong.com/sojs/soChange/index.html" target="_blank" rel="external">soChange</a></li>
</ul>
</li>
</ol>
<h4 id="6-Ext-EasyUI-J-UI-及其它各种UI方案"><a href="#6-Ext-EasyUI-J-UI-及其它各种UI方案" class="headerlink" title="6. Ext, EasyUI, J-UI 及其它各种UI方案"></a>6. Ext, EasyUI, J-UI 及其它各种UI方案</h4><ol>
<li><p>Ext</p>
<ul>
<li><a href="https://www.sencha.com/products/extjs/" target="_blank" rel="external">extjs</a></li>
<li><a href="http://docs.sencha.com/extjs/4.0.7/" target="_blank" rel="external">ext4英文api</a></li>
<li><a href="http://extjs-doc-cn.github.io/ext4api/" target="_blank" rel="external">ext4中文api</a></li>
<li><a href=""></a></li>
</ul>
</li>
<li><p>EasyUI</p>
<ul>
<li><a href="http://jquery-easyui.googlecode.com/svn/trunk/src/" target="_blank" rel="external">jquery easyui 未压缩源代码</a></li>
</ul>
</li>
<li><p>J-UI</p>
<ul>
<li><a href="http://jui.org/" target="_blank" rel="external">J-UI</a></li>
</ul>
</li>
<li><p>Other</p>
<ul>
<li><a href="http://dcloudio.github.io/mui/" target="_blank" rel="external">MUI-最接近原生APP体验的高性能前端框架</a></li>
<li><a href="http://amazeui.org/" target="_blank" rel="external">Amaze UI | 中国首个开源 HTML5 跨屏前端框架</a></li>
<li><a href="http://m.sui.taobao.org/" target="_blank" rel="external">淘宝 HTML5 前端框架</a></li>
<li><a href="http://docs.kissyui.com/" target="_blank" rel="external">KISSY - 阿里前端JavaScript库</a></li>
<li><a href="http://nej.netease.com/" target="_blank" rel="external">网易Nej - Nice Easy Javascript</a></li>
<li><a href="http://demos.telerik.com/kendo-ui/mvvm/index" target="_blank" rel="external">Kendo UI MVVM Demo</a></li>
<li><a href="http://www.bootcss.com/" target="_blank" rel="external">Bootstrap</a></li>
<li><a href="http://smartui.chinamzz.com/" target="_blank" rel="external">Smart UI</a></li>
<li><a href="http://developer.yahoo.com/yui/grids/" target="_blank" rel="external">雅虎UI - CSS UI</a></li>
</ul>
</li>
</ol>
<h4 id="7-页面-社会化-分享功能"><a href="#7-页面-社会化-分享功能" class="headerlink" title="7. 页面 社会化 分享功能"></a>7. 页面 社会化 分享功能</h4><ul>
<li><a href="http://share.baidu.com/" target="_blank" rel="external">百度分享</a> pc端</li>
<li><a href="http://jiathis.com/" target="_blank" rel="external">JiaThis</a> pc端</li>
<li><a href="http://developer.baidu.com/soc/share" target="_blank" rel="external">社会化分享组件</a> 移动端</li>
<li><a href="http://www.mob.com/#/index" target="_blank" rel="external">ShareSDK 轻松实现社会化功能</a> 移动端</li>
<li><a href="http://dev.umeng.com/social/android/quick-integration" target="_blank" rel="external">友盟分享</a> 移动端</li>
</ul>
<h4 id="8-富文本编辑器"><a href="#8-富文本编辑器" class="headerlink" title="8. 富文本编辑器"></a>8. 富文本编辑器</h4><ul>
<li><a href="https://www.tinymce.com/" target="_blank" rel="external">功能齐全 tinymce</a></li>
<li><a href="http://ueditor.baidu.com/website/" target="_blank" rel="external">百度 ueditor</a></li>
<li><a href="http://ckeditor.com/" target="_blank" rel="external">经典的ckeditor</a></li>
<li><a href="http://kindeditor.net/" target="_blank" rel="external">经典的kindeditor</a></li>
<li><a href="http://www.bootcss.com/p/bootstrap-wysiwyg/" target="_blank" rel="external">wysiwyg</a></li>
<li><a href="http://integ.github.io/BachEditor/" target="_blank" rel="external">一个有情怀的编辑器。Bach’s Editor</a></li>
<li><a href="https://github.com/mycolorway/simditor" target="_blank" rel="external">tower用的编辑器</a></li>
<li><a href="https://github.com/summernote/summernote" target="_blank" rel="external">summernote 编辑器</a></li>
<li><a href="http://neilj.github.io/Squire/" target="_blank" rel="external">html5编辑器</a></li>
<li><a href="http://lab.hustlzp.com/XEditor/" target="_blank" rel="external">XEditor</a></li>
<li><a href="https://github.com/wangfupeng1988/wangEditor" target="_blank" rel="external">wangEditor</a></li>
</ul>
<h4 id="9-日历"><a href="#9-日历" class="headerlink" title="9. 日历"></a>9. 日历</h4><ol>
<li><p>PC</p>
<ul>
<li><a href="http://www.my97.net/dp/demo/index.htm" target="_blank" rel="external">经典my97</a></li>
<li><a href="http://www.cnblogs.com/gbin1/archive/2012/04/16/2452105.html" target="_blank" rel="external">强大的独立日期选择器</a></li>
<li><a href="http://fullcalendar.io/" target="_blank" rel="external">fullcalendar</a></li>
<li><a href="http://blog.csdn.net/francislaw/article/details/7740630" target="_blank" rel="external">fullcalendar日历控件知识点集合 </a></li>
<li><a href="http://blog.sina.com.cn/s/blog_9475b1c101012c5f.html" target="_blank" rel="external">中文api</a></li>
<li><a href="https://github.com/zzyss86/LunarCalendar" target="_blank" rel="external">农历日历</a></li>
<li><a href="http://www.sucaisj.com/jiaoben/date/201509/16856.html" target="_blank" rel="external">超酷的仿百度带节日日历老黄历控件</a></li>
<li><a href="http://momentjs.com/" target="_blank" rel="external">日期格式化</a></li>
<li><a href="https://github.com/Johnqing/QPAYCalendar/" target="_blank" rel="external">大牛日历控件</a></li>
<li><a href="https://github.com/Iamlars/dateMarker" target="_blank" rel="external">我群某管理作品</a></li>
<li><a href="http://digitalbush.com/projects/masked-input-plugin/" target="_blank" rel="external">input按位替换-官网</a></li>
<li><a href="https://github.com/digitalBush/jquery.maskedinput/tree/1.2.2" target="_blank" rel="external">input按位替换-github</a></li>
<li><a href="https://github.com/dangrossman/bootstrap-daterangepicker" target="_blank" rel="external">bootstrap-daterangepicker</a></li>
<li><a href="http://www.vandelaydesign.com/30-best-free-jquery-plugins/" target="_blank" rel="external">国外30个插件集合</a></li>
<li><a href="http://dbushell.com/2012/10/09/pikaday-javascript-datepicker/" target="_blank" rel="external">JavaScript datepicker</a></li>
<li><a href="http://jonthornton.github.io/Datepair.js/" target="_blank" rel="external">Datepair.js</a></li>
<li><a href="https://github.com/glad/glDatePicker" target="_blank" rel="external">一个风格多样的日历</a></li>
<li><a href="http://amsul.ca/pickadate.js/date/" target="_blank" rel="external">弹出层式的全日历</a></li>
<li><a href="http://www.daterangepicker.com/" target="_blank" rel="external">jquery双日历</a></li>
</ul>
</li>
<li><p>移动</p>
<ul>
<li><a href="http://www.frankdemo.cn/index.php?c=content&amp;a=show&amp;id=115" target="_blank" rel="external">大气实用jQuery手机移动端日历日期选择插件</a></li>
<li><a href="https://mobiscroll.com/" target="_blank" rel="external">jQuery Mobile 移动开发中的日期插件Mobiscroll </a></li>
</ul>
</li>
</ol>
<ol>
<li><p>Date library</p>
<ul>
<li><a href="https://github.com/datejs/Datejs" target="_blank" rel="external">Datejs</a></li>
<li><a href="http://sugarjs.com/api/Date" target="_blank" rel="external">sugarjs</a></li>
</ul>
</li>
</ol>
<h4 id="10-综合效果搜索平台"><a href="#10-综合效果搜索平台" class="headerlink" title="10. 综合效果搜索平台"></a>10. 综合效果搜索平台</h4><ul>
<li><a href="http://www.jq22.com" target="_blank" rel="external">效果网</a></li>
<li><a href="http://www.17sucai.com/" target="_blank" rel="external">17素材</a></li>
<li><a href="http://microjs.com/" target="_blank" rel="external">常用的JavaScript代码片段</a></li>
</ul>
<h4 id="11-前端工程化"><a href="#11-前端工程化" class="headerlink" title="11. 前端工程化"></a>11. 前端工程化</h4><ol>
<li><p>概述</p>
<ul>
<li><a href="http://www.awesomes.cn/" target="_blank" rel="external">前端工具大全</a></li>
<li><a href="https://github.com/fouber/blog/issues/10?from=timeline&amp;isappinstalled=0#" target="_blank" rel="external">什么是前端工程化</a></li>
</ul>
</li>
<li><p>Gulp </p>
<ul>
<li><a href="http://gulpjs.com/" target="_blank" rel="external">Gulp官网</a></li>
<li><a href="http://www.gulpjs.com.cn/" target="_blank" rel="external">Gulp中文网</a></li>
<li><a href="https://github.com/Platform-CUF/use-gulp" target="_blank" rel="external">gulp资料收集</a></li>
<li><a href="http://javascript.ruanyifeng.com/tool/gulp.html" target="_blank" rel="external">Gulp：任务自动管理工具 - ruanyifeng</a></li>
<li><a href="http://gulpjs.com/plugins/" target="_blank" rel="external">Gulp插件</a></li>
<li><a href="http://www.ido321.com/1622.html" target="_blank" rel="external">Gulp不完全入门教程</a></li>
<li><a href="https://github.com/hjzheng/CUF_meeting_knowledge_share/issues/33" target="_blank" rel="external">为什么使用gulp?</a></li>
<li><a href="http://www.dbpoo.com/getting-started-with-gulp/" target="_blank" rel="external">Gulp安装及配合组件构建前端开发一体化</a></li>
<li><a href="https://github.com/nimojs/gulp-book" target="_blank" rel="external">Gulp 入门指南</a></li>
<li><a href="https://github.com/nimojs/blog/issues/19" target="_blank" rel="external">Gulp 入门指南 - nimojs</a></li>
<li><a href="http://markpop.github.io/2014/09/17/Gulp%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/" target="_blank" rel="external">Gulp入门教程</a></li>
<li><a href="http://www.imooc.com/video/5692" target="_blank" rel="external">Gulp in Action</a></li>
<li><a href="http://www.w3ctech.com/topic/134" target="_blank" rel="external">Gulp开发教程（翻译）</a></li>
<li><a href="http://www.cnblogs.com/2050/p/4198792.html" target="_blank" rel="external">前端构建工具gulpjs的使用介绍及技巧</a></li>
</ul>
</li>
<li><p>Grunt</p>
<ul>
<li><a href="http://gruntjs.com/" target="_blank" rel="external">gruntjs</a></li>
<li><a href="http://www.gruntjs.net/" target="_blank" rel="external">Grunt中文网</a></li>
</ul>
</li>
<li><p>Fis</p>
<ul>
<li><a href="http://fex-team.github.io/fis-site/index.html" target="_blank" rel="external">fis 官网</a></li>
<li><a href="http://fis.baidu.com/" target="_blank" rel="external">fis</a></li>
</ul>
</li>
</ol>
<h4 id="12-轮播图"><a href="#12-轮播图" class="headerlink" title="12. 轮播图"></a>12. 轮播图</h4><ol>
<li><p>pc图轮</p>
<ul>
<li><a href="http://www.jsfoot.com/jquery/demo/2011-09-20/192.html" target="_blank" rel="external">单屏轮播sochange</a></li>
<li><a href="http://bxslider.com/examples/carousel-demystified" target="_blank" rel="external">左右按钮多图切换</a></li>
<li><a href="https://github.com/alvarotrigo/fullPage.js/" target="_blank" rel="external">fullpage全屏轮播</a></li>
</ul>
</li>
<li><p>移动端</p>
<ul>
<li><a href="http://www.swipejs.com/" target="_blank" rel="external">无缝切换</a></li>
<li><a href="http://www.idangero.us/swiper/" target="_blank" rel="external">滑屏效果</a></li>
<li><a href="https://github.com/peunzhang/fullpage" target="_blank" rel="external">全屏fullpage</a></li>
<li><a href="https://github.com/qiqiboy/touchslider" target="_blank" rel="external">单个图片切换</a></li>
<li><a href="https://github.com/peunzhang/slip.js" target="_blank" rel="external">单个全屏切换</a></li>
<li><a href="http://touch.code.baidu.com/examples.html?qq-pf-to=pcqq.group" target="_blank" rel="external">百度的切换库</a></li>
<li><a href="https://github.com/peunzhang/iSlider" target="_blank" rel="external">单个全屏切换</a></li>
<li><a href="https://github.com/saw/touch-interfaces" target="_blank" rel="external">滑屏效果</a></li>
<li><a href="http://baijs.com/tinycircleslider/" target="_blank" rel="external">旋转拖动设置</a></li>
<li><a href="http://touchslider.com/" target="_blank" rel="external">类似于swipe切换</a></li>
<li><a href="http://www.swiper.com.cn/demo/index.html" target="_blank" rel="external">支持多种形式的触摸滑动</a></li>
<li><a href="https://github.com/joker-ye/main/blob/master/wap/index.html" target="_blank" rel="external">滑屏效果</a></li>
<li><a href="http://www.superslide2.com/" target="_blank" rel="external">大话主席pc移动图片轮换</a></li>
<li><a href="https://github.com/hahnzhu/parallax.js" target="_blank" rel="external">滑屏效果</a></li>
<li><a href="https://github.com/yanhaijing/zepto.fullpage" target="_blank" rel="external">基于zepto的fullpage</a></li>
<li><a href="http://www.cnblogs.com/plums/archive/2013/01/10/WebApp-fixed-width-layout-of-multi-terminal-adapter-since.html" target="_blank" rel="external">[WebApp]定宽网页设计下，固定宽度布局开发WebApp并实现多终端下WebApp布局自适应</a></li>
<li><a href="http://loo2k.com/blog/detecting-wechat-client/" target="_blank" rel="external">判断微信客户端的那些坑</a></li>
<li><a href="https://github.com/JefferyWang/nativeShare.js" target="_blank" rel="external">可以通过javascript直接调用原生分享的工具</a></li>
<li><a href="http://www.jiathis.com/help/html/weixin-share-code" target="_blank" rel="external">JiaThis 分享到微信代码</a></li>
<li><a href="http://fex.baidu.com/blog/2015/05/cross-mobile/" target="_blank" rel="external">聊聊移动端跨平台开发的各种技术</a></li>
<li><a href="http://www.zhihu.com/question/29922082" target="_blank" rel="external">前端自动化测试</a></li>
<li><a href="http://ajccom.github.io/niceslider/" target="_blank" rel="external">多种轮换图片</a></li>
<li><a href="https://mango.github.io/slideout/" target="_blank" rel="external">滑动侧边栏</a></li>
</ul>
</li>
</ol>
<h4 id="13-文件上传"><a href="#13-文件上传" class="headerlink" title="13. 文件上传"></a>13. 文件上传</h4><ul>
<li><a href="http://fex.baidu.com/webuploader/" target="_blank" rel="external">百度上传组件</a></li>
<li><a href="https://blueimp.github.io/jQuery-File-Upload/" target="_blank" rel="external">上传</a></li>
<li><a href="http://www.hdfu.net/" target="_blank" rel="external">flash 头像上传</a></li>
<li><a href="http://www.dropzonejs.com/" target="_blank" rel="external">图片上传预览</a></li>
<li><a href="http://elemefe.github.io/image-cropper/" target="_blank" rel="external">图片裁剪</a></li>
<li><a href="http://www.shearphoto.com/" target="_blank" rel="external">图片裁剪-shearphoto</a></li>
<li><a href="http://www.oschina.net/project/tag/284/jquery-image-tools?lang=0&amp;os=0&amp;sort=view&amp;p=2" target="_blank" rel="external">jQuery图片处理</a></li>
<li><a href=""></a></li>
</ul>
<h4 id="14-模拟select"><a href="#14-模拟select" class="headerlink" title="14. 模拟select"></a>14. 模拟select</h4><ul>
<li><a href="http://aui.github.io/popupjs/doc/selectbox.html" target="_blank" rel="external">糖饼 select</a></li>
<li><a href="https://github.com/rmm5t/jquery-flexselect" target="_blank" rel="external">flexselect</a></li>
<li><a href="http://loudev.com/" target="_blank" rel="external">双select</a></li>
<li><a href="http://select2.github.io/" target="_blank" rel="external">select2</a></li>
<li><a href=""></a></li>
</ul>
<h4 id="15-取色插件"><a href="#15-取色插件" class="headerlink" title="15. 取色插件"></a>15. 取色插件</h4><ul>
<li><a href="http://www.jq22.com/plugin/367" target="_blank" rel="external">类似 Photoshop 的界面取色插件</a></li>
<li><a href="https://github.com/jquery/jquery-color/" target="_blank" rel="external">jquery color</a></li>
<li><a href="http://www.oschina.net/project/tag/287/color-picker" target="_blank" rel="external">取色插件集合</a></li>
<li><a href="https://github.com/mattfarina/farbtastic" target="_blank" rel="external">farbtastic 圆环＋正方形</a></li>
<li><a href=""></a></li>
</ul>
<h4 id="16-城市联动"><a href="#16-城市联动" class="headerlink" title="16. 城市联动"></a>16. 城市联动</h4><ul>
<li><a href="http://www.ijquery.cn/?p=360" target="_blank" rel="external">jquery.cityselect.js基于jQuery+JSON的省市或自定义联动效果</a></li>
<li><a href=""></a></li>
</ul>
<h4 id="17-剪贴板"><a href="#17-剪贴板" class="headerlink" title="17. 剪贴板"></a>17. 剪贴板</h4><ul>
<li><a href="https://github.com/zeroclipboard/zeroclipboard" target="_blank" rel="external">剪贴板</a></li>
<li><a href="http://zenorocha.github.io/clipboard.js/" target="_blank" rel="external">clipboard 最新的剪切方案</a></li>
<li><a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="external">不是Flash的剪贴板</a></li>
</ul>
<h4 id="18-简繁转换"><a href="#18-简繁转换" class="headerlink" title="18. 简繁转换"></a>18. 简繁转换</h4><ul>
<li><a href="https://github.com/BYVoid/OpenCC" target="_blank" rel="external">简繁转换</a></li>
</ul>
<h4 id="19-表格-Grid"><a href="#19-表格-Grid" class="headerlink" title="19. 表格 Grid"></a>19. 表格 Grid</h4><ul>
<li><a href="http://facebook.github.io/fixed-data-table/" target="_blank" rel="external">facebook表格</a></li>
<li><a href="http://handsontable.com/" target="_blank" rel="external">类似于Excel编辑表格-handsontable</a></li>
<li><a href="http://bootstrap-table.wenzhixin.net.cn/" target="_blank" rel="external">bootstrap-table插件</a></li>
<li><a href="https://www.datatables.net/" target="_blank" rel="external">datatables</a></li>
</ul>
<h4 id="20-在线演示"><a href="#20-在线演示" class="headerlink" title="20. 在线演示"></a>20. 在线演示</h4><ul>
<li><a href="http://runjs.cn/" target="_blank" rel="external">js 在线编辑 - runjs</a></li>
<li><a href="http://jsbin.com/" target="_blank" rel="external">js 在线编辑 - jsbin</a></li>
<li><a href="http://codepen.io/" target="_blank" rel="external">js 在线编辑 - codepen</a></li>
<li><a href="http://jsfiddle.net/" target="_blank" rel="external">js 在线编辑 - jsfiddle</a></li>
<li><a href="http://ideone.com/" target="_blank" rel="external">java 在线编辑 - runjs</a></li>
<li><a href="http://code.hcharts.cn/" target="_blank" rel="external">js 在线编辑 - hcharts</a></li>
<li><a href="http://jsdm.com/" target="_blank" rel="external">js 在线编辑 - jsdm</a></li>
<li><a href="http://sqlfiddle.com/" target="_blank" rel="external">sql 在线编辑 - sqlfiddle</a></li>
<li><a href="https://thimble.mozilla.org" target="_blank" rel="external">mozilla 在线编辑器</a></li>
</ul>
<h4 id="21-播放器"><a href="#21-播放器" class="headerlink" title="21. 播放器"></a>21. 播放器</h4><ul>
<li><a href="https://github.com/zmmbreeze/DeadSimpleVideoPlayer" target="_blank" rel="external">Html5 VideoPlayer</a></li>
</ul>
<h4 id="22-粒子动画"><a href="#22-粒子动画" class="headerlink" title="22. 粒子动画"></a>22. 粒子动画</h4><ul>
<li><a href="http://a-jie.github.io/Proton/#example" target="_blank" rel="external">Proton 烟花</a></li>
</ul>
<h3 id="九-Nodejs"><a href="#九-Nodejs" class="headerlink" title="九. Nodejs"></a>九. Nodejs</h3><ul>
<li><a href="http://liuqing.pw/" target="_blank" rel="external">nodejs 篇幅比较巨大</a></li>
<li><a href="https://github.com/alsotang/node-lessons" target="_blank" rel="external">Node.js 包教不包会</a></li>
<li><a href="http://www.rainweb.cn/article/category/Nodejs" target="_blank" rel="external">篇幅比较少</a></li>
<li><a href="http://www.w3cfuns.com/article-5598538-1-1.html" target="_blank" rel="external">node express 入门教程</a></li>
<li><a href="http://my.oschina.net/u/568264/blog/193773" target="_blank" rel="external">nodejs定时任务</a></li>
<li><a href="http://60sky.com/" target="_blank" rel="external">一个nodejs博客</a></li>
<li><a href="http://www.cnblogs.com/yexiaochai/p/3536547.html" target="_blank" rel="external">【NodeJS 学习笔记04】新闻发布系统</a></li>
<li><a href="http://www.cnblogs.com/qqloving/p/3541099.html" target="_blank" rel="external">过年7天乐，学nodejs 也快乐</a></li>
<li><a href="https://github.com/nqdeng/7-days-nodejs" target="_blank" rel="external">七天学会NodeJS</a></li>
<li><a href="http://www.cnblogs.com/zhongweiv/p/nodejs_events.html" target="_blank" rel="external">Nodejs学习笔记（二）— 事件模块</a></li>
<li><a href="http://www.cnblogs.com/liusuqi/p/3735491.html" target="_blank" rel="external">nodejs入门</a></li>
<li><a href="https://github.com/zensh/jsgen" target="_blank" rel="external">angularjs nodejs</a></li>
<li><a href="http://blog.fens.me/series-nodejs/" target="_blank" rel="external">从零开始nodejs系列文章</a></li>
<li><a href="http://debuggable.com/posts/understanding-node-js:4bd98440-45e4-4a9a-8ef7-0f7ecbdd56cb" target="_blank" rel="external">理解nodejs</a></li>
<li><a href="http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop/" target="_blank" rel="external">nodejs事件轮询</a></li>
<li><a href="http://www.nodebeginner.org/index-zh-cn.html" target="_blank" rel="external">node入门</a></li>
<li><a href="http://ourjs.com/detail/53e1f281c5910a9806000001" target="_blank" rel="external">nodejs cms</a></li>
<li><a href="http://ourjs.com/detail/529ca5950cb6498814000005" target="_blank" rel="external">Node初学者入门，一本全面的NodeJS教程</a></li>
<li><a href="http://www.barretlee.com/blog/2015/10/07/debug-nodejs-in-command-line/" target="_blank" rel="external">NodeJS的代码调试和性能调优</a></li>
</ul>
<h3 id="十-性能优化"><a href="#十-性能优化" class="headerlink" title="十. 性能优化"></a>十. 性能优化</h3><ol>
<li><p>常规优化</p>
<ul>
<li><a href="http://www.infoq.com/cn/articles/javascript-high-performance-animation-and-page-rendering" target="_blank" rel="external">Javascript高性能动画与页面渲染</a></li>
<li><a href="http://isux.tencent.com/h5-performance.html" target="_blank" rel="external">移动H5前端性能优化指南</a></li>
<li><a href="http://ued.5173.com/?p=1731" target="_blank" rel="external">5173首页前端性能优化实践</a></li>
<li><a href="http://www.uisdc.com/front-end-performance-for-web-designers-and-front-end-developers" target="_blank" rel="external">给网页设计师和前端开发者看的前端性能优化</a></li>
<li><a href="http://www.orzpoint.com/profiling-css-and-optimization-notes/" target="_blank" rel="external">复杂应用的 CSS 性能分析和优化建议</a></li>
<li><a href="http://www.zhangxinxu.com/wordpress/tag/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD/" target="_blank" rel="external">张鑫旭——前端性能</a></li>
<li><a href="http://www.xiaoqiang.org/javascript/font-end-performance-monitor.html" target="_blank" rel="external">前端性能监控总结</a></li>
<li><a href="http://udc.weibo.com/2013/05/%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8Bcss%E6%97%A0%E5%9B%BE%E7%89%87%E6%8A%80%E6%9C%AF/" target="_blank" rel="external">网站性能优化之CSS无图片技术</a></li>
<li><a href="http://www.aliued.cn/2013/01/20/web%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%BF%9B%E9%98%B6%E8%B7%AF.html" target="_blank" rel="external">web前端性能优化进阶路</a></li>
<li><a href="http://my.eoe.cn/tuwandou/archive/4544.html" target="_blank" rel="external">前端技术：网站性能优化之CSS无图片技术</a></li>
<li><a href="http://www.baiduux.com/blog/2011/02/15/browser-loading/" target="_blank" rel="external">浏览器的加载与页面性能优化</a></li>
<li><a href="http://www.w3ctech.com/p/1503" target="_blank" rel="external">页面加载中的图片性能优化</a></li>
<li><a href="http://www.feelcss.com/tag/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD" target="_blank" rel="external">Hey——前端性能</a></li>
<li><a href="http://www.baiduux.com/blog/2010/03/15/html%E4%BC%98%E5%8C%96-2/" target="_blank" rel="external">html优化</a></li>
<li><a href="http://www.99css.com/tag/%e6%80%a7%e8%83%bd" target="_blank" rel="external">99css——性能</a></li>
<li><a href="http://www.yslow.net/category.php?cid=20" target="_blank" rel="external">Yslow——性能优化</a></li>
<li><a href="http://www.cnblogs.com/yslow/" target="_blank" rel="external">YSLOW中文介绍</a></li>
<li><a href="http://www.360ito.com/article/40.html" target="_blank" rel="external">转一篇Yahoo关于网站性能优化的文章，兼谈本站要做的优化</a></li>
<li><a href="http://www.360doc.com/content/10/0928/09/2588264_56971287.shtml" target="_blank" rel="external">Yahoo!团队实践分享：网站性能</a></li>
<li><a href="http://blog.jiasule.com/i/153" target="_blank" rel="external">网站性能优化指南：什么使我们的网站变慢？</a></li>
<li><a href="http://www.powereasy.net/helpyou/knowledge/ecommerce/9593.html" target="_blank" rel="external">网站性能优化实践，减少加载时间，提高用户体验</a></li>
<li><a href="http://www.umtry.com/archives/747.html" target="_blank" rel="external">浅谈网站性能优化 前端篇</a></li>
<li><a href="http://www.adinnet.cn/blog/designview/2012-7-12/678.html" target="_blank" rel="external">前端重构实践之如何对网站性能优化？</a></li>
<li><a href="http://www.gbin1.com/technology/javascript/20130708-front-end-performance-optimization-9/" target="_blank" rel="external">前端性能优化：使用媒体查询加载指定大小的背景图片</a></li>
<li><a href="http://www.mykuer.com/post/factors-that-affect-the-speed-of-web-site-open.html" target="_blank" rel="external">网站性能系列博文</a></li>
<li><a href="http://tgideas.qq.com/webplat/info/news_version3/804/808/811/m579/201109/41355.shtml" target="_blank" rel="external">加载，不只是少一点点</a></li>
<li><a href="http://mzhou.me/article/95310/" target="_blank" rel="external">前端性能的测试与优化</a></li>
<li><a href="http://www.gbin1.com/technology/html/20130217-tips-for-speed-up-page-loading/" target="_blank" rel="external">分享网页加载速度优化的一些技巧？</a></li>
<li><a href="http://www.f2es.com/images-bytes-opt/" target="_blank" rel="external">页面加载中的图片性能优化</a></li>
<li><a href="http://www.tcreator.info/webSchool/website/Front-end-Opt-Yslow.html" target="_blank" rel="external">web前端优化(基于Yslow)</a></li>
<li><a href="https://www.qianduan.net/website-performance-optimization-tool.html" target="_blank" rel="external">网站性能优化工具大全</a></li>
<li><a href="http://www.alloyteam.com/2012/10/high-performance-html/" target="_blank" rel="external">【高性能前端1】高性能HTML</a></li>
<li><a href="http://www.alloyteam.com/2012/10/high-performance-css/" target="_blank" rel="external">【高性能前端2】高性能CSS</a></li>
<li><a href="http://coolshell.cn/articles/6470.html" target="_blank" rel="external">由12306谈谈网站前端性能和后端性能优化</a></li>
<li><a href="http://www.alloyteam.com/webfrontend/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/" target="_blank" rel="external">AlloyTeam——前端优化</a></li>
<li><a href="http://www.cnblogs.com/developersupport/p/3248695.html" target="_blank" rel="external">毫秒必争，前端网页性能最佳实践</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_6e9d2e0701017kvu.html" target="_blank" rel="external">网站性能工具Yslow的使用方法</a></li>
<li><a href="http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part1" target="_blank" rel="external">前端工程与性能优化（上）：静态资源版本更新与缓存</a></li>
<li><a href="http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part2" target="_blank" rel="external">前端工程与性能优化（下）：静态资源管理与模板框架</a></li>
<li><a href="http://blog.jobbole.com/48369/" target="_blank" rel="external">HTTPS连接的前几毫秒发生了什么</a></li>
<li><a href="http://uicss.cn/yslow/#more-12319" target="_blank" rel="external">Yslow</a></li>
<li><a href="http://blog.smartbear.com/web-performance/essential-web-performance-metrics-a-primer-part-1/" target="_blank" rel="external">Essential Web Performance Metrics — A Primer, Part 1</a></li>
<li><a href="http://blog.smartbear.com/performance/essential-web-performance-metrics-part-2/" target="_blank" rel="external">Essential Web Performance Metrics — Part 2</a></li>
<li><a href="http://jayli.github.io/blog/data/2011/12/23/yuislide.html" target="_blank" rel="external">YUISlide,针对移动设备的动画性能优化</a></li>
<li><a href="http://joelglovier.com/improving-site-performance/" target="_blank" rel="external">Improving Site Performance</a></li>
<li><a href="http://segmentfault.com/a/1190000000367899" target="_blank" rel="external">让网站提速的最佳前端实践</a></li>
<li><a href="http://sixrevisions.com/web-development/why-website-speed-is-important/" target="_blank" rel="external">Why Website Speed is Important</a></li>
<li><a href="https://www.devbridge.com/articles/need-for-speed-how-to-improve-your-website-performance/" target="_blank" rel="external">Need for Speed – How to Improve your Website Performance</a></li>
<li><a href="https://github.com/amfe/article/issues/1" target="_blank" rel="external">阿里无线前端性能优化指南 (Pt.1 加载期优化) </a></li>
<li><a href=""></a></li>
</ul>
</li>
<li><p>优化工具</p>
<ul>
<li><a href="http://www.html-js.com/article/3083" target="_blank" rel="external">JavaScript 性能分析新工具 OneProfile</a></li>
<li><a href="http://www.html-js.com/article/3091" target="_blank" rel="external">JavaScript 堆内存分析新工具 OneHeap</a></li>
</ul>
</li>
<li><p>在线工具</p>
<ul>
<li><a href="https://developers.google.com/speed/pagespeed/insights/" target="_blank" rel="external">google在线工具</a></li>
<li><a href="http://www.alibench.com/" target="_blank" rel="external">阿里测</a></li>
<li><a href="http://itest.aliyun.com/" target="_blank" rel="external">阿里-免费测试服务</a></li>
<li><a href="https://github.com/alibaba/f2etest" target="_blank" rel="external">阿里-F2etest多浏览器兼容性测试解决方案</a></li>
<li><a href="http://jsperf.com/" target="_blank" rel="external">js性能测试</a></li>
<li><a href=""></a></li>
</ul>
</li>
</ol>
<h3 id="十一-前端架构"><a href="#十一-前端架构" class="headerlink" title="十一. 前端架构"></a>十一. 前端架构</h3><ul>
<li><a href="http://www.zhihu.com/topic/19612641" target="_blank" rel="external">技术架构</a></li>
<li><a href="http://saito.im/note/The-Architecture-of-F2E/" target="_blank" rel="external">前端架构</a></li>
<li><a href="http://www.zhihu.com/question/24092572" target="_blank" rel="external">如何成为前端架构师</a></li>
<li><a href="http://hikejun.com/sharing/2010webrebuild/?file=fe-infrastructure.html" target="_blank" rel="external">关于前端架构-张克军</a></li>
<li><a href="http://www.zhihu.com/question/25583350" target="_blank" rel="external">百度腾讯offer比较（腾讯游戏VS百度基础架构）</a></li>
<li><a href=""></a></li>
</ul>
<h3 id="十二-个人作品"><a href="#十二-个人作品" class="headerlink" title="十二. 个人作品"></a>十二. 个人作品</h3><h4 id="1-推荐作品"><a href="#1-推荐作品" class="headerlink" title="1. 推荐作品"></a>1. 推荐作品</h4><ul>
<li><a href="https://gist.github.com/wintercn" target="_blank" rel="external">winter代码片段需要翻墙</a></li>
<li><a href="http://www.fgm.cc/learn/" target="_blank" rel="external">fgm</a></li>
<li><a href="https://github.com/hongru/hongru.github.com" target="_blank" rel="external">岑安作品集</a></li>
<li><a href="http://kmdjs.github.io/" target="_blank" rel="external">当耐特demo集合</a></li>
<li><a href="http://www.laoshu133.com/Lab/" target="_blank" rel="external">米空格 js作品</a></li>
<li><a href="http://koen301.github.io/" target="_blank" rel="external">myFocus</a></li>
<li><a href="http://panxuepeng.github.io/seajslib/" target="_blank" rel="external">SeaJS组件库</a></li>
<li><a href="http://yanhaijing.com/myProject/" target="_blank" rel="external">颜海镜作品</a></li>
<li><a href="http://jo2.org/category/myworks/" target="_blank" rel="external">脚儿网作品</a></li>
<li><a href="http://www.cnitblog.com/yemoo/category/3107.html" target="_blank" rel="external">javascript个人作品</a></li>
<li><a href="http://bbs.miaov.com/forum.php?mod=viewthread&amp;tid=7790" target="_blank" rel="external">妙味的雷东升游戏作品</a></li>
<li><a href="http://bbs.csdn.net/topics/380227212" target="_blank" rel="external">javascript作品集</a></li>
<li><a href="https://github.com/TooBug/works" target="_blank" rel="external">云五笔，灰度产生生成工具</a></li>
<li><a href="http://koen301.github.io/" target="_blank" rel="external">项目主页</a></li>
<li><a href="http://zaole.net/" target="_blank" rel="external">个性的作品主页</a></li>
<li><a href="http://static.tingall.com/v2/player/" target="_blank" rel="external">播放器</a></li>
<li><a href="http://ucren.com/blog/demos" target="_blank" rel="external">ucren js demos 集</a></li>
<li><a href="http://www.zhinengshe.com/works_list.html" target="_blank" rel="external">智能社</a></li>
<li><a href="http://demos.shizuwu.cn/" target="_blank" rel="external">实例陈列架</a></li>
<li><a href="http://zoye.sinaapp.com/demo" target="_blank" rel="external">zoye demo</a></li>
<li><a href="http://lab.yuanwai.wang/" target="_blank" rel="external">王员外</a></li>
<li><a href="http://pingfan1990.sinaapp.com" target="_blank" rel="external">平凡</a></li>
<li><a href="http://www.lovewebgames.com/" target="_blank" rel="external">jyg 游戏案例</a></li>
<li><a href="http://www.helloweba.com/list.html" target="_blank" rel="external">很多jquery插件</a></li>
<li><a href="http://www.bujichong.com/sojs/api/index.html" target="_blank" rel="external">不羁虫 - soJs 作品系列</a></li>
<li><a href="http://frozenui.github.io/case.html" target="_blank" rel="external">frozenui</a></li>
<li><a href="http://js-game.github.io/othello/" target="_blank" rel="external">黑白棋</a></li>
<li><a href="http://yansm.github.io/fromone/index.html" target="_blank" rel="external">fromone</a></li>
</ul>
<h4 id="2-群员作品"><a href="#2-群员作品" class="headerlink" title="2. 群员作品"></a>2. 群员作品</h4><ul>
<li><a href="http://demo.webjyh.com/" target="_blank" rel="external">MDialog - [合肥-M.J]</a></li>
<li><a href="http://sandbox.runjs.cn/show/do6zlrrk" target="_blank" rel="external">轮播图 - [上海－冷静]</a></li>
<li><a href="http://www.replace5.com/" target="_blank" rel="external">[广州—坚壳]</a></li>
<li><a href="http://www.seejs.com/demos/" target="_blank" rel="external">[成都 - 无痕]　感恩节专题</a></li>
<li><a href="http://hacke2.github.io/works" target="_blank" rel="external">[球霸天]</a></li>
<li><a href="http://www.cnblogs.com/mcat/" target="_blank" rel="external">[北京-小数]</a></li>
<li><a href="http://thx.github.io/magix/" target="_blank" rel="external">[ptf] Magix 工具</a></li>
<li><a href="http://thx.github.io/magix/" target="_blank" rel="external">[杭州-Pft] Magix 基于 MVC 结构和 Hash 驱动的 OPOA（One Page One Application）应用</a></li>
<li><a href="http://bh-lay.com/labs/" target="_blank" rel="external">[上海-剧中人]-实验室</a></li>
<li><a href="http://jikeytang.github.io" target="_blank" rel="external">[上海-豪情 ] 作品集合</a></li>
<li><a href="http://guoshan.sinaapp.com/" target="_blank" rel="external">[成都-feeling]</a></li>
<li><a href="http://www.cnblogs.com/liyunhua/" target="_blank" rel="external">[上海-angela]</a></li>
<li><a href="http://hcjp.github.io/work/demo/" target="_blank" rel="external">[海南-hank]作品</a></li>
<li><a href="https://github.com/yibuyisheng/blogs/issues" target="_blank" rel="external">[上海-张力]博客</a></li>
<li><a href="http://zkske121.github.io/" target="_blank" rel="external">[上海-zenki]作品</a></li>
<li><a href="http://01google.sinaapp.com/locker.html" target="_blank" rel="external">移动端图案解锁</a></li>
<li><a href="https://github.com/webjyh/MPreview.mobile" target="_blank" rel="external">[合肥-M.J] - MPreview 移动端图片预览组</a></li>
<li><a href="https://github.com/webjyh/Mexam" target="_blank" rel="external">[合肥-M.J] - Mexam 移动端在线做题组</a></li>
<li><a href="http://letyougo.github.io/dancer/" target="_blank" rel="external">[北京-苏瑞] - dancer小人</a></li>
<li><a href="http://k.swao.cn/js/" target="_blank" rel="external">[上海-玄沐]- 个人网站</a></li>
<li><a href="http://www.meckodo.com/" target="_blank" rel="external">[厦门-二哲]- 个人博客</a></li>
</ul>
<h4 id="3-国外大牛精品"><a href="#3-国外大牛精品" class="headerlink" title="3. 国外大牛精品"></a>3. 国外大牛精品</h4><ul>
<li><a href="http://pazguille.me/" target="_blank" rel="external">pazguille</a></li>
</ul>
<h3 id="十三-简历模板"><a href="#十三-简历模板" class="headerlink" title="十三. 简历模板"></a>十三. 简历模板</h3><ul>
<li><a href="http://learnshare.github.io/about/index.html" target="_blank" rel="external">不错的个人简历</a></li>
<li><a href="http://hcy2367.github.io/resume/" target="_blank" rel="external">简历</a></li>
<li><a href="http://ncuey.sinaapp.com/CrispElite/" target="_blank" rel="external">张伦</a></li>
<li><a href="https://github.com/hacke2/ResumeSample" target="_blank" rel="external">简历</a></li>
<li><a href="http://blog.dandyweng.com/2013/07/how-my-website-was-created/" target="_blank" rel="external">翁天信</a></li>
<li><a href="http://www.webhek.com/misc/interactive-resume/" target="_blank" rel="external">动画方式的简历</a></li>
<li><a href="http://www.linqing07.com/resume.html" target="_blank" rel="external">组件丰富简历</a></li>
<li><a href="http://www.mojianli.com/resume/view" target="_blank" rel="external">简历池</a></li>
<li><a href="http://www.haorooms.com/about" target="_blank" rel="external">haorooms博客</a></li>
<li><a href="http://cv.youngdze.com/" target="_blank" rel="external">Justin Young</a></li>
<li><a href=""></a></li>
</ul>
<h3 id="十四-面试题"><a href="#十四-面试题" class="headerlink" title="十四. 面试题"></a>十四. 面试题</h3><ul>
<li><a href="http://www.nowcoder.com/discuss/3196" target="_blank" rel="external">那几个月在找工作（百度，网易游戏）</a></li>
<li><a href="http://www.html-js.com/article/1743" target="_blank" rel="external">2014最新面试题</a></li>
<li><a href="http://www.w3cfuns.com/thread-5598563-2-1.html" target="_blank" rel="external">阿里前端面试题</a></li>
<li><a href="http://www.cnblogs.com/imwtr/p/4685546.html" target="_blank" rel="external">2016校招内推 – 阿里巴巴前端 – 三面面试经历 </a></li>
<li><a href="http://www.w3cfuns.com/article-5599657-1-1.html" target="_blank" rel="external">腾讯面试题</a></li>
<li><a href="http://www.cnblogs.com/lvdabao/p/3660707.html" target="_blank" rel="external">年后跳槽那点事：乐视+金山+360面试之行</a></li>
<li><a href="http://fatesinger.com/2722.html" target="_blank" rel="external">阿里前端面试题上线</a></li>
<li><a href="http://www.cnblogs.com/52cik/p/js-question-lg.html" target="_blank" rel="external">拉勾网js面试题</a></li>
<li><a href="http://www.cnblogs.com/allenxing/p/3724382.html" target="_blank" rel="external">前端面试</a></li>
<li><a href="http://mianshiti.diandian.com/" target="_blank" rel="external">Web开发笔试面试题 大全</a></li>
<li><a href="http://segmentfault.com/a/1190000000465431" target="_blank" rel="external">前端开发面试题</a></li>
<li><a href="https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions" target="_blank" rel="external">2014最新前端面试题</a></li>
<li><a href="https://github.com/fex-team/interview-questions" target="_blank" rel="external">百度面试</a></li>
<li><a href="http://www.w3cfuns.com/forum.php?mod=forumdisplay&amp;fid=51&amp;filter=typeid&amp;typeid=177" target="_blank" rel="external">面试题</a></li>
<li><a href="https://github.com/darcyclarke/Front-end-Developer-Interview-Questions/tree/master/Chinese" target="_blank" rel="external">前端工作面试问题</a></li>
<li><a href="http://segmentfault.com/a/1190000000465431" target="_blank" rel="external">前端开发面试题</a></li>
<li><a href="http://ourjs.com/detail/5%E4%B8%AA%E7%BB%8F%E5%85%B8%E7%9A%84%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98" target="_blank" rel="external">5个经典的前端面试问题</a></li>
<li><a href="http://segmentfault.com/a/1190000002562454" target="_blank" rel="external">最全前端面试问题及答案总结 </a></li>
<li><a href="http://www.html-js.com/article/Large-search-front-team-column%202961" target="_blank" rel="external">如何面试一名前端开发工程师？</a></li>
<li><a href="https://github.com/hawx1993/Front-end-Interview-questions" target="_blank" rel="external">史上最全 前端开发面试问题及答案整理</a></li>
<li><a href="http://www.cnblogs.com/xiaoruo/p/4665163.html" target="_blank" rel="external">前端实习生面试总结 </a></li>
<li><a href="https://github.com/hawx1993/Front-end-Interview-questions" target="_blank" rel="external">史上最全 前端开发面试问题及答案整理</a></li>
<li><a href="http://blog.jobbole.com/78738/" target="_blank" rel="external">BAT及各大互联网公司2014前端笔试面试题：JavaScript篇</a></li>
<li><a href="https://github.com/paddingme/Front-end-Web-Development-Interview-Question" target="_blank" rel="external">前端开发面试题大收集</a></li>
<li><a href="https://github.com/qiu-deqing/FE-interview" target="_blank" rel="external">收集的前端面试题和答案</a></li>
<li><a href="http://www.zhihu.com/question/19568008" target="_blank" rel="external">如何面试前端工程师</a></li>
<li><a href="https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md" target="_blank" rel="external">前端开发面试题</a></li>
<li><a href="http://www.nowcoder.com/discuss?type=2" target="_blank" rel="external">牛客网-笔试面经</a></li>
</ul>
<h3 id="十五-iconfont"><a href="#十五-iconfont" class="headerlink" title="十五. iconfont"></a>十五. iconfont</h3><ul>
<li><a href="http://www.zhihu.com/question/21253343" target="_blank" rel="external">中文字体</a></li>
<li><a href="http://iconfont.cn" target="_blank" rel="external">淘宝字库</a></li>
<li><a href="http://mux.alimama.com/fonts" target="_blank" rel="external">字体</a></li>
<li><a href="http://iconfont.cn/help/platform.html" target="_blank" rel="external">制作教程</a></li>
<li><a href="http://www.zhangxinxu.com/wordpress/?s=icomoon" target="_blank" rel="external">zhangxinxu-icommon</a></li>
<li><a href="https://icomoon.io/app/" target="_blank" rel="external">icommon</a></li>
<li><a href="http://imooc.com/learn/243" target="_blank" rel="external">用字体在网页中画ICON图标(推荐教程)</a></li>
<li><a href="http://font-spider.org/" target="_blank" rel="external">字体压缩工具</a> 感谢初级群　[深圳-小鱼] 的推荐</li>
</ul>
<h3 id="十六-开发工具类"><a href="#十六-开发工具类" class="headerlink" title="十六. 开发工具类"></a>十六. 开发工具类</h3><ol>
<li><p>前端开发工具</p>
<ul>
<li><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial" target="_blank" rel="external">IntelliJ IDEA 简体中文专题教程</a></li>
<li><a href="http://t.cn/8kZZ1Uy" target="_blank" rel="external">Webstorm,InterllIdea,Phpstorm</a></li>
<li><a href="https://github.com/jikeytang/sublime-text" target="_blank" rel="external">SublimeText</a></li>
<li><a href="https://atom.io/" target="_blank" rel="external">Atom</a></li>
<li><a href="https://code.visualstudio.com/" target="_blank" rel="external">visual studio code</a></li>
</ul>
</li>
<li><p>Chrome, Firebug, Filddle 调试</p>
<ol>
<li><p>Fiddler</p>
<ul>
<li><a href="http://www.cnblogs.com/tugenhua0707/p/4623317.html" target="_blank" rel="external">Fiddler调式使用知多少(一)深入研究</a></li>
<li><a href="http://www.cnblogs.com/strick/p/4570006.html" target="_blank" rel="external">微信fiddle</a></li>
<li><a href="http://gaoboy.com/article/26.html" target="_blank" rel="external">微信fiddle</a></li>
<li><a href=""></a></li>
</ul>
</li>
<li><p>Chrome</p>
<ul>
<li><a href="https://developer.chrome.com/devtools" target="_blank" rel="external">Google Chrome 官方</a></li>
<li><a href="http://www.cnblogs.com/constantince/p/4565261.html" target="_blank" rel="external">Chrome - 基础</a></li>
<li><a href="http://www.cnblogs.com/constantince/p/4579121.html" target="_blank" rel="external">Chrome - 进阶</a></li>
<li><a href="http://www.cnblogs.com/constantince/p/4585983.html" target="_blank" rel="external">Chrome - 性能</a></li>
<li><a href="http://www.cnblogs.com/constantince/p/4607497.html" target="_blank" rel="external">Chrome - 性能进阶</a></li>
<li><a href="http://www.cnblogs.com/constantince/p/4624241.html" target="_blank" rel="external">Chrome - 移动</a></li>
<li><a href="http://www.cnblogs.com/liyunhua/p/4544738.html" target="_blank" rel="external">Chrome - 使用技巧</a></li>
<li><a href="http://www.cnblogs.com/Wayou/p/chrome-console-tips-and-tricks.html" target="_blank" rel="external">Chrome - Console控制台不完全指南</a></li>
<li><a href="http://c7sky.com/chrome-devtools-workspace.html" target="_blank" rel="external">Chrome - Workspace使浏览器变成IDE</a></li>
<li><a href="http://www.html-js.com/article/Nothing-blind%202975" target="_blank" rel="external">network面板</a></li>
<li><a href="http://anti-code.com/devtools-cheatsheet/" target="_blank" rel="external">chrome开发工具快捷键</a></li>
<li><a href="http://www.html-js.com/article/2327" target="_blank" rel="external">chrome调试工具常用功能整理</a></li>
<li><a href="http://www.iinterest.net/2014/05/09/chrome-dev-tool-workspace/" target="_blank" rel="external">Chrome 开发工具 Workspace 使用</a></li>
<li><a href="http://www.cppblog.com/deercoder/archive/2011/10/22/158886.html" target="_blank" rel="external">Chrome神器Vimium快捷键学习记录 </a></li>
<li><a href="http://www.w3cplus.com/sassguide/debug.html" target="_blank" rel="external">sass调试-w3cplus</a></li>
<li><a href="http://www.w3cplus.com/tools/how-to-use-chrome-devtools-like-a-pro.html" target="_blank" rel="external">如何更专业的使用Chrome开发者工具-w3cplus</a></li>
<li><a href="http://sentsin.com/web/253.html" target="_blank" rel="external">chrome调试canvas</a></li>
<li><a href="https://developer.chrome.com/devtools/index" target="_blank" rel="external">chrome profiles1</a></li>
<li><a href="http://h5dev.uc.cn/article-25-1.html" target="_blank" rel="external">chrome profiles2</a></li>
<li><a href="http://www.oschina.net/translate/performance-optimisation-with-timeline-profiles" target="_blank" rel="external">chrome profiles3</a></li>
<li><a href="https://developer.chrome.com/devtools/docs/mobile-emulation" target="_blank" rel="external">chrome移动版调试</a></li>
<li><a href="http://ued.taobao.org/blog/2012/06/debug-with-chrome-dev-tool/" target="_blank" rel="external">chrome调试</a></li>
<li><a href="http://www.cnblogs.com/QLeelulu/archive/2011/08/28/2156402.html" target="_blank" rel="external">chrome的调试</a></li>
<li><a href="https://developer.chrome.com/devtools/docs/commandline-api" target="_blank" rel="external">chrome console 命令详解</a></li>
<li><a href="http://www.cnblogs.com/leonkao/p/3809655.html" target="_blank" rel="external">查看事件绑定1</a></li>
<li><a href="http://www.cnblogs.com/xiaoyao2011/p/3447421.html" target="_blank" rel="external">查看事件绑定2</a></li>
<li><a href="http://segmentfault.com/a/1190000000683599" target="_blank" rel="external">神器——Chrome开发者工具(一)</a></li>
<li><a href="https://xinranliu.me/2015-05-22-qiqu-performance/" target="_blank" rel="external">奇趣百科性能优化(Chrome DevTools 中的 Timeline Profils 等工具使用介绍)</a></li>
<li><a href="http://frontenddev.org/link/15-tips-of-chrome-developer-tools.html" target="_blank" rel="external">chrome 开发者工具的 15 个小技巧</a></li>
<li><a href="http://1ke.co/course/361" target="_blank" rel="external">Chrome开发者工具不完全指南</a></li>
<li><a href="http://segmentfault.com/a/1190000003882567" target="_blank" rel="external">Chrome 开发者工具使用技巧</a></li>
</ul>
</li>
<li><p>Firebug</p>
<ul>
<li><a href="http://www.imooc.com/learn/137" target="_blank" rel="external">firebug视频教程</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Tools/WebIDE" target="_blank" rel="external">firefox 模拟器</a></li>
<li><a href="http://www.cnblogs.com/ctriphire/p/4116207.html" target="_blank" rel="external">console.log 命令详解</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2008/06/firebug_tutorial.html" target="_blank" rel="external">Firebug入门指南</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2011/03/firebug_console_tutorial.html" target="_blank" rel="external">Firebug控制台详解</a></li>
<li><a href=""></a></li>
</ul>
</li>
<li><p>移动,微信调试</p>
<ul>
<li><a href="https://openstf.github.io/" target="_blank" rel="external">浏览器端调试安卓</a></li>
<li><a href="http://yujiangshui.com/multidevice-frontend-debug/" target="_blank" rel="external">移动端前端开发调试</a></li>
<li><a href="https://github.com/yujiangshui/CN-Chrome-DevTools/blob/remote-debugging/md/Use-Tools/remote-debugging.md" target="_blank" rel="external">使用 Chrome 远程调试 Android 设备</a></li>
<li><a href="http://plus.uc.cn/document/webapp/doc5.html" target="_blank" rel="external">mac移动端调试</a></li>
<li><a href="http://www.mihtool.com/" target="_blank" rel="external">mac移动端调试</a></li>
<li><a href="http://thx.github.io/mobile/debugging-in-mobile/" target="_blank" rel="external">无线调试攻略</a></li>
<li><a href="http://yanhaijing.com/mobile/2014/12/17/web-debug-for-mobile/" target="_blank" rel="external">无线调试攻略</a></li>
<li><a href="http://www.jianshu.com/p/ccf124f1f74b" target="_blank" rel="external">屌爆了,完美调试 微信webview(x5)</a></li>
<li><a href="http://liyaodong.com/2015/07/06/%E5%BE%AE%E4%BF%A1%E8%B0%83%E8%AF%95%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/" target="_blank" rel="external">微信调试的那些事</a></li>
<li><a href="http://jsconsole.com/" target="_blank" rel="external">远程console</a></li>
<li><a href="http://blog.qqbrowser.cc/" target="_blank" rel="external">微信调试工具</a></li>
<li><a href="https://github.com/jieyou/remote_inspect_web_on_real_device" target="_blank" rel="external">各种真机远程调试方法汇总</a></li>
</ul>
</li>
<li><p>iOS Simulator</p>
<ul>
<li><a href="https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/iOS_Simulator_Guide/Introduction/Introduction.html" target="_blank" rel="external">Simulator</a></li>
<li><a href="http://www.crifan.com/intro_ios_simulator_in_xcode_and_usage_summary/" target="_blank" rel="external">Xcode中的iOS模拟器(iOS Simulator)的介绍和使用心得</a></li>
</ul>
</li>
</ol>
</li>
<li><p>img</p>
<ul>
<li><a href="http://preloaders.net/en/circular" target="_blank" rel="external">loading img</a></li>
<li><a href="http://zhitu.isux.us/" target="_blank" rel="external">智图-图片优化平台</a></li>
<li><a href="https://tinypng.com/" target="_blank" rel="external">在线png优化</a></li>
</ul>
</li>
<li><p>生成二维码</p>
<ul>
<li><a href="http://cli.im/" target="_blank" rel="external">生成二维码</a></li>
</ul>
</li>
<li><p>浏览器同步</p>
<ul>
<li><a href="https://github.com/leeluolee/puer" target="_blank" rel="external">puer</a></li>
<li><a href="http://livereload.com/" target="_blank" rel="external">liveReload</a></li>
<li><a href="http://getf5.com/" target="_blank" rel="external">f5</a></li>
<li><a href="http://geek100.com/2608/" target="_blank" rel="external">File Watchers</a></li>
</ul>
</li>
<li><p>在线PPT制作</p>
<ul>
<li><a href="http://js8.in/2013/11/16/%E6%8E%A8%E8%8D%90nodeppt%EF%BC%9A%E4%BD%BF%E7%94%A8markdown%E8%AF%AD%E6%B3%95%E6%9D%A5%E5%86%99%E7%BD%91%E9%A1%B5ppt/" target="_blank" rel="external">nodePPT</a></li>
<li><a href="https://github.com/ksky521/nodePPT" target="_blank" rel="external">PPT</a></li>
<li><a href="https://github.com/hakimel/reveal.js/" target="_blank" rel="external">reveal</a></li>
<li><a href="https://github.com/Seldaek/slippy" target="_blank" rel="external">slippy</a></li>
</ul>
</li>
</ol>
<h3 id="十七-前端导航网站"><a href="#十七-前端导航网站" class="headerlink" title="十七. 前端导航网站"></a>十七. 前端导航网站</h3><ul>
<li><a href="http://uxbees.com/index.html" target="_blank" rel="external">界面清爽的前端导航</a></li>
<li><a href="http://whycss.com/" target="_blank" rel="external">前端导航</a></li>
<li><a href="http://www.daqianduan.com/nav" target="_blank" rel="external">前端网址导航</a></li>
<li><a href="http://sentsin.com/daohang/" target="_blank" rel="external">前端名录</a></li>
<li><a href="http://123.jser.us/" target="_blank" rel="external">前端导航</a></li>
<li><a href="http://www.css88.com/nav/" target="_blank" rel="external">前端开发资源</a></li>
<li><a href="http://www.haourl.cn/" target="_blank" rel="external">网址导航</a></li>
<li><a href="http://code.ciaoca.com/" target="_blank" rel="external">前端开发仓库 - 众多效果的收集地</a> </li>
<li><a href="https://github.com/jnoodle/f2e-collect" target="_blank" rel="external">前端资源导航</a></li>
<li><a href="http://f2e.im/static/pages/nav/index.html" target="_blank" rel="external">F2E 前端导航</a></li>
</ul>
<h3 id="十八-常用CDN"><a href="#十八-常用CDN" class="headerlink" title="十八. 常用CDN"></a>十八. 常用CDN</h3><ul>
<li><a href="http://lib.sinaapp.com/" target="_blank" rel="external">新浪CDN</a></li>
<li><a href="http://cdn.code.baidu.com/" target="_blank" rel="external">百度静态资源公共库</a></li>
<li><a href="http://libs.useso.com/" target="_blank" rel="external">360网站卫士常用前端公共库CDN服务</a></li>
<li><a href="http://www.bootcdn.cn/" target="_blank" rel="external">Bootstrap中文网开源项目免费 CDN 服务</a></li>
<li><a href="http://staticfile.org/" target="_blank" rel="external">开放静态文件 CDN - 七牛</a></li>
<li><a href="http://www.jq22.com/cdn/" target="_blank" rel="external">CDN加速 - jq22</a></li>
<li><a href="http://code.jquery.com/" target="_blank" rel="external">jQuery CDN</a></li>
<li><a href="http://www.google-jquery-cdn.com/" target="_blank" rel="external">Google jQuery CDN</a></li>
<li><a href="http://www.asp.net/ajax/cdn" target="_blank" rel="external">微软CDN</a></li>
</ul>
<h3 id="十九-Git-SVN-Github"><a href="#十九-Git-SVN-Github" class="headerlink" title="十九. Git,SVN,Github"></a>十九. Git,SVN,Github</h3><ol>
<li><p>Git</p>
<ul>
<li><a href="http://git-scm.com/" target="_blank" rel="external">git-scm</a></li>
<li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">廖雪峰-Git教程</a></li>
<li><a href="https://git-for-windows.github.io/" target="_blank" rel="external">git-for-windows</a></li>
<li><a href="http://daemon369.github.io/git/2015/03/10/add-ssh-keys-for-github/" target="_blank" rel="external">GitHub 添加 SSH keys</a></li>
<li><a href="http://www.worldhello.net/gotgithub/index.html" target="_blank" rel="external">gogithub</a></li>
<li><a href="http://pcottle.github.io/learnGitBranching/" target="_blank" rel="external">git常规命令练习</a></li>
<li><a href="https://github.com/xirong/my-git" target="_blank" rel="external">git的资料整理</a></li>
<li><a href="http://www.cnblogs.com/fanfan259/p/4810517.html" target="_blank" rel="external">我所记录的git命令（非常实用）</a></li>
<li><a href="https://github.com/xirong/my-git/blob/master/git-workflow-tutorial.md" target="_blank" rel="external">企业开发git工作流模式探索部分休整</a></li>
<li><a href="https://github.com/phodal/github-roam" target="_blank" rel="external">GitHub 漫游指南</a></li>
<li><a href="https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md" target="_blank" rel="external">GitHub秘籍</a></li>
<li><a href="http://livoras.com/post/28" target="_blank" rel="external">使用git和github进行协同开发流程</a></li>
<li><a href="http://onlywei.github.io/explain-git-with-d3/" target="_blank" rel="external">动画方式练习git</a></li>
</ul>
</li>
</ol>
<p>新增：https://github.com/AutumnsWind/Front-end-tutorial/blob/master/project.md</p>
<p>内容是出自：
https://github.com/jsfront/src/blob/master/qq.md</p>
<p>https://github.com/jsfront/src/blob/master/qq.md</p>
<p>https://github.com/jsfront/src/blob/master/qq.md</p>
<p>综合类 | 地址
— | — 
前端知识体系|http://www.cnblogs.com/sb19871023/p/3894452.html
前端知识结构|https://github.com/JacksonTian/fks
Web前端开发大系概览|https://github.com/unruledboy/WebFrontEndStack
Web前端开发大系概览-中文版|http://www.cnblogs.com/unruledboy/p/WebFrontEndStack.html
Web Front-end Stack v2.2|https://raw.githubusercontent.com/unruledboy/WebFrontEndStack/master/Web%20Front%20End%20Stack.png
免费的编程中文书籍索引|https://github.com/justjavac/free-programming-books-zh_CN
前端书籍|https://github.com/dypsilon/frontend-dev-bookmarks
前端免费书籍大全|https://github.com/vhf/free-programming-books
前端知识体系|http://www.cnblogs.com/sb19871023/p/3894452.html
免费的编程中文书籍索引|https://github.com/justjavac/free-programming-books-zh_CN
智能社 - 精通JavaScript开发|http://study.163.com/course/introduction/224014.htm
重新介绍 JavaScript（JS 教程）|https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript
麻省理工学院公开课：计算机科学及编程导论|http://v.163.com/special/opencourse/bianchengdaolun.html
JavaScript中的this陷阱的最全收集–没有之一|http://segmentfault.com/a/1190000002640298
JS函数式编程指南|https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch1.html
JavaScript Promise迷你书（中文版）|http://liubin.github.io/promises-book
腾讯移动Web前端知识库|https://github.com/AlloyTeam/Mars
Front-End-Develop-Guide 前端开发指南|https://github.com/Front-End-Developers-Hunan/Front-End-Develop-Guide
前端开发笔记本|https://li-xinyang.gitbooks.io/frontend-notebook/content
大前端工具集 - 聂微东|https://github.com/nieweidong/fetool
前端开发者手册|https://dwqs.gitbooks.io/frontenddevhandbook/content</p>
<p>入门类 | 地址
— | — 
前端入门教程|http://www.cnblogs.com/jikey/p/3613082.html
瘳雪峰的Javascript教程|http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000
jQuery基础教程|http://www.imooc.com/view/11
前端工程师必备的PS技能——切图篇|http://www.imooc.com/view/506
结合个人经历总结的前端入门方法|https://github.com/qiu-deqing/FE-learning</p>
<p>效果类 | 地址
— | — 
弹出层|http://www.imooc.com/learn/58
焦点图轮播特效|http://www.imooc.com/learn/18</p>
<p>工具类| 地址
— | — 
css sprite 雪碧图制作|http://www.imooc.com/learn/93
版本控制入门 – 搬进 Github|http://www.imooc.com/learn/390
Grunt-beginner前端自动化工具|http://www.imooc.com/learn/30</p>
<p>慕课专题| 地址
— | — 
张鑫旭 - 慕课系列|http://www.imooc.com/space/teacher/id/197450
lyn - 慕课系列|http://www.imooc.com/space/teacher/id/104593
艾伦 - 慕课系列|http://www.imooc.com/space/teacher/id/290139
碧仔 - Hello，移动WEB|http://www.imooc.com/view/494</p>
<p>周报类| 地址
— | — 
平安科技移动开发二队技术周报|https://github.com/PaicHyperionDev/MobileDevWeekly</p>
<h3 id="API"><a href="#API" class="headerlink" title="API:"></a>API:</h3><p>开发中心| 地址
— | — 
mozilla js参考|https://developer.mozilla.org/zh-CN/docs/Web/JavaScript
chrome开发中心（chrome的内核已转向blink）|https://developer.chrome.com/extensions/api_index.html
safari开发中心|https://developer.apple.com/library/safari/navigation
microsoft js参考|https://msdn.microsoft.com/zh-cn/library/d1et7k7c(v=vs.94.aspx
js秘密花园|http://sanshi.me/articles/JavaScript-Garden-CN/html/index.html
js秘密花园|http://bonsaiden.github.io/JavaScript-Garden/zh
w3help|http://www.w3help.org 综合Bug集合网站</p>
<p>综合搜索| 地址
— | — 
javascripting|http://www.javascripting.com
各种流行库搜索|http://microjs.com</p>
<p>综合API| 地址
— | —<br>runoob.com-包含各种API集合|http://www.runoob.com
开源中国在线API文档合集|http://tool.oschina.net/apidocs
devdocs|http://devdocs.io 英文综合API网站</p>
<p>jQuery| 地址
— | —<br>jQuery API 中文文档|http://www.jquery123.com
hemin 在线版|http://hemin.cn/jq
css88 jq api|http://www.css88.com/jqapi-1.9/on
css88 jqui api|http://www.css88.com/jquery-ui-api
学习jquery|http://learn.jquery.com
jquery 源码查找|http://james.padolsey.com/jquery</p>
<p>Ecmascript| 地址
— | —<br>Understanding ECMAScript 6 - Nicholas C. Zakas|https://leanpub.com/understandinges6/read
exploring-es6|https://leanpub.com/exploring-es6/read
exploring-es6翻译|https://github.com/es6-org/exploring-es6
exploring-es6翻译后预览|http://es6-org.github.io/exploring-es6
阮一峰 es6|http://es6.ruanyifeng.com
阮一峰 Javascript|http://javascript.ruanyifeng.com
ECMA-262，第 5 版|http://yanhaijing.com/es5
es5|http://es5.github.io</p>
<p>Js template| 地址
— | —<br>template-chooser|http://garann.github.io/template-chooser
artTemplate|https://github.com/aui/artTemplate
tomdjs|https://github.com/aui/tmodjs/blob/master/README.md
淘宝模板juicer模板|http://juicer.name/docs/docs_zh_cn.html
Fxtpl v1.0 繁星前端模板引擎|http://koen301.github.io/fxtpl
laytpl|http://laytpl.layui.com
mozilla - nunjucks|https://github.com/mozilla/nunjucks
Juicer|https://github.com/PaulGuo/Juicer
dustjs|http://akdubya.github.io/dustjs
etpl|http://ecomfe.github.io/etpl</p>
<p>弹出层| 地址
— | —<br>artDialog 最新版|https://github.com/aui/artDialog
artDialog 文档|http://aui.github.io/artDialog/doc/index.html
google code 下载地址|https://code.google.com/p/artdialog/downloads/list
贤心弹出层|http://layer.layui.com
响应式用户交互组件库|https://github.com/bh-lay/UI
sweetalert-有css3动画弹出层|http://t4t5.github.io/sweetalert</p>
<p>CSS| 地址
— | —<br>CSS 语法参考|http://tympanus.net/codrops/css_reference
CSS3动画手册|http://isux.tencent.com/css3/index.html
腾讯css3动画制作工具|http://isux.tencent.com/css3/tools.html
志爷css小工具集合|http://linxz.github.io/tianyizone
css3 js 移动大杂烩|http://www.note12.com/category/blog/2014-6-5/538fe0a9f786f1b7019a4dfb
bouncejs 触摸库|http://bouncejs.com
css3 按钮动画|http://fian.my.id/Waves
animate.css|http://daneden.github.io/animate.css
全局CSS的终结(狗带 [译]|http://www.alloyteam.com/2015/10/8536</p>
<p>Angularjs| 地址
— | —<br>Angular.js 的一些学习资源|https://github.com/dolymood/AngularLearning
angularjs中文社区|http://angularjs.cn
Angularjs源码学习|http://www.cnblogs.com/xuwenmin888/p/3739096.html
Angularjs源码学习|http://www.ifeenan.com/?c=AngularJS
angular对bootstrap的封装|http://angular-ui.github.io/bootstrap
angularjs + nodejs|https://cnodejs.org/topic/51404e0f069911196d2e3923
吕大豹 Angularjs|http://www.cnblogs.com/lvdabao/tag/AngularJs
AngularJS 最佳实践|http://www.infoq.com/cn/news/2013/02/angular-web-app
Angular的一些扩展指令|http://www.lovelucy.info/angularjs-best-practices.html
Angular数据绑定原理|https://github.com/Pasvaz/bindonce
一些扩展Angular UI组件|https://github.com/angular-ui
Ember和AngularJS的性能测试|http://voidcanvas.com/emberjs-vs-angularjs-performance-testing
带你走近AngularJS - 基本功能介绍|http://www.cnblogs.com/powertoolsteam/p/angularjs-introdection.html
Angularjs开发指南|http://angular.duapp.com/docs/guide
Angularjs学习|http://www.cnblogs.com/amosli/p/3710648.html
不要带着jQuery的思维去学习AngularJS|http://www.rainweb.cn/article/angularjs-jquery.html
angularjs 学习笔记|http://wangjiatao.diandian.com/?tag=angularjs
angularjs 开发指南|http://www.angularjs.cn/T008
angularjs 英文资料|https://github.com/jmcunningham/AngularJS-Learning
angular bootstrap|http://angular-ui.github.io/bootstrap
angular jq mobile|https://github.com/opitzconsulting/jquery-mobile-angular-adapter
angular ui|http://mgcrea.github.io/angular-strap
整合jQuery Mobile+AngularJS经验谈|http://www.tuicool.com/articles/7ZZVr2
有jQuery背景，该如何用AngularJS编程思想|http://blog.jobbole.com/46589/ 
AngularJS在线教程|http://each.sinaapp.com/angular
angular学习笔记|http://www.zouyesheng.com/angular.html</p>
<p>React| 地址
— | —<br>react.js 中文论坛|http://www.react-china.org
react.js 官方网址|https://facebook.github.io/react/index.html
react.js 官方文档|https://facebook.github.io/react/docs/getting-started.html
react.js material UI|http://material-ui.com/#
react.js TouchstoneJS UI|http://touchstonejs.io
react.js amazeui UI|http://amazeui.org/react
React 入门实例教程 - 阮一峰|http://www.ruanyifeng.com/blog/2015/03/react.html
React Native 中文版|http://wiki.jikexueyuan.com/project/react-native
Webpack 和 React 小书 - 前端乱炖|http://www.html-js.com/article/Fakefish%203053
Webpack 和 React 小书 - gitbook|https://fakefish.github.io/react-webpack-cookbook
webpack|https://github.com/webpack/webpack
Webpack，101入门体验|http://html-js.com/article/3009
webpack入门教程|http://html-js.com/article/3113
基于webpack搭建前端工程解决方案探索|http://segmentfault.com/a/1190000003499526
React原创实战视频教程|http://www.piliyu.com</p>
<h4 id="移动端API"><a href="#移动端API" class="headerlink" title="移动端API"></a>移动端API</h4><p>API| 地址
— | — 
99移动端知识集合|https://github.com/jtyjty99999/mobileTech
移动端前端开发知识库|https://github.com/AlloyTeam/Mars
移动前端的一些坑和解决方法（外观表现）|http://caibaojian.com/mobile-web-bug.html
【原】移动web资源整理|http://www.cnblogs.com/PeunZhang/p/3407453.html
zepto 1.0 中文手册|http://mweb.baidu.com/zeptoapi
zepto 1.0 中文手册|http://www.html-5.cn/Manual/Zepto
zepto 1.1.2|http://www.css88.com/doc/zeptojs_api
zepto 中文注释|http://www.cnblogs.com/sky000/archive/2013/03/29/2988952.html
jqmobile 手册|http://app-framework-software.intel.com/api.php
移动浏览器开发集合|https://github.com/maxzhang/maxzhang.github.com/issues
移动开发大杂烩|https://github.com/hoosin/mobile-web-favorites
微信webview中的一些问题|http://lin-chao.github.io/2014/11/14/%E5%BE%AE%E4%BF%A1webview%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98
2. 框架
框架| 地址
— | — 
特色的HTML框架可以创建精美的iOS应用|http://framework7.taobao.org
淘宝SUI|http://m.sui.taobao.org</p>
<h4 id="10-avalon-1"><a href="#10-avalon-1" class="headerlink" title="10. avalon"></a>10. avalon</h4><p>avalon| 地址
— | — 
avalonjs|http://avalonjs.github.io
Avalon新一代UI库： OniUI|http://ued.qunar.com/oniui/index.html
avalon.oniui-基于avalon的组件库|https://github.com/RubyLouvre/avalon.oniui
|</p>
<h4 id="11-Requriejs-1"><a href="#11-Requriejs-1" class="headerlink" title="11. Requriejs"></a>11. Requriejs</h4><p>Requriejs| 地址
— | — 
Javascript模块化编程（一）：模块的写法 |http://www.ruanyifeng.com/blog/2012/10/javascript_module.html
Javascript模块化编程（二）：AMD规范|http://www.ruanyifeng.com/blog/2012/10/asynchronous_module_definition.html
Javascript模块化编程（三）：require.js的用法|http://www.ruanyifeng.com/blog/2012/11/require_js.html
RequireJS入门（一）|http://www.cnblogs.com/snandy/archive/2012/05/22/2513652.html
RequireJS入门（二）|http://www.cnblogs.com/snandy/archive/2012/05/23/2513712.html
RequireJS进阶（三）|http://www.cnblogs.com/snandy/archive/2012/06/08/2538001.html
requrie源码学习|http://www.cnblogs.com/yexiaochai/p/3632580.html 
requrie 入门指南|http://www.oschina.net/translate/getting-started-with-the-requirejs-library 
requrieJS 学习笔记|http://www.cnblogs.com/yexiaochai/p/3214926.html 
requriejs 其一 |http://cyj.me/why-seajs/requirejs/ 
require backbone结合|http://www.cnblogs.com/yexiaochai/p/3221081.html </p>
<h4 id="12-Seajs-1"><a href="#12-Seajs-1" class="headerlink" title="12. Seajs"></a>12. Seajs</h4><p>Seajs| 地址
— | — 
seajs|http://seajs.org
seajs 中文手册|http://cyj.me/why-seajs/zh</p>
<h4 id="13-Less-sass-1"><a href="#13-Less-sass-1" class="headerlink" title="13. Less,sass"></a>13. Less,sass</h4><p>Less,sass| 地址
— | — 
sass|http://www.w3cplus.com/sassguide
sass教程-sass中国|http://www.sass.hk
Sass 中文文档|http://sass.bootcss.com
less|http://less.bootcss.com</p>
<h4 id="14-Markdown-1"><a href="#14-Markdown-1" class="headerlink" title="14. Markdown"></a>14. Markdown</h4><p>Markdown| 地址
— | — 
Markdown 语法说明 (简体中文版|http://wowubuntu.com/markdown
markdown入门参考|https://github.com/LearnShare/Learning-Markdown/blob/master/README.md
gitbook|https://www.gitbook.com 国外的在线markdown可编辑成书
mdeditor|https://www.zybuluo.com/mdeditor  一款国内的在线markdown编辑器
stackedit|https://stackedit.io 国外的在线markdown编辑器，功能强大，同步云盘
mditor|http://bh-lay.github.io/mditor 一款轻量级的markdown编辑器
lepture-editor|https://github.com/lepture/editor
markdown-editor|https://github.com/jbt/markdown-editor</p>
<h4 id="15-D3-1"><a href="#15-D3-1" class="headerlink" title="15. D3"></a>15. D3</h4><p>D3| 地址
— | — 
d3 Tutorials|https://github.com/mbostock/d3/wiki/Tutorials
Gallery|https://github.com/mbostock/d3/wiki/Gallery
lofter|http://datavisual.lofter.com/post/40cf3a_188e535
iteye|http://alanland.iteye.com/blog/1878595
ruanyifeng|http://javascript.ruanyifeng.com/library/d3.html</p>
<h4 id="16-兼容性-1"><a href="#16-兼容性-1" class="headerlink" title="16. 兼容性"></a>16. 兼容性</h4><p>兼容性| 地址
— | — 
esma 兼容列表|http://kangax.github.io/compat-table/es6
W3C CSS验证服务|http://jigsaw.w3.org/css-validator/validator.html.zh-cn
caniuse|http://caniuse.com/#index 
csscreator|http://csscreator.com/properties
microsoft|https://msdn.microsoft.com/zh-cn/library/cc351024(v=vs.85.aspx
在线测兼容-移动端|http://www.responsinator.com
emulators|https://www.manymo.com/emulators</p>
<h4 id="17-UI相关-1"><a href="#17-UI相关-1" class="headerlink" title="17. UI相关"></a>17. UI相关</h4><p>UI相关| 地址
— | — 
bootcss|http://v3.bootcss.com
MetroUICSS|http://www.w3cplus.com/MetroUICSS
semantic|http://semantic-ui.com
Buttons|http://alexwolfe.github.io/Buttons
kitecss|http://hiloki.github.io/kitecss
pintuer|http://www.pintuer.com
amazeui|http://amazeui.org
worldhello|http://www.worldhello.net/gotgithub/index.html
linuxtoy|http://igit.linuxtoy.org/contents.html
gitmagic|http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn
rogerdudler|http://rogerdudler.github.io/git-guide/index.zh.html
gitref|http://gitref.justjavac.com
book|http://git-scm.com/book/zh
gogojimmy|http://gogojimmy.net/2012/01/17/how-to-use-git-1-git-basic</p>
<h4 id="18-HTTP-1"><a href="#18-HTTP-1" class="headerlink" title="18. HTTP"></a>18. HTTP</h4><p>HTTP| 地址
— | — 
HTTP API 设计指南|http://segmentfault.com/bookmark/1230000002521721</p>
<h4 id="19-其它API-1"><a href="#19-其它API-1" class="headerlink" title="19. 其它API"></a>19. 其它API</h4><p>其它API| 地址
— | — 
javascript流行库汇总|javascriptoo
验证api|http://niceue.com/validator/demo/index.php
underscore 中文手册|http://www.css88.com/doc/underscore
underscore源码分析|http://www.html-js.com/article/Underscorejs-source-code-analysis-of-underscorejs-source-code-analysis%203031
underscore源码分析-亚里士朱德的博客|http://yalishizhude.github.io/tags/underscore
underscrejs en api|http://underscorejs.org
lodash - underscore的代替品|https://lodash.com
ext4api|http://extjs-doc-cn.github.io/ext4api
backbone 中文手册|http://www.csser.com/tools/backbone/backbone.js.html
qwrap手册|http://dev.qwrap.com/resource/js/_docs/<em>youa/#/qw/base/loadJs</em>.htm
缓动函数|http://easings.net/zh-cn
svg 中文参考|http://www.w3school.com.cn/svg/svg_reference.asp
svg mdn参考|https://developer.mozilla.org/en-US/docs/Web/SVG
svg 导出 canvas|https://github.com/gabelerner/canvg
svg 导出 png|https://github.com/exupero/saveSvgAsPng
ai-to-svg|http://www.zamzar.com/convert/ai-to-svg
localStorage 库|https://github.com/machao/localStorage</p>
<h4 id="20-图表类-1"><a href="#20-图表类-1" class="headerlink" title="20. 图表类"></a>20. 图表类</h4><p>图表类| 地址
— | — 
Highcharts 中文API|http://www.hcharts.cn/api/index.php
Highcharts 英文API|http://api.highcharts.com/highcharts
ECharts 百度的图表软件|http://echarts.baidu.com/ 
高德地图|http://lbs.amap.com/api
开源的矢量图脚本框架|http://paperjs.org
svg 地图|http://jvectormap.com</p>
<h4 id="21-vue-1"><a href="#21-vue-1" class="headerlink" title="21. vue"></a>21. vue</h4><p>vue| 地址
— | — 
Vue|http://cn.vuejs.org
Vue 论坛|http://forum.vuejs.org
Vue 入门指南|http://www.cnblogs.com/aaronjs/p/3660102.html
Vue 的一些资源索引|http://segmentfault.com/a/1190000000411057
awesome-vue|https://github.com/vuejs/awesome-vue</p>
<h4 id="21-正则-1"><a href="#21-正则-1" class="headerlink" title="21. 正则"></a>21. 正则</h4><p>正则| 地址
— | — 
JS正则表达式元字符|http://segmentfault.com/a/1190000002471140
正则表达式30分钟入门教程|http://deerchao.net/tutorials/regex/regex.htm
MDN-正则表达式|https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions
ruanyifeng - RegExp对象|http://javascript.ruanyifeng.com/stdlib/regexp.html
小胡子哥 - 进阶正则表达式|http://div.io/topic/764?page=1
is.js|https://github.com/Cedriking/is.js/blob/master/is.js
正则在线测试|http://regexper.com
|</p>
<h4 id="22-ionic-1"><a href="#22-ionic-1" class="headerlink" title="22. ionic"></a>22. ionic</h4><p>ionic| 地址
— | — 
ionic|https://github.com/ychow/ionic-guide</p>
<h4 id="23-其它-1"><a href="#23-其它-1" class="headerlink" title="23. 其它"></a>23. 其它</h4><p>其它| 地址
— | — 
Mock.js 是一款模拟数据生成器|http://mockjs.com</p>
<h3 id="开发规范"><a href="#开发规范" class="headerlink" title="开发规范"></a>开发规范</h3><ol>
<li>前端</li>
</ol>
<p>前端| 地址
— | — 
通过分析github代码库总结出来的工程师代码书写习惯|http://alloyteam.github.io/CodeGuide
HTML&amp;CSS编码规范 by @mdo|http://codeguide.bootcss.com
团队合作的css命名规范-腾讯AlloyTeam前端团队|http://www.alloyteam.com/2011/10/107
前端编码规范之js - by yuwenhui|http://yuwenhui.github.io
前端编码规范之js - by 李靖|http://www.cnblogs.com/hustskyking/p/javascript-spec.html
前端开发规范手册|http://zhibimo.com/read/Ashu/front-end-style-guide
Airbnb JavaScript 编码规范（简体中文版）|https://github.com/yuche/javascript#table-of-contents
AMD与CMD规范的区别|http://www.zhihu.com/question/20351507
AMD与CMD规范的区别|http://www.cnblogs.com/tugenhua0707/p/3507957.html
KISSY 源码规范|http://docs.kissyui.com/1.4/docs/html/tutorials/style-guide/kissy-source-style.html
bt编码规范|http://codeguide.bootcss.com
规范加强版|https://github.com/Suxiaogang/Code_Guide
前端代码规范 及 最佳实践|http://blog.jobbole.com/79075
百度前端规范|http://coderlmn.github.io/code-standards
百度前端规范|http://isobar-idev.github.io/code-standards
百度前端规范|http://zhuanlan.zhihu.com/fuyun/19884834
ECMAScript6 编码规范–广发证券前端团队|https://github.com/gf-rd/es6-coding-style
JavaScript 风格指南/编码规范（Airbnb公司版）|http://blog.jobbole.com/79484
网易前端开发规范|http://nec.netease.com/standard
css模块|http://www.75team.com/archives/1049
前端规范资源列表|https://github.com/ecomfe/spec</p>
<ol>
<li>PHP</li>
</ol>
<p>PHP| 地址
— | — 
最流行的PHP 代码规范|http://segmentfault.com/a/1190000000443795
最流行的PHP 代码规范|https://github.com/hfcorriez/fig-standards/blob/zh_CN/%E6%8E%A5%E5%8F%97/PSR-2-coding-style-guide.md</p>
<ol>
<li>Android</li>
</ol>
<p>Android| 地址
— | — 
【敏捷开发】Android团队开发规范|http://www.cnblogs.com/lcw/p/3619181.html
Android 开发规范与应用|http://www.jianshu.com/p/4390f4fe19b3</p>
<h3 id="其它收集"><a href="#其它收集" class="headerlink" title="其它收集"></a>其它收集</h3><h4 id="1-各大公司开源项目-1"><a href="#1-各大公司开源项目-1" class="headerlink" title="1. 各大公司开源项目"></a>1. 各大公司开源项目</h4><p>各大公司开源项目| 地址
— | — 
Facebook Projects|https://code.facebook.com/projects/web
百度web前端研发部|http://fex.baidu.com
百度EFE|http://efe.baidu.com
百度github|https://github.com/fex-team
alloyteam|http://www.alloyteam.com
alloyteam-github|http://alloyteam.github.io
alloyteam-AlloyGameEngine|https://github.com/AlloyTeam/AlloyGameEngine
AlloyDesigner|http://alloyteam.github.io/AlloyDesigner 即时修改，即时保存，设计稿较正，其它开发辅助工具
H5交互页编辑器AEditor介绍|http://www.alloyteam.com/2015/06/h5-jiao-hu-ye-bian-ji-qi-aeditor-jie-shao H5动画交互页开发的工具介绍
AEditor|http://aeditor.alloyteam.com H5动画交互页开发的工具
maka|http://forum.maka.im/wordpress
值得订阅的weekly|https://github.com/fenbility/weekly-feed
腾讯html5|http://cube.qq.com
奇舞团开源项目|http://75team.github.io
Qunar UED|http://ued.qunar.com
Scrat|http://scrat.io</p>
<h4 id="2-Javascript-1"><a href="#2-Javascript-1" class="headerlink" title="2. Javascript"></a>2. Javascript</h4><ol>
<li>常用</li>
</ol>
<p>常用 |地址
— | — 
ieBetter.js-让IE6-IE8拥有IE9+,Chrome等浏览器特性|http://www.zhangxinxu.com/wordpress/2013/12/iebetter-js-make-ie6-ie8-like-modern-browser-ie9-chrome
模拟键盘|http://mottie.github.io/Keyboard
拼音|https://github.com/hotoo/pinyin
中国个人身份证号验证|https://github.com/mc-zone/IDValidator</p>
<ol>
<li>算法</li>
</ol>
<p>算法 | 地址
— | — 
数据结构与算法 JavaScript 描述. 章节练习|https://github.com/Ralph-Wang/algorithm.in.js
常见排序算法（JS版）|https://github.com/twobin/twobinSort
经典排序|https://github.com/luofei2011/jsAgm/blob/master/js/sort.js
常见排序算法-js版本|https://github.com/hechangmin/jssort
JavaScript 算法与数据结构 精华集|https://github.com/lightningtgc/JavaScript-Algorithms
面试常考算法题精讲|http://www.nowcoder.com/live/courses</p>
<ol>
<li>移动端</li>
</ol>
<p>移动端 | 地址
— | — 
fastclick|https://github.com/ftlabs/fastclick
no-click-delay|https://github.com/mmastrac/jquery-noclickdelay</p>
<ol>
<li>JSON</li>
</ol>
<p>JSON | 地址
— | — 
模拟生成JSON数据|http://beta.json-generator.com
返回跨域JSONAPI|http://jsonp.afeld.me</p>
<h4 id="3-Html5-1"><a href="#3-Html5-1" class="headerlink" title="3. Html5"></a>3. Html5</h4><p>Html5 | 地址
— | — 
HTML5 有哪些让你惊艳的 demo？|http://www.zhihu.com/question/24398907</p>
<h4 id="4-CSS-1"><a href="#4-CSS-1" class="headerlink" title="4. CSS"></a>4. CSS</h4><p>CSS | 地址
— | — 
browserhacks|http://browserhacks.com</p>
<h4 id="5-jQuery-1"><a href="#5-jQuery-1" class="headerlink" title="5. jQuery"></a>5. jQuery</h4><ol>
<li>焦点图</li>
</ol>
<p>焦点图 | 地址
— | — 
myfocus|https://github.com/koen301/myfocus
myfocus-官方演示站|http://www.chhua.com/myfocus
SuperSlidev2.1 – 大话主席|http://www.superslide2.com
soChange|http://www.bujichong.com/sojs/soChange/index.html</p>
<h4 id="6-Ext-EasyUI-J-UI-及其它各种UI方案-1"><a href="#6-Ext-EasyUI-J-UI-及其它各种UI方案-1" class="headerlink" title="6. Ext, EasyUI, J-UI 及其它各种UI方案"></a>6. Ext, EasyUI, J-UI 及其它各种UI方案</h4><ol>
<li>Ext</li>
</ol>
<p>Ext, EasyUI, J-UI 及其它各种UI方案 | 地址
— | —
extjs|https://www.sencha.com/products/extjs
ext4英文api|http://docs.sencha.com/extjs/4.0.7
ext4中文api|http://extjs-doc-cn.github.io/ext4api</p>
<ol>
<li>EasyUI</li>
</ol>
<p>EasyUI | 地址
— | — 
jquery easyui 未压缩源代码|http://jquery-easyui.googlecode.com/svn/trunk/src</p>
<ol>
<li>J-UI</li>
</ol>
<p>J-UI | 地址
— | — 
J-UI|http://jui.org</p>
<ol>
<li>Other</li>
</ol>
<p>Other | 地址
— | — 
MUI-最接近原生APP体验的高性能前端框架|http://dcloudio.github.io/mui
Amaze UI | 中国首个开源 HTML5 跨屏前端框架|http://amazeui.org
淘宝 HTML5 前端框架|http://m.sui.taobao.org
KISSY - 阿里前端JavaScript库|http://docs.kissyui.com
网易Nej - Nice Easy Javascript|http://nej.netease.com
Kendo UI MVVM Demo|http://demos.telerik.com/kendo-ui/mvvm/index
Bootstrap|http://www.bootcss.com
Smart UI|http://smartui.chinamzz.com
雅虎UI - CSS UI|http://developer.yahoo.com/yui/grids</p>
<h4 id="7-页面-社会化-分享功能-1"><a href="#7-页面-社会化-分享功能-1" class="headerlink" title="7. 页面 社会化 分享功能"></a>7. 页面 社会化 分享功能</h4><p>页面 社会化 分享功能 | 地址
— | — 
百度分享|http://share.baidu.com pc端
JiaThis|http://jiathis.com pc端
社会化分享组件|http://developer.baidu.com/soc/share 移动端
ShareSDK 轻松实现社会化功能|http://www.mob.com/#/index 移动端
友盟分享|http://dev.umeng.com/social/android/quick-integration 移动端</p>
<h4 id="8-富文本编辑器-1"><a href="#8-富文本编辑器-1" class="headerlink" title="8. 富文本编辑器"></a>8. 富文本编辑器</h4><p>富文本编辑器 | 地址
— | — 
功能齐全 tinymce|https://www.tinymce.com
百度 ueditor|http://ueditor.baidu.com/website
经典的ckeditor|http://ckeditor.com
经典的kindeditor|http://kindeditor.net
wysiwyg|http://www.bootcss.com/p/bootstrap-wysiwyg
一个有情怀的编辑器。Bach’s Editor|http://integ.github.io/BachEditor
tower用的编辑器|https://github.com/mycolorway/simditor
summernote 编辑器|https://github.com/summernote/summernote
html5编辑器|http://neilj.github.io/Squire
XEditor|http://lab.hustlzp.com/XEditor
wangEditor|https://github.com/wangfupeng1988/wangEditor </p>
<h4 id="9-日历-1"><a href="#9-日历-1" class="headerlink" title="9. 日历"></a>9. 日历</h4><ol>
<li>PC</li>
</ol>
<p>PC | 地址
— | — 
经典my97|http://www.my97.net/dp/demo/index.htm
强大的独立日期选择器|http://www.cnblogs.com/gbin1/archive/2012/04/16/2452105.html
fullcalendar|http://fullcalendar.io
fullcalendar日历控件知识点集合 |http://blog.csdn.net/francislaw/article/details/7740630
中文api|http://blog.sina.com.cn/s/blog_9475b1c101012c5f.html
农历日历|https://github.com/zzyss86/LunarCalendar
超酷的仿百度带节日日历老黄历控件|http://www.sucaisj.com/jiaoben/date/201509/16856.html
日期格式化|http://momentjs.com
大牛日历控件|https://github.com/Johnqing/QPAYCalendar
我群某管理作品|https://github.com/Iamlars/dateMarker
input按位替换-官网|http://digitalbush.com/projects/masked-input-plugin
input按位替换-github|https://github.com/digitalBush/jquery.maskedinput/tree/1.2.2
bootstrap-daterangepicker|https://github.com/dangrossman/bootstrap-daterangepicker
国外30个插件集合|http://www.vandelaydesign.com/30-best-free-jquery-plugins
JavaScript datepicker|http://dbushell.com/2012/10/09/pikaday-javascript-datepicker
Datepair.js|http://jonthornton.github.io/Datepair.js
一个风格多样的日历|https://github.com/glad/glDatePicker
弹出层式的全日历|http://amsul.ca/pickadate.js/date
jquery双日历|http://www.daterangepicker.com</p>
<ol>
<li>移动</li>
</ol>
<p>移动 | 地址
— | — 
大气实用jQuery手机移动端日历日期选择插件|http://www.frankdemo.cn/index.php?c=content&amp;a=show&amp;id=115
jQuery Mobile 移动开发中的日期插件Mobiscroll |https://mobiscroll.com</p>
<ol>
<li>Date library</li>
</ol>
<p>Date library | 地址
— | — 
Datejs|https://github.com/datejs/Datejs
sugarjs|http://sugarjs.com/api/Date</p>
<h4 id="10-综合效果搜索平台-1"><a href="#10-综合效果搜索平台-1" class="headerlink" title="10. 综合效果搜索平台"></a>10. 综合效果搜索平台</h4><p>综合效果搜索平台 | 地址
— | — 
效果网|http://www.jq22.com
17素材|http://www.17sucai.com
常用的JavaScript代码片段|http://microjs.com</p>
<h4 id="11-前端工程化-1"><a href="#11-前端工程化-1" class="headerlink" title="11. 前端工程化"></a>11. 前端工程化</h4><ol>
<li>概述</li>
</ol>
<p>概述 | 地址
— | — 
前端工具大全|http://www.awesomes.cn
什么是前端工程化|https://github.com/fouber/blog/issues/10?from=timeline&amp;isappinstalled=0#</p>
<ol>
<li>Gulp </li>
</ol>
<p>Gulp  | 地址
— | —<br>Gulp官网|http://gulpjs.com
Gulp中文网|http://www.gulpjs.com.cn
gulp资料收集|https://github.com/Platform-CUF/use-gulp
Gulp：任务自动管理工具 - ruanyifeng|http://javascript.ruanyifeng.com/tool/gulp.html
Gulp插件|http://gulpjs.com/plugins
Gulp不完全入门教程|http://www.ido321.com/1622.html
为什么使用gulp?|https://github.com/hjzheng/CUF_meeting_knowledge_share/issues/33
Gulp安装及配合组件构建前端开发一体化|http://www.dbpoo.com/getting-started-with-gulp
Gulp 入门指南|https://github.com/nimojs/gulp-book
Gulp 入门指南 - nimojs|https://github.com/nimojs/blog/issues/19
Gulp入门教程|http://markpop.github.io/2014/09/17/Gulp%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B
Gulp in Action|http://www.imooc.com/video/5692
Gulp开发教程（翻译）|http://www.w3ctech.com/topic/134
前端构建工具gulpjs的使用介绍及技巧|http://www.cnblogs.com/2050/p/4198792.html</p>
<ol>
<li>Grunt</li>
</ol>
<p>Grunt  | 地址
— | —<br>gruntjs|http://gruntjs.com
Grunt中文网|http://www.gruntjs.net</p>
<ol>
<li>Fis</li>
</ol>
<p>Fis  | 地址
— | —<br>fis 官网|http://fex-team.github.io/fis-site/index.html
fis|http://fis.baidu.com</p>
<h4 id="12-轮播图-1"><a href="#12-轮播图-1" class="headerlink" title="12. 轮播图"></a>12. 轮播图</h4><ol>
<li>pc图轮</li>
</ol>
<p>pc图轮  | 地址
— | —<br>单屏轮播sochange|http://www.jsfoot.com/jquery/demo/2011-09-20/192.html
左右按钮多图切换|http://bxslider.com/examples/carousel-demystified
fullpage全屏轮播|https://github.com/alvarotrigo/fullPage.js</p>
<ol>
<li>移动端</li>
</ol>
<p>移动端  | 地址
— | —<br>无缝切换|http://www.swipejs.com
滑屏效果|http://www.idangero.us/swiper
全屏fullpage|https://github.com/peunzhang/fullpage
单个图片切换|https://github.com/qiqiboy/touchslider
单个全屏切换|https://github.com/peunzhang/slip.js
百度的切换库|http://touch.code.baidu.com/examples.html?qq-pf-to=pcqq.group
单个全屏切换|https://github.com/peunzhang/iSlider
滑屏效果|https://github.com/saw/touch-interfaces
旋转拖动设置|http://baijs.com/tinycircleslider
类似于swipe切换|http://touchslider.com
支持多种形式的触摸滑动|http://www.swiper.com.cn/demo/index.html
滑屏效果|https://github.com/joker-ye/main/blob/master/wap/index.html
大话主席pc移动图片轮换|http://www.superslide2.com
滑屏效果|https://github.com/hahnzhu/parallax.js
基于zepto的fullpage|https://github.com/yanhaijing/zepto.fullpage
[WebApp]定宽网页设计下，固定宽度布局开发WebApp并实现多终端下WebApp布局自适应|http://www.cnblogs.com/plums/archive/2013/01/10/WebApp-fixed-width-layout-of-multi-terminal-adapter-since.html
判断微信客户端的那些坑|http://loo2k.com/blog/detecting-wechat-client
可以通过javascript直接调用原生分享的工具|https://github.com/JefferyWang/nativeShare.js
JiaThis 分享到微信代码|http://www.jiathis.com/help/html/weixin-share-code
聊聊移动端跨平台开发的各种技术|http://fex.baidu.com/blog/2015/05/cross-mobile
前端自动化测试|http://www.zhihu.com/question/29922082
多种轮换图片|http://ajccom.github.io/niceslider
滑动侧边栏|https://mango.github.io/slideout</p>
<h4 id="13-文件上传-1"><a href="#13-文件上传-1" class="headerlink" title="13. 文件上传"></a>13. 文件上传</h4><p>文件上传  | 地址
— | —<br>百度上传组件|http://fex.baidu.com/webuploader
上传|https://blueimp.github.io/jQuery-File-Upload
flash 头像上传|http://www.hdfu.net
图片上传预览|http://www.dropzonejs.com
图片裁剪|http://elemefe.github.io/image-cropper
图片裁剪-shearphoto|http://www.shearphoto.com
jQuery图片处理|http://www.oschina.net/project/tag/284/jquery-image-tools?lang=0&amp;os=0&amp;sort=view&amp;p=2
|</p>
<h4 id="14-模拟select-1"><a href="#14-模拟select-1" class="headerlink" title="14. 模拟select"></a>14. 模拟select</h4><p>模拟select  | 地址
— | —<br>糖饼 select|http://aui.github.io/popupjs/doc/selectbox.html
flexselect|https://github.com/rmm5t/jquery-flexselect
双select|http://loudev.com
select2|http://select2.github.io
|</p>
<h4 id="15-取色插件-1"><a href="#15-取色插件-1" class="headerlink" title="15. 取色插件"></a>15. 取色插件</h4><p>取色插件  | 地址
— | —<br>类似 Photoshop 的界面取色插件|http://www.jq22.com/plugin/367
jquery color|https://github.com/jquery/jquery-color
取色插件集合|http://www.oschina.net/project/tag/287/color-picker
farbtastic 圆环＋正方形|https://github.com/mattfarina/farbtastic
|</p>
<h4 id="16-城市联动-1"><a href="#16-城市联动-1" class="headerlink" title="16. 城市联动"></a>16. 城市联动</h4><p>城市联动  | 地址
— | —<br>jquery.cityselect.js基于jQuery+JSON的省市或自定义联动效果|http://www.ijquery.cn/?p=360
|</p>
<h4 id="17-剪贴板-1"><a href="#17-剪贴板-1" class="headerlink" title="17. 剪贴板"></a>17. 剪贴板</h4><p>剪贴板  | 地址
— | —<br>剪贴板|https://github.com/zeroclipboard/zeroclipboard
clipboard 最新的剪切方案|http://zenorocha.github.io/clipboard.js
不是Flash的剪贴板|https://github.com/zenorocha/clipboard.js</p>
<h4 id="18-简繁转换-1"><a href="#18-简繁转换-1" class="headerlink" title="18. 简繁转换"></a>18. 简繁转换</h4><p>简繁转换  | 地址
— | —<br>简繁转换|https://github.com/BYVoid/OpenCC</p>
<h4 id="19-表格-Grid-1"><a href="#19-表格-Grid-1" class="headerlink" title="19. 表格 Grid"></a>19. 表格 Grid</h4><p>表格 Grid  | 地址
— | —<br>facebook表格|http://facebook.github.io/fixed-data-table
类似于Excel编辑表格-handsontable|http://handsontable.com
bootstrap-table插件|http://bootstrap-table.wenzhixin.net.cn
datatables|https://www.datatables.net</p>
<h4 id="20-在线演示-1"><a href="#20-在线演示-1" class="headerlink" title="20. 在线演示"></a>20. 在线演示</h4><p>在线演示  | 地址
— | —<br>js 在线编辑 - runjs|http://runjs.cn
js 在线编辑 - jsbin|http://jsbin.com
js 在线编辑 - codepen|http://codepen.io
js 在线编辑 - jsfiddle|http://jsfiddle.net
java 在线编辑 - runjs|http://ideone.com
js 在线编辑 - hcharts|http://code.hcharts.cn
js 在线编辑 - jsdm|http://jsdm.com
sql 在线编辑 - sqlfiddle|http://sqlfiddle.com
mozilla 在线编辑器|https://thimble.mozilla.org</p>
<h4 id="21-播放器-1"><a href="#21-播放器-1" class="headerlink" title="21. 播放器"></a>21. 播放器</h4><p>播放器  | 地址
— | —<br>Html5 VideoPlayer|https://github.com/zmmbreeze/DeadSimpleVideoPlayer</p>
<h4 id="22-粒子动画-1"><a href="#22-粒子动画-1" class="headerlink" title="22. 粒子动画"></a>22. 粒子动画</h4><p>粒子动画  | 地址
— | —<br>Proton 烟花|http://a-jie.github.io/Proton/#example</p>
<h3 id="九-Nodejs-1"><a href="#九-Nodejs-1" class="headerlink" title="九. Nodejs"></a>九. Nodejs</h3><p>Nodejs  | 地址
— | —<br>nodejs 篇幅比较巨大|http://liuqing.pw
Node.js 包教不包会|https://github.com/alsotang/node-lessons
篇幅比较少|http://www.rainweb.cn/article/category/Nodejs
node express 入门教程|http://www.w3cfuns.com/article-5598538-1-1.html
nodejs定时任务|http://my.oschina.net/u/568264/blog/193773
一个nodejs博客|http://60sky.com
【NodeJS 学习笔记04】新闻发布系统|http://www.cnblogs.com/yexiaochai/p/3536547.html
过年7天乐，学nodejs 也快乐|http://www.cnblogs.com/qqloving/p/3541099.html
七天学会NodeJS|https://github.com/nqdeng/7-days-nodejs
Nodejs学习笔记（二）— 事件模块|http://www.cnblogs.com/zhongweiv/p/nodejs_events.html
nodejs入门|http://www.cnblogs.com/liusuqi/p/3735491.html
angularjs nodejs|https://github.com/zensh/jsgen
从零开始nodejs系列文章|http://blog.fens.me/series-nodejs
理解nodejs|http://debuggable.com/posts/understanding-node-js:4bd98440-45e4-4a9a-8ef7-0f7ecbdd56cb
nodejs事件轮询|http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop
node入门|http://www.nodebeginner.org/index-zh-cn.html
nodejs cms|http://ourjs.com/detail/53e1f281c5910a9806000001
Node初学者入门，一本全面的NodeJS教程|http://ourjs.com/detail/529ca5950cb6498814000005
NodeJS的代码调试和性能调优|http://www.barretlee.com/blog/2015/10/07/debug-nodejs-in-command-line</p>
<h3 id="十-性能优化-1"><a href="#十-性能优化-1" class="headerlink" title="十. 性能优化"></a>十. 性能优化</h3><ol>
<li>常规优化</li>
</ol>
<p>常规优化|地址
— | —
Javascript高性能动画与页面渲染|http://www.infoq.com/cn/articles/javascript-high-performance-animation-and-page-rendering
移动H5前端性能优化指南|http://isux.tencent.com/h5-performance.html
5173首页前端性能优化实践|http://ued.5173.com/?p=1731
给网页设计师和前端开发者看的前端性能优化|http://www.uisdc.com/front-end-performance-for-web-designers-and-front-end-developers
复杂应用的 CSS 性能分析和优化建议|http://www.orzpoint.com/profiling-css-and-optimization-notes
张鑫旭——前端性能|http://www.zhangxinxu.com/wordpress/tag/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD
前端性能监控总结|http://www.xiaoqiang.org/javascript/font-end-performance-monitor.html
网站性能优化之CSS无图片技术|http://udc.weibo.com/2013/05/%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8Bcss%E6%97%A0%E5%9B%BE%E7%89%87%E6%8A%80%E6%9C%AF
web前端性能优化进阶路|http://www.aliued.cn/2013/01/20/web%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%BF%9B%E9%98%B6%E8%B7%AF.html
前端技术：网站性能优化之CSS无图片技术|http://my.eoe.cn/tuwandou/archive/4544.html
浏览器的加载与页面性能优化|http://www.baiduux.com/blog/2011/02/15/browser-loading
页面加载中的图片性能优化|http://www.w3ctech.com/p/1503
Hey——前端性能|http://www.feelcss.com/tag/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD
html优化|http://www.baiduux.com/blog/2010/03/15/html%E4%BC%98%E5%8C%96-2
99css——性能|http://www.99css.com/tag/%e6%80%a7%e8%83%bd
Yslow——性能优化|http://www.yslow.net/category.php?cid=20
YSLOW中文介绍|http://www.cnblogs.com/yslow
转一篇Yahoo关于网站性能优化的文章，兼谈本站要做的优化|http://www.360ito.com/article/40.html
Yahoo!团队实践分享：网站性能|http://www.360doc.com/content/10/0928/09/2588264_56971287.shtml
网站性能优化指南：什么使我们的网站变慢？|http://blog.jiasule.com/i/153
网站性能优化实践，减少加载时间，提高用户体验|http://www.powereasy.net/helpyou/knowledge/ecommerce/9593.html
浅谈网站性能优化 前端篇|http://www.umtry.com/archives/747.html
前端重构实践之如何对网站性能优化？|http://www.adinnet.cn/blog/designview/2012-7-12/678.html
前端性能优化：使用媒体查询加载指定大小的背景图片|http://www.gbin1.com/technology/javascript/20130708-front-end-performance-optimization-9
网站性能系列博文|http://www.mykuer.com/post/factors-that-affect-the-speed-of-web-site-open.html
加载，不只是少一点点|http://tgideas.qq.com/webplat/info/news_version3/804/808/811/m579/201109/41355.shtml
前端性能的测试与优化|http://mzhou.me/article/95310
分享网页加载速度优化的一些技巧？|http://www.gbin1.com/technology/html/20130217-tips-for-speed-up-page-loading
页面加载中的图片性能优化|http://www.f2es.com/images-bytes-opt
web前端优化(基于Yslow|http://www.tcreator.info/webSchool/website/Front-end-Opt-Yslow.html
网站性能优化工具大全|https://www.qianduan.net/website-performance-optimization-tool.html
【高性能前端1】高性能HTML|http://www.alloyteam.com/2012/10/high-performance-html
【高性能前端2】高性能CSS|http://www.alloyteam.com/2012/10/high-performance-css
由12306谈谈网站前端性能和后端性能优化|http://coolshell.cn/articles/6470.html
AlloyTeam——前端优化|http://www.alloyteam.com/webfrontend/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96
毫秒必争，前端网页性能最佳实践|http://www.cnblogs.com/developersupport/p/3248695.html
网站性能工具Yslow的使用方法|http://blog.sina.com.cn/s/blog_6e9d2e0701017kvu.html
前端工程与性能优化（上）：静态资源版本更新与缓存|http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part1
前端工程与性能优化（下）：静态资源管理与模板框架|http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part2
HTTPS连接的前几毫秒发生了什么|http://blog.jobbole.com/48369
Yslow|http://uicss.cn/yslow/#more-12319
Essential Web Performance Metrics — A Primer, Part 1|http://blog.smartbear.com/web-performance/essential-web-performance-metrics-a-primer-part-1
Essential Web Performance Metrics — Part 2|http://blog.smartbear.com/performance/essential-web-performance-metrics-part-2
YUISlide,针对移动设备的动画性能优化|http://jayli.github.io/blog/data/2011/12/23/yuislide.html
Improving Site Performance|http://joelglovier.com/improving-site-performance
让网站提速的最佳前端实践|http://segmentfault.com/a/1190000000367899
Why Website Speed is Important|http://sixrevisions.com/web-development/why-website-speed-is-important
Need for Speed – How to Improve your Website Performance|https://www.devbridge.com/articles/need-for-speed-how-to-improve-your-website-performance
阿里无线前端性能优化指南 (Pt.1 加载期优化 |https://github.com/amfe/article/issues/1
|</p>
<ol>
<li>优化工具</li>
</ol>
<p>优化工具|地址
— | —
JavaScript 性能分析新工具 OneProfile|http://www.html-js.com/article/3083
JavaScript 堆内存分析新工具 OneHeap|http://www.html-js.com/article/3091</p>
<ol>
<li>在线工具</li>
</ol>
<p>在线工具|地址
— | —
google在线工具|https://developers.google.com/speed/pagespeed/insights
阿里测|http://www.alibench.com
阿里-免费测试服务|http://itest.aliyun.com
阿里-F2etest多浏览器兼容性测试解决方案|https://github.com/alibaba/f2etest
js性能测试|http://jsperf.com
|</p>
<h3 id="十一-前端架构-1"><a href="#十一-前端架构-1" class="headerlink" title="十一. 前端架构"></a>十一. 前端架构</h3><p>前端架构|地址
— | —
技术架构|http://www.zhihu.com/topic/19612641
前端架构|http://saito.im/note/The-Architecture-of-F2E
如何成为前端架构师|http://www.zhihu.com/question/24092572
关于前端架构-张克军|http://hikejun.com/sharing/2010webrebuild/?file=fe-infrastructure.html
百度腾讯offer比较（腾讯游戏VS百度基础架构）|http://www.zhihu.com/question/25583350
|</p>
<h3 id="十二-个人作品-1"><a href="#十二-个人作品-1" class="headerlink" title="十二. 个人作品"></a>十二. 个人作品</h3><h4 id="1-推荐作品-1"><a href="#1-推荐作品-1" class="headerlink" title="1. 推荐作品"></a>1. 推荐作品</h4><p>推荐作品|地址
— | —
winter代码片段需要翻墙|https://gist.github.com/wintercn
fgm|http://www.fgm.cc/learn
岑安作品集|https://github.com/hongru/hongru.github.com
当耐特demo集合|http://kmdjs.github.io
米空格 js作品|http://www.laoshu133.com/Lab
myFocus|http://koen301.github.io
SeaJS组件库|http://panxuepeng.github.io/seajslib
颜海镜作品|http://yanhaijing.com/myProject
脚儿网作品|http://jo2.org/category/myworks
javascript个人作品|http://www.cnitblog.com/yemoo/category/3107.html
妙味的雷东升游戏作品|http://bbs.miaov.com/forum.php?mod=viewthread&amp;tid=7790
javascript作品集|http://bbs.csdn.net/topics/380227212
云五笔，灰度产生生成工具|https://github.com/TooBug/works
项目主页|http://koen301.github.io
个性的作品主页|http://zaole.net
播放器|http://static.tingall.com/v2/player
ucren js demos 集|http://ucren.com/blog/demos
智能社|http://www.zhinengshe.com/works_list.html
实例陈列架|http://demos.shizuwu.cn
zoye demo|http://zoye.sinaapp.com/demo
王员外|http://lab.yuanwai.wang
平凡|http://pingfan1990.sinaapp.com
jyg 游戏案例|http://www.lovewebgames.com
很多jquery插件|http://www.helloweba.com/list.html
不羁虫 - soJs 作品系列|http://www.bujichong.com/sojs/api/index.html
frozenui|http://frozenui.github.io/case.html
黑白棋|http://js-game.github.io/othello
fromone|http://yansm.github.io/fromone/index.html</p>
<h4 id="2-群员作品-1"><a href="#2-群员作品-1" class="headerlink" title="2. 群员作品"></a>2. 群员作品</h4><p>群员作品|地址
— | —
MDialog 合肥-M.J]|http://demo.webjyh.com
轮播图 上海－冷静]|http://sandbox.runjs.cn/show/do6zlrrk 
[广州—坚壳]|http://www.replace5.com
[成都 - 无痕]　感恩节专题|http://www.seejs.com/demos
[球霸天]|http://hacke2.github.io/works
[北京-小数]|http://www.cnblogs.com/mcat
[ptf] Magix 工具|http://thx.github.io/magix
[杭州-Pft] Magix 基于 MVC 结构和 Hash 驱动的 OPOA（One Page One Application）应用|http://thx.github.io/magix
[上海-剧中人]-实验室|http://bh-lay.com/labs
[上海-豪情 ] 作品集合|http://jikeytang.github.io
[成都-feeling]|http://guoshan.sinaapp.com
[上海-angela]|http://www.cnblogs.com/liyunhua
[海南-hank]作品|http://hcjp.github.io/work/demo
[上海-张力]博客|https://github.com/yibuyisheng/blogs/issues
[上海-zenki]作品|http://zkske121.github.io
移动端图案解锁|http://01google.sinaapp.com/locker.html
[合肥-M.J] - MPreview 移动端图片预览组|https://github.com/webjyh/MPreview.mobile
[合肥-M.J] - Mexam 移动端在线做题组|https://github.com/webjyh/Mexam
[北京-苏瑞] - dancer小人|http://letyougo.github.io/dancer
[上海-玄沐]- 个人网站|http://k.swao.cn/js
[厦门-二哲]- 个人博客|http://www.meckodo.com</p>
<h4 id="3-国外大牛精品-1"><a href="#3-国外大牛精品-1" class="headerlink" title="3. 国外大牛精品"></a>3. 国外大牛精品</h4><p>国外大牛精品|地址
— | —
pazguille|http://pazguille.me</p>
<h3 id="十三-简历模板-1"><a href="#十三-简历模板-1" class="headerlink" title="十三. 简历模板"></a>十三. 简历模板</h3><p>简历模板|地址
— | —
不错的个人简历|http://learnshare.github.io/about/index.html
简历|http://hcy2367.github.io/resume
张伦|http://ncuey.sinaapp.com/CrispElite/ 
简历|https://github.com/hacke2/ResumeSample
翁天信|http://blog.dandyweng.com/2013/07/how-my-website-was-created
动画方式的简历|http://www.webhek.com/misc/interactive-resume
组件丰富简历|http://www.linqing07.com/resume.html
简历池|http://www.mojianli.com/resume/view
haorooms博客|http://www.haorooms.com/about
Justin Young|http://cv.youngdze.com
|</p>
<h3 id="十四-面试题-1"><a href="#十四-面试题-1" class="headerlink" title="十四. 面试题"></a>十四. 面试题</h3><p>面试题|地址
— | —
那几个月在找工作（百度，网易游戏）|http://www.nowcoder.com/discuss/3196
2014最新面试题|http://www.html-js.com/article/1743
阿里前端面试题|http://www.w3cfuns.com/thread-5598563-2-1.html
2016校招内推 – 阿里巴巴前端 – 三面面试经历 |http://www.cnblogs.com/imwtr/p/4685546.html
腾讯面试题|http://www.w3cfuns.com/article-5599657-1-1.html
年后跳槽那点事：乐视+金山+360面试之行|http://www.cnblogs.com/lvdabao/p/3660707.html
阿里前端面试题上线|http://fatesinger.com/2722.html
拉勾网js面试题|http://www.cnblogs.com/52cik/p/js-question-lg.html
前端面试|http://www.cnblogs.com/allenxing/p/3724382.html
Web开发笔试面试题 大全|http://mianshiti.diandian.com
前端开发面试题|http://segmentfault.com/a/1190000000465431
2014最新前端面试题|https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions
百度面试|https://github.com/fex-team/interview-questions
面试题|http://www.w3cfuns.com/forum.php?mod=forumdisplay&amp;fid=51&amp;filter=typeid&amp;typeid=177
前端工作面试问题|https://github.com/darcyclarke/Front-end-Developer-Interview-Questions/tree/master/Chinese
前端开发面试题|http://segmentfault.com/a/1190000000465431
5个经典的前端面试问题|http://ourjs.com/detail/5%E4%B8%AA%E7%BB%8F%E5%85%B8%E7%9A%84%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98
最全前端面试问题及答案总结 |http://segmentfault.com/a/1190000002562454
如何面试一名前端开发工程师？|http://www.html-js.com/article/Large-search-front-team-column%202961
史上最全 前端开发面试问题及答案整理|https://github.com/hawx1993/Front-end-Interview-questions
前端实习生面试总结 |http://www.cnblogs.com/xiaoruo/p/4665163.html
史上最全 前端开发面试问题及答案整理|https://github.com/hawx1993/Front-end-Interview-questions
BAT及各大互联网公司2014前端笔试面试题：JavaScript篇|http://blog.jobbole.com/78738
前端开发面试题大收集|https://github.com/paddingme/Front-end-Web-Development-Interview-Question
收集的前端面试题和答案|https://github.com/qiu-deqing/FE-interview
如何面试前端工程师|http://www.zhihu.com/question/19568008
前端开发面试题|https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md
牛客网-笔试面经|http://www.nowcoder.com/discuss?type=2</p>
<h3 id="十五-iconfont-1"><a href="#十五-iconfont-1" class="headerlink" title="十五. iconfont"></a>十五. iconfont</h3><p>iconfont|地址
— | —
中文字体|http://www.zhihu.com/question/21253343
淘宝字库|http://iconfont.cn
字体|http://mux.alimama.com/fonts
制作教程|http://iconfont.cn/help/platform.html
zhangxinxu-icommon|http://www.zhangxinxu.com/wordpress/?s=icomoon
icommon|https://icomoon.io/app
用字体在网页中画ICON图标(推荐教程|http://imooc.com/learn/243
字体压缩工具|http://font-spider.org 感谢初级群　[深圳-小鱼] 的推荐</p>
<h3 id="十六-开发工具类-1"><a href="#十六-开发工具类-1" class="headerlink" title="十六. 开发工具类"></a>十六. 开发工具类</h3><ol>
<li>前端开发工具</li>
</ol>
<p>前端开发工具|地址
— | —
IntelliJ IDEA 简体中文专题教程|https://github.com/judasn/IntelliJ-IDEA-Tutorial
Webstorm,InterllIdea,Phpstorm|http://t.cn/8kZZ1Uy
SublimeText|https://github.com/jikeytang/sublime-text
Atom|https://atom.io
visual studio code|https://code.visualstudio.com</p>
<ol>
<li>Chrome, Firebug, Filddle 调试</li>
</ol>
<ol>
<li>Fiddler</li>
</ol>
<p>Fiddler|地址
— | —
Fiddler调式使用知多少(一深入研究|http://www.cnblogs.com/tugenhua0707/p/4623317.html
微信fiddle|http://www.cnblogs.com/strick/p/4570006.html
微信fiddle|http://gaoboy.com/article/26.html</p>
<ol>
<li>Chrome</li>
</ol>
<p>Chrome|地址
— | —
Google Chrome 官方|https://developer.chrome.com/devtools
Chrome - 基础|http://www.cnblogs.com/constantince/p/4565261.html
Chrome - 进阶|http://www.cnblogs.com/constantince/p/4579121.html
Chrome - 性能|http://www.cnblogs.com/constantince/p/4585983.html
Chrome - 性能进阶|http://www.cnblogs.com/constantince/p/4607497.html
Chrome - 移动|http://www.cnblogs.com/constantince/p/4624241.html
Chrome - 使用技巧|http://www.cnblogs.com/liyunhua/p/4544738.html
Chrome - Console控制台不完全指南|http://www.cnblogs.com/Wayou/p/chrome-console-tips-and-tricks.html
Chrome - Workspace使浏览器变成IDE|http://c7sky.com/chrome-devtools-workspace.html
network面板|http://www.html-js.com/article/Nothing-blind%202975
chrome开发工具快捷键|http://anti-code.com/devtools-cheatsheet
chrome调试工具常用功能整理|http://www.html-js.com/article/2327
Chrome 开发工具 Workspace 使用|http://www.iinterest.net/2014/05/09/chrome-dev-tool-workspace
Chrome神器Vimium快捷键学习记录 |http://www.cppblog.com/deercoder/archive/2011/10/22/158886.html
sass调试-w3cplus|http://www.w3cplus.com/sassguide/debug.html
如何更专业的使用Chrome开发者工具-w3cplus|http://www.w3cplus.com/tools/how-to-use-chrome-devtools-like-a-pro.html
chrome调试canvas|http://sentsin.com/web/253.html
chrome profiles1|https://developer.chrome.com/devtools/index
chrome profiles2|http://h5dev.uc.cn/article-25-1.html
chrome profiles3|http://www.oschina.net/translate/performance-optimisation-with-timeline-profiles
chrome移动版调试|https://developer.chrome.com/devtools/docs/mobile-emulation
chrome调试|http://ued.taobao.org/blog/2012/06/debug-with-chrome-dev-tool
chrome的调试|http://www.cnblogs.com/QLeelulu/archive/2011/08/28/2156402.html
chrome console 命令详解|https://developer.chrome.com/devtools/docs/commandline-api
查看事件绑定1|http://www.cnblogs.com/leonkao/p/3809655.html
查看事件绑定2|http://www.cnblogs.com/xiaoyao2011/p/3447421.html
神器——Chrome开发者工具(一|http://segmentfault.com/a/1190000000683599
奇趣百科性能优化(Chrome DevTools 中的 Timeline Profils 等工具使用介绍|https://xinranliu.me/2015-05-22-qiqu-performance
chrome 开发者工具的 15 个小技巧|http://frontenddev.org/link/15-tips-of-chrome-developer-tools.html
Chrome开发者工具不完全指南|http://1ke.co/course/361
Chrome 开发者工具使用技巧|http://segmentfault.com/a/1190000003882567</p>
<ol>
<li>Firebug</li>
</ol>
<p>Firebug|地址
— | —
firebug视频教程|http://www.imooc.com/learn/137
firefox 模拟器|https://developer.mozilla.org/zh-CN/docs/Tools/WebIDE
console.log 命令详解|http://www.cnblogs.com/ctriphire/p/4116207.html
Firebug入门指南|http://www.ruanyifeng.com/blog/2008/06/firebug_tutorial.html
Firebug控制台详解|http://www.ruanyifeng.com/blog/2011/03/firebug_console_tutorial.html</p>
<ol>
<li>移动,微信调试</li>
</ol>
<p>移动,微信调试|地址
— | —
浏览器端调试安卓|https://openstf.github.io
移动端前端开发调试|http://yujiangshui.com/multidevice-frontend-debug
使用 Chrome 远程调试 Android 设备|https://github.com/yujiangshui/CN-Chrome-DevTools/blob/remote-debugging/md/Use-Tools/remote-debugging.md
mac移动端调试|http://plus.uc.cn/document/webapp/doc5.html
mac移动端调试|http://www.mihtool.com
无线调试攻略|http://thx.github.io/mobile/debugging-in-mobile
无线调试攻略|http://yanhaijing.com/mobile/2014/12/17/web-debug-for-mobile
屌爆了,完美调试 微信webview(x5|http://www.jianshu.com/p/ccf124f1f74b
微信调试的那些事|http://liyaodong.com/2015/07/06/%E5%BE%AE%E4%BF%A1%E8%B0%83%E8%AF%95%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B
远程console|http://jsconsole.com
微信调试工具|http://blog.qqbrowser.cc
各种真机远程调试方法汇总|https://github.com/jieyou/remote_inspect_web_on_real_device</p>
<ol>
<li>iOS Simulator</li>
</ol>
<p>iOS Simulator|地址
— | —
Simulator|https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/iOS_Simulator_Guide/Introduction/Introduction.html
Xcode中的iOS模拟器(iOS Simulator的介绍和使用心得|http://www.crifan.com/intro_ios_simulator_in_xcode_and_usage_summary</p>
<ol>
<li>img</li>
</ol>
<p>img|地址
— | —
loading img|http://preloaders.net/en/circular
智图-图片优化平台|http://zhitu.isux.us
在线png优化|https://tinypng.com</p>
<ol>
<li>生成二维码</li>
</ol>
<p>生成二维码|地址
— | —
生成二维码|http://cli.im</p>
<ol>
<li>浏览器同步</li>
</ol>
<p>浏览器同步|地址
— | —
puer|https://github.com/leeluolee/puer
liveReload|http://livereload.com
f5|http://getf5.com
File Watchers|http://geek100.com/2608</p>
<ol>
<li>在线PPT制作</li>
</ol>
<p>在线PPT制作|地址
— | —
nodePPT|http://js8.in/2013/11/16/%E6%8E%A8%E8%8D%90nodeppt%EF%BC%9A%E4%BD%BF%E7%94%A8markdown%E8%AF%AD%E6%B3%95%E6%9D%A5%E5%86%99%E7%BD%91%E9%A1%B5ppt
PPT|https://github.com/ksky521/nodePPT
reveal|https://github.com/hakimel/reveal.js
slippy|https://github.com/Seldaek/slippy</p>
<h3 id="十七-前端导航网站-1"><a href="#十七-前端导航网站-1" class="headerlink" title="十七. 前端导航网站"></a>十七. 前端导航网站</h3><p>前端导航网站|地址
— | —
界面清爽的前端导航|http://uxbees.com/index.html
前端导航|http://whycss.com
前端网址导航|http://www.daqianduan.com/nav
前端名录|http://sentsin.com/daohang
前端导航|http://123.jser.us
前端开发资源|http://www.css88.com/nav
网址导航|http://www.haourl.cn
前端开发仓库 - 众多效果的收集地|http://code.ciaoca.com 
前端资源导航|https://github.com/jnoodle/f2e-collect
F2E 前端导航|http://f2e.im/static/pages/nav/index.html</p>
<h3 id="十八-常用CDN-1"><a href="#十八-常用CDN-1" class="headerlink" title="十八. 常用CDN"></a>十八. 常用CDN</h3><p>常用CDN|地址
— | —
新浪CDN|http://lib.sinaapp.com
百度静态资源公共库|http://cdn.code.baidu.com
360网站卫士常用前端公共库CDN服务|http://libs.useso.com
Bootstrap中文网开源项目免费 CDN 服务|http://www.bootcdn.cn
开放静态文件 CDN - 七牛|http://staticfile.org
CDN加速 - jq22|http://www.jq22.com/cdn
jQuery CDN|http://code.jquery.com
Google jQuery CDN|http://www.google-jquery-cdn.com
微软CDN|http://www.asp.net/ajax/cdn</p>
<h3 id="十九-Git-SVN-Github-1"><a href="#十九-Git-SVN-Github-1" class="headerlink" title="十九. Git,SVN,Github"></a>十九. Git,SVN,Github</h3><ol>
<li>Git</li>
</ol>
<p>Git|地址
— | —
git-scm|http://git-scm.com
廖雪峰-Git教程|http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000
git-for-windows|https://git-for-windows.github.io
GitHub 添加 SSH keys|http://daemon369.github.io/git/2015/03/10/add-ssh-keys-for-github
gogithub|http://www.worldhello.net/gotgithub/index.html
git常规命令练习|http://pcottle.github.io/learnGitBranching
git的资料整理|https://github.com/xirong/my-git
我所记录的git命令（非常实用）|http://www.cnblogs.com/fanfan259/p/4810517.html
企业开发git工作流模式探索部分休整|https://github.com/xirong/my-git/blob/master/git-workflow-tutorial.md
GitHub 漫游指南|https://github.com/phodal/github-roam
GitHub秘籍|https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md
使用git和github进行协同开发流程|http://livoras.com/post/28
动画方式练习git|http://onlywei.github.io/explain-git-with-d3</p>
<p>via <a href="https://github.com/MoonYaph/Front--end--tutorial" target="_blank" rel="external">Front–end–tutorial</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;综合类&lt;/p&gt;
    
    </summary>
    
      <category term="Frontend" scheme="http://kingzez.com/categories/Frontend/"/>
    
    
      <category term="Frontend" scheme="http://kingzez.com/tags/Frontend/"/>
    
  </entry>
  
  <entry>
    <title>Javascript中的枚举 [译]</title>
    <link href="http://kingzez.com/2016/05/23/Enums-in-javascript-%E8%AF%91/"/>
    <id>http://kingzez.com/2016/05/23/Enums-in-javascript-译/</id>
    <published>2016-05-23T02:35:39.000Z</published>
    <updated>2016-05-23T16:16:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> <em>Javascript中的枚举</em> ，</strong>你想这样定义枚举：<a id="more"></a>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var SizeEnum = &#123;</div><div class="line"><span class="symbol">  SMALL:</span> <span class="number">1</span>,</div><div class="line"><span class="symbol">  MEDIUM:</span> <span class="number">2</span>,</div><div class="line"><span class="symbol">  LARGE:</span> <span class="number">3</span>,</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>然后这样用它：
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">var mySize</span> = SizeEnum.SMALL;</div></pre></td></tr></table></figure></p>
<p>如果你想把枚举对应的值加上属性，你可以给它们加一个额外的对象：
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">var SizeEnum = &#123;</div><div class="line"><span class="symbol">  SMALL:</span> <span class="number">1</span>,</div><div class="line"><span class="symbol">  MEDIUM:</span> <span class="number">2</span>,</div><div class="line"><span class="symbol">  LARGE:</span> <span class="number">3</span>,</div><div class="line"><span class="symbol">  properties:</span> &#123;</div><div class="line"><span class="symbol">    1:</span> &#123;<span class="string">name:</span> <span class="string">"small"</span>, <span class="string">value:</span> <span class="number">1</span>, <span class="string">code:</span> <span class="string">"S"</span>&#125;,</div><div class="line"><span class="symbol">    2:</span> &#123;<span class="string">name:</span> <span class="string">"medium"</span>, <span class="string">value:</span> <span class="number">2</span>, <span class="string">code:</span> <span class="string">"M"</span>&#125;,</div><div class="line"><span class="symbol">    3:</span> &#123;<span class="string">name:</span> <span class="string">"large"</span>, <span class="string">value:</span> <span class="number">3</span>, <span class="string">code:</span> <span class="string">"L"</span>&#125;</div><div class="line">  &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>然后像这样用
<figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">var</span> mySize = SizeEnum.MEDIUM;</div><div class="line"><span class="built_in">var</span> myCode = SizeEnum.properties[mySize].<span class="built_in">code</span>; // myCode == <span class="string">"M"</span></div></pre></td></tr></table></figure></p>
<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>上面描述的是对JavaScript枚举思考很长时间得出的结果。它尝试最好的结合以原语为枚举值（序列化）和以对象作为值（允许值对应属性），进一步阅读了解我是怎么实现这一方法。</p>
<h4 id="重新理解枚举"><a href="#重新理解枚举" class="headerlink" title="重新理解枚举"></a>重新理解枚举</h4><p>我最近偶然发现自己在StackOverflow已经回答了几年的问题，读过一些评论之后思考了一下觉得这是一个很值得话题。</p>
<p><em>那么评论中都是那些问题呢？</em></p>
<p><strong>在JavaScript中写枚举最好的方法是？</strong>
首先，在回答问题之前，先了解一下什么是枚举？在JavaScript中写意着什么。让我们先看一下枚举的定义：
<strong>枚举是什么?</strong></p>
<blockquote>
<p>在数学和计算机科学理论中，一个集的枚举是列出某些有穷序列集的所有成员的程序，或者是一种特定类型对象的计数。这两种类型经常（但不总是）重叠。枚举是一个被命名的整型常数的集合
<em>–维基百科: 枚举</em></p>
</blockquote>
<p>一个很好的例子：
<figure class="highlight capnproto"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">enum</span> <span class="title">WeekDay</span> = </span>&#123;MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY&#125;;</div></pre></td></tr></table></figure></p>
<p>总结：枚举是一组预定义的常量中的一个制约变量。在上面的例子中WeekDay是一个枚举值，MONDAY、TUESDAY等是集合中的常量，也可称为枚举成员，如果我们声明一个变量：
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">WeekDay payDay<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>我们可以把它分配给MONDAY，TUESDAY等任何一个常量，直到包括SUNDAY，但不是其他的什么，像12、<code>labour day</code>。
…这给我们带来一个问题。
<strong>它不能在JavaScript中实现</strong>
javascript是弱类型语言，这意味着不需要事先声明一个特定类型的变量。在Java（强类型）中你可能这样写：
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> i; <span class="comment">// declares a variable named i which may hold integer values.</span></div></pre></td></tr></table></figure></p>
<p>如果之后你要给它分配一个字符串，你需要这样：
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">i</span> = <span class="string">"Hello World"</span><span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>但是编译器会返回错误，中断生成文件
不像Javascript中:
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var i;</div><div class="line">i = <span class="number">10</span>;</div><div class="line">i = <span class="string">"Hello World"</span>;</div><div class="line">i = <span class="number">3.1415</span>;</div><div class="line">i = <span class="literal">true</span>;</div><div class="line">i = [<span class="string">'my'</span>, <span class="string">'array'</span>];</div><div class="line">i = &#123;<span class="string">look:</span> <span class="string">'at'</span>, <span class="string">my:</span> <span class="string">'object'</span>&#125;;</div></pre></td></tr></table></figure></p>
<p>正如你所看到，我们声明了一个变量（通过关键字var）,但它在运行时类型是不受限制的。我们可以给他分配任何值。维基百科的措辞有点尴尬，但是你读到这行</p>
<blockquote>
<p>A variable that has been declared as having an enumerated type can be assigned any of the enumerators as a value.</p>
</blockquote>
<p>它表明，任何的枚举数都可被分配，但是什么都没有，所以它限制了可以分配给变量的值。在JavaScript中我们只是不能这样做，因此我们不能写真正的枚举，我们可以模仿C语言中提供的一些方便的方法，但要记住，我们只模仿它提供的语法糖。</p>
<p><strong>在javascript中写枚举</strong>
我是从强类型的java中转过来的，但也很长时间没有写枚举了，因此Java的编程给我带来一些不同的解决方法来模仿写出枚举。</p>
<p><em>常数，常常是i、c、w。命名约定</em>
只列出你使用类顶部的常数
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DAYS_MONDAY = <span class="number">0</span>;</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DAYS_TUESDAY = <span class="number">1</span>;</div><div class="line"><span class="comment">// ..</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DAYS_SUNDAY = <span class="number">6</span>;</div></pre></td></tr></table></figure></p>
<p><em>简单常量类</em>
像上面简单的例子，把常量放到专用的类中用于复用：
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DaysEnum</span> </span>&#123;</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MONDAY = <span class="number">0</span>;</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TUESDAY = <span class="number">1</span>;</div><div class="line">  <span class="comment">// ..</span></div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SUNDAY = <span class="number">6</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><em>常数实例类</em></p>
<p>Java的枚举促使了js枚举的仿制，它使用一个专用的私有构造函数类（除了类本身没有被实例化）和使用实例本身作为枚举值：
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DaysEnum</span> </span>&#123;</div><div class="line">  <span class="function"><span class="keyword">private</span> <span class="title">DaysEnum</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DaysEnum MONDAY = <span class="keyword">new</span> DaysEnum();</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DaysEnum TUESDAY = <span class="keyword">new</span> DaysEnum();</div><div class="line">  <span class="comment">// ..</span></div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DaysEnum SUNDAY = <span class="keyword">new</span> DaysEnum();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>另外，使用枚举实例的枚举数是一种优雅的方式，这使得这样模拟枚举类型的安全，与其他两个变量比，枚举的变量将是整数：
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> payDay = DAYS_FRIDAY; <span class="comment">// variation 1</span></div><div class="line"><span class="keyword">int</span> payDay = DaysEnum.FRIDAY; <span class="comment">// variation 2</span></div></pre></td></tr></table></figure></p>
<p>它仍然有可能指定一个完全错误的值，如128这样的枚举。相比之下，第三的变异实际上限制可以被分配到枚举列出枚举成员的值：
<figure class="highlight protobuf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">DaysEnum payDay = DaysEnum.FRIDAY; <span class="comment">// ok</span></div><div class="line">DaysEnum payDay = <span class="number">128</span>; <span class="comment">// compiler error</span></div></pre></td></tr></table></figure></p>
<p>作为新增加的亮点，第三枚举模式允许我们添加额外的字段，例如把一天加上名字，甚至方法（isWeekendDay()为例）的枚举。因此，从Java中了解的这些模式，我在StackOverflow上建议JavaScript使用第三枚举的方法来写。
目前仍是在StackOverFlow上得到的星最多的，因此我要解释一下为什么，然后告诉你我个人认为在JavaScript中获得最大的收益就是要尽可能的少写枚举。</p>
<p><strong><em>那么替代这种方法的又是什么呢？ 这样的方法又有什么错误呢？</em></strong></p>
<p>第三枚举在JavaScript中是这样：
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var DaysEnum = &#123;</div><div class="line"><span class="symbol">  MONDAY:</span> &#123;&#125;, <span class="comment">// optionally you can give the object properties and methods</span></div><div class="line"><span class="symbol">  TUESDAY:</span> &#123;&#125;,</div><div class="line">  <span class="comment">// ..</span></div><div class="line"><span class="symbol">  SUNDAY:</span> &#123;&#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>但是，我现在不再推荐这种风格，不要再使用它了。
<strong><em>为什么不呢?</em></strong>
因为在评论中有人指出关于线程的问题，当数据序列化的时候这将出现一些问题，为了理解为什么这样，让我们来看一看当我们把DaysEnum中的一个枚举值作为一个对象的字段会发生什么：
<figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">var <span class="attr">myObject</span> = &#123;</div><div class="line">  payDay: DaysEnum.MONDAY</div><div class="line">&#125;;</div><div class="line"></div><div class="line">var <span class="attr">yesterday</span> = DaysEnum.THURSDAY, </div><div class="line">    <span class="attr">today</span> = DaysEnum.MONDAY;</div><div class="line"><span class="keyword">if</span> (<span class="attr">yesterday</span> == myObject.payDay)</div><div class="line">  alert(<span class="string">"Yesterday was pay day... but not today..."</span>);</div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="attr">today</span> == myObject.payDay)</div><div class="line">  alert(<span class="string">"Today is pay day! Yippie!!!"</span>);</div><div class="line"><span class="keyword">else</span></div><div class="line">  alert(<span class="string">"Neither yesterday nor today are pay days... I'm broke!"</span>);</div></pre></td></tr></table></figure></p>
<p>到目前为止很好，它会alert出我们预期的”Today is pay day! Yippie!!!”(今天是周一)，但是我们将<code>myObject</code>序列化转成JSON,再将它反序列化：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> serialized = <span class="built_in">JSON</span>.stringify(myObject);</div><div class="line">  alert(<span class="string">"serialized myObject: "</span> + serialized);</div><div class="line"><span class="keyword">var</span> deserializedObject = <span class="built_in">JSON</span>.parse(serialized);</div><div class="line"><span class="keyword">if</span> (yesterday == deserializedObject.payDay)</div><div class="line">  alert(<span class="string">"Yesterday was pay day... but not today..."</span>);</div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span> (today == deserializedObject.payDay)</div><div class="line">  alert(<span class="string">"Today is pay day! Yippie!!!"</span>);</div><div class="line"><span class="keyword">else</span></div><div class="line">  alert(<span class="string">"Neither yesterday nor today are pay days... I'm broke!"</span>);</div></pre></td></tr></table></figure></p>
<p>这个结果是”Neither yesterday nor today are pay days… I’m broke!”原因是依靠反序列化<code>JSON.parse</code>创建一个新的对象作为payDay的值，这个新对象不同于<code>DaysEnum.FRIDAY</code>因此在比较之后会错误。</p>
<p>我认为这样解决问题不是一个很好的方法，能系列化和反序列化枚举是很重要的，而不能忽视的。这就是为什么我建议不要使用这种模式，相反的是用第二枚举解决问题就不会出现这样的问题：
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var DaysEnum = &#123;</div><div class="line"><span class="symbol">  MONDAY:</span> <span class="string">"monday"</span>,</div><div class="line"><span class="symbol">  TUESDAY:</span> <span class="string">"tuesday"</span>,</div><div class="line">  <span class="comment">// ..</span></div><div class="line"><span class="symbol">  SUNDAY:</span> <span class="string">"sunday"</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>（或者你可以用数字代替字符串的值，都可以达到同样的效果），让我们检查一下这个做系列化的安全性：
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> myObject = &#123;</div><div class="line">  <span class="attr">payDay</span>: DaysEnum.FRIDAY</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> serialized = <span class="built_in">JSON</span>.stringify(myObject);</div><div class="line">  alert(<span class="string">"serialized myObject: "</span> + serialized);</div><div class="line"><span class="keyword">var</span> deserializedObject = <span class="built_in">JSON</span>.parse(serialized);</div><div class="line"><span class="keyword">if</span> (yesterday == deserializedObject.payDay)</div><div class="line">  alert(<span class="string">"Yesterday was pay day... but not today..."</span>);</div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span> (today == deserializedObject.payDay)</div><div class="line">  alert(<span class="string">"Today is pay day! Yippie!!!"</span>);</div><div class="line"><span class="keyword">else</span></div><div class="line">  alert(<span class="string">"Neither yesterday not today are pay days... I'm broke!"</span>);</div></pre></td></tr></table></figure></p>
<p>正如预期的那样，结果是”Today is pay day! Yippie!!!”。但是我绝得给枚举的添加字段和方法真的很棒，我们可以这样做：
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var SizeEnum = &#123;</div><div class="line"><span class="symbol">  SMALL:</span> &#123;<span class="string">name:</span> <span class="string">"small"</span>, <span class="string">value:</span> <span class="number">1</span>, <span class="string">code:</span> <span class="string">"S"</span>&#125;,</div><div class="line"><span class="symbol">  MEDIUM:</span> &#123;<span class="string">name:</span> <span class="string">"medium"</span>, <span class="string">value:</span> <span class="number">2</span>, <span class="string">code:</span> <span class="string">"M"</span>&#125;,</div><div class="line"><span class="symbol">  LARGE:</span> &#123;<span class="string">name:</span> <span class="string">"large"</span>, <span class="string">value:</span> <span class="number">3</span>, <span class="string">code:</span> <span class="string">"L"</span>&#125;,</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>但是可以说这不需要序列化和反序列化，我们只需要给额外的对象增加一个属性W:
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">var SizeEnum = &#123;</div><div class="line"><span class="symbol">  SMALL:</span> <span class="number">1</span>,</div><div class="line"><span class="symbol">  MEDIUM:</span> <span class="number">2</span>,</div><div class="line"><span class="symbol">  LARGE:</span> <span class="number">3</span>,</div><div class="line"><span class="symbol">  properties:</span> &#123;</div><div class="line"><span class="symbol">    1:</span> &#123;<span class="string">name:</span> <span class="string">"small"</span>, <span class="string">value:</span> <span class="number">1</span>, <span class="string">code:</span> <span class="string">"S"</span>&#125;,</div><div class="line"><span class="symbol">    2:</span> &#123;<span class="string">name:</span> <span class="string">"medium"</span>, <span class="string">value:</span> <span class="number">2</span>, <span class="string">code:</span> <span class="string">"M"</span>&#125;,</div><div class="line"><span class="symbol">    3:</span> &#123;<span class="string">name:</span> <span class="string">"large"</span>, <span class="string">value:</span> <span class="number">3</span>, <span class="string">code:</span> <span class="string">"L"</span>&#125;</div><div class="line">  &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>这样我们能够取到枚举数的属性值，像这样：
<figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">var</span> mySize = SizeEnum.MEDIUM;</div><div class="line"><span class="built_in">var</span> myCode = SizeEnum.properties[mySize].<span class="built_in">code</span>; // myCode == <span class="string">"M"</span></div></pre></td></tr></table></figure></p>
<p>……不可否认优雅的方式。我想说的是，对于一个枚举值的序列化/反序列化的能力远比在实例上属性更重要。</p>
<p><strong><em>Object.freeze</em></strong>
在类型安全的语言中，枚举的这些类型都是不变的，值得集合不改变也不做自身的常量值，在JavaScript中，任何时候我们都可以覆盖赋值所有的常数，或添加新的属性，如果你想避免这种情况，可以看一下<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze" target="_blank" rel="external">Objcet.freeze</a></p>
<p>Object.freeze() 方法可以冻结一个对象。冻结对象是指那些不能添加新的属性，不能修改已有属性的值，不能删除已有属性，以及不能修改已有属性的可枚举性、可配置性、可写性的对象。也就是说，这个对象永远是不可变的。该方法返回被冻结的对象。</p>
<p>听起来还真是一个很需要的方法，是吗~？</p>
<p>因为不是所有的浏览器都支持，你应该在使用前测试是否可用：
<figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (<span class="built_in">Object</span>.freeze)</div><div class="line">  <span class="built_in">Object</span>.freeze(DaysEnum);</div></pre></td></tr></table></figure></p>
<p>好了，就到这~JavaScript中的枚举，写代码去！</p>
<p>第一次翻译外文，水平有限，如有误，请批正。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; &lt;em&gt;Javascript中的枚举&lt;/em&gt; ，&lt;/strong&gt;你想这样定义枚举：
    
    </summary>
    
      <category term="js" scheme="http://kingzez.com/categories/js/"/>
    
    
      <category term="js" scheme="http://kingzez.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>undefined和null的区别</title>
    <link href="http://kingzez.com/2016/05/19/undefined%E5%92%8Cnull%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://kingzez.com/2016/05/19/undefined和null的区别/</id>
    <published>2016-05-19T08:37:31.000Z</published>
    <updated>2016-05-19T09:26:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>js中的<code>undefined</code>和<code>null</code>是何等的相似，几乎是一样的，所以要说一下细微的区别，先动手操作一下，在浏览器Console中执行：<a id="more"></a>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">undefined</span> <span class="string">==</span> <span class="literal">null</span> <span class="string">//返回值</span> <span class="literal">true</span></div></pre></td></tr></table></figure></p>
<p>这说明一定情况下undefined和null可以转化成false。执行
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">Number</span><span class="params">(undefined)</span></span>  <span class="comment">//返回值 NAN</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">Number</span><span class="params">(null)</span></span>  <span class="comment">//返回值 0</span></div></pre></td></tr></table></figure></p>
<p>这也是说明undefined和null的区别所在。执行
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">typeof</span><span class="params">(undefined)</span></span> <span class="comment">//返回值 "undefined"</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">typeof</span><span class="params">(null)</span></span>  <span class="comment">//返回值 "object"</span></div></pre></td></tr></table></figure></p>
<p>但是以上的区别在实际使用中又不是很明显。
<strong>undefined</strong>表示”缺少值”，表示此处应该有一个值，但是还没有定义，这种情况下使用<code>undefined</code>，常用方法：</p>
<blockquote>
<ol>
<li>变量被声明了，但没有赋值时，就等于undefined</li>
<li>调用函数时，应该提供的参数没有提供，该参数等于undefined</li>
<li>对象没有赋值的属性，该属性的值为undefined</li>
<li>函数没有返回值，默认返回的是undefined</li>
</ol>
</blockquote>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a;</div><div class="line">a <span class="comment">// undefined</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span></span>(b)&#123;</div><div class="line">	console.log(b)</div><div class="line">&#125;</div><div class="line">test(); <span class="comment">//undefined</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> <span class="keyword">new</span><span class="type">Obj</span> = <span class="keyword">new</span> <span class="type">Object</span>();</div><div class="line">	<span class="keyword">new</span><span class="type">Obj</span>.hello;</div><div class="line"><span class="comment">// undefined</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> c = test();</div><div class="line">c <span class="comment">//undefined</span></div></pre></td></tr></table></figure>
<p><strong>null</strong>表示”没有对象”，表示此处不应该有值，这种情况下使用<code>null</code>，常用方法：</p>
<blockquote>
<ol>
<li>作为函数的参数，表示该函数的参数不是对象</li>
<li>作为对象原型链的终点</li>
</ol>
</blockquote>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Object</span>.getPrototypeOf(<span class="built_in">Object</span>.prototype)</div><div class="line"><span class="comment">// null</span></div></pre></td></tr></table></figure>
<p>就酱~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;js中的&lt;code&gt;undefined&lt;/code&gt;和&lt;code&gt;null&lt;/code&gt;是何等的相似，几乎是一样的，所以要说一下细微的区别，先动手操作一下，在浏览器Console中执行：
    
    </summary>
    
      <category term="js" scheme="http://kingzez.com/categories/js/"/>
    
    
      <category term="js" scheme="http://kingzez.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Blog无图片时添加随机thumbnail</title>
    <link href="http://kingzez.com/2016/05/18/Blog%E6%97%A0%E5%9B%BE%E7%89%87%E6%97%B6%E6%B7%BB%E5%8A%A0%E9%9A%8F%E6%9C%BAthumbnail/"/>
    <id>http://kingzez.com/2016/05/18/Blog无图片时添加随机thumbnail/</id>
    <published>2016-05-18T11:03:25.000Z</published>
    <updated>2016-05-22T14:01:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>有的文章中没有添加如上这种banner图，所以呢，博客右侧的Recent的缩略图只会显示默认的图，<a id="more"></a>有时候连续五篇文章都没有图那就连续五张缩略图一样了，很不美观，不喜欢~所以就把它改成没有缩略图情况下随机变换缩略图，不多说，上代码：
首先需要通过Math对象生成出一个随机数，random方法可以生成一个0~1之间的随机数，得到的数再乘10，结果即为0~10之间的一个随机数，再通过round方法对该随机数进行四舍五入得到一个整数
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> randomBgIndex = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * <span class="number">10</span>);</div></pre></td></tr></table></figure></p>
<p>再声明一个数组用来存放缩略图的路径
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">var thumbnailBg = []<span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">0</span>] = <span class="string">"css/images/thumb-default-small.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">1</span>] = <span class="string">"css/images/thumb-default-small1.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">2</span>] = <span class="string">"css/images/thumb-default-small2.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">3</span>] = <span class="string">"css/images/thumb-default-small3.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">4</span>] = <span class="string">"css/images/thumb-default-small4.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">5</span>] = <span class="string">"css/images/thumb-default-small5.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">6</span>] = <span class="string">"css/images/thumb-default-small6.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">7</span>] = <span class="string">"css/images/thumb-default-small7.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">8</span>] = <span class="string">"css/images/thumb-default-small8.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">9</span>] = <span class="string">"css/images/thumb-default-small9.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">10</span>] = <span class="string">"css/images/thumb-default-small10.png"</span><span class="comment">; </span></div><div class="line">&lt;span style=<span class="string">"background-image:url(&lt;%= thumbnailBg[randomBgIndex] %&gt;)"</span>  class=<span class="string">"thumbnail-image thumbnail-none"</span>&gt;&lt;/span&gt;</div></pre></td></tr></table></figure></p>
<p>&lt;% %&gt;这里是blog用的ejs语法<code>thumbnailBg[randomBgIndex]</code>用来取随机产生的值。</p>
<p>完整的代码：
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">var randomBgIndex = Math.round(Math.random() * <span class="number">10</span>)<span class="comment">;</span></div><div class="line">var thumbnailBg = []<span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">0</span>] = <span class="string">"css/images/thumb-default-small.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">1</span>] = <span class="string">"css/images/thumb-default-small1.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">2</span>] = <span class="string">"css/images/thumb-default-small2.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">3</span>] = <span class="string">"css/images/thumb-default-small3.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">4</span>] = <span class="string">"css/images/thumb-default-small4.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">5</span>] = <span class="string">"css/images/thumb-default-small5.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">6</span>] = <span class="string">"css/images/thumb-default-small6.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">7</span>] = <span class="string">"css/images/thumb-default-small7.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">8</span>] = <span class="string">"css/images/thumb-default-small8.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">9</span>] = <span class="string">"css/images/thumb-default-small9.png"</span><span class="comment">; </span></div><div class="line">	thumbnailBg[<span class="number">10</span>] = <span class="string">"css/images/thumb-default-small10.png"</span><span class="comment">; </span></div><div class="line">&lt;span style=<span class="string">"background-image:url(&lt;%= thumbnailBg[randomBgIndex] %&gt;)"</span>  class=<span class="string">"thumbnail-image thumbnail-none"</span>&gt;&lt;/span&gt;</div></pre></td></tr></table></figure></p>
<p>OK~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有的文章中没有添加如上这种banner图，所以呢，博客右侧的Recent的缩略图只会显示默认的图，
    
    </summary>
    
      <category term="js" scheme="http://kingzez.com/categories/js/"/>
    
    
      <category term="js" scheme="http://kingzez.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js通过hash方式数组去重</title>
    <link href="http://kingzez.com/2016/05/17/js%E9%80%9A%E8%BF%87hash%E6%96%B9%E5%BC%8F%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/"/>
    <id>http://kingzez.com/2016/05/17/js通过hash方式数组去重/</id>
    <published>2016-05-17T14:53:15.000Z</published>
    <updated>2016-05-19T10:57:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前面试中遇到过数组去重的问题，方法很多，但是相对来说比较好的方式是通过hash方式来进行去重，这样的效率要高很多，以下是具体代码：
<a id="more"></a></p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">var newArr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>];</div><div class="line"></div><div class="line">function killArray(arr)&#123;</div><div class="line">	var hash = &#123;&#125;,</div><div class="line">	    result = [];</div><div class="line"></div><div class="line">	for(var i=<span class="number">0</span>; i&lt;arr.length; i++)&#123;</div><div class="line">		if(!hash[arr[i]])&#123;</div><div class="line">		    hash[arr[i]] = true;</div><div class="line">		    result.push(arr[i]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	return result;</div><div class="line">&#125;</div><div class="line"></div><div class="line">killArray(newArr); <span class="comment">//输出[1,2,3,4,5,6,7,8,9]</span></div></pre></td></tr></table></figure>
<p>完成~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前面试中遇到过数组去重的问题，方法很多，但是相对来说比较好的方式是通过hash方式来进行去重，这样的效率要高很多，以下是具体代码：
    
    </summary>
    
      <category term="js" scheme="http://kingzez.com/categories/js/"/>
    
    
      <category term="js" scheme="http://kingzez.com/tags/js/"/>
    
  </entry>
  
</feed>
